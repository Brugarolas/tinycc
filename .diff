diff --git a/examples/_start.h b/examples/_start.h
index 0ba1627b..244c7467 100644
--- a/examples/_start.h
+++ b/examples/_start.h
@@ -14,6 +14,7 @@ void int0(void);
 
 int  main(void);
 void *memset(void *ptr, int value, size_t size);
+int memmove(void *, const void *, int );
 void _start(void) {
     main();
     int0();
@@ -21,9 +22,20 @@ void _start(void) {
 
 
 void *memset(void *ptr, int value, size_t size) {
-  int *p = (int*)ptr;
+  // int *p = (int*)ptr;
+  // for (size_t i = 0; i < size / sizeof(int); i++) {
+  //   *p++ = value;
+  // }
+  // return ptr;
+}
+
+
+int memmove(void * dst, const void *src, int  size) {
+  int *idst = (int*)dst;
+  int *isrc = (int*)src;
   for (size_t i = 0; i < size / sizeof(int); i++) {
-    *p++ = value;
+     *idst++ = *isrc++;
   }
-  return ptr;
+  return size;
 }
+
diff --git a/examples/curr.c b/examples/curr.c
index fc5e60df..ffe70dd4 100755
--- a/examples/curr.c
+++ b/examples/curr.c
@@ -6,64 +6,95 @@
 int *terminal32 = (int *)(0x88888888 >> 2);
 void putchar(int c) { *terminal32 = c; }
 
-// // // typedef struct {
-// // //   int x, y;
-// // // } vector2i ;
-// // //
-// // //
-// // //
-// // // int dot(vector2i v1, vector2i v2) {
-// // //   return v1.x * v2.x + v1.y*v2.y;
-// // // }
-// // //
-// // // int struc_play(void) {
-// // //   vector2i v,r;
-// // //   v.x = 0x1;
-// // //   v.y = 0x1;
-// // //
-// // //   r.x = 0x2;
-// // //   r.y = 0x2;
-// // //
-// // //   return dot(v, r);
-// // // }
-// //
-void bubble_sort(int arr[], int n) {
-    int temp;
-    int swapped;
-
-    for (int i = 0; i < n - 1; i++) {
-        swapped = 0;
-
-        for (int j = 0; j < n - 1 - i; j++) {
-            // Compare adjacent elements
-            if (arr[j] > arr[j + 1]) {
-                // Swap them if they are in the wrong order
-                temp = arr[j];
-                arr[j] = arr[j + 1];
-                arr[j + 1] = temp;
-                swapped = 1; // Set the swapped flag
-            }
+/* @Attention, to garantee puts will work the str has to be 4 byte aligned :) 
+  That means every string will in the whole program have to be padded with zero to ensure 
+  every string is a multiple of 4 hehe, remember that last byte of str literal is always zero 
+*/
+void puts(const char *str) {
+    int *ptr = (int *)str;
+    int word;
+
+    int len = 0;
+    while (1) {
+        word = *ptr++;
+
+        len += 4;
+        // Verifica se algum byte no int é zero (terminador nulo).
+        if (((word >> 24) & 0xFF) == 0) {
+            return;
+        }
+        putchar((word >> 24) & 0xFF);
+        if (((word >> 16) & 0xFF)== 0) {
+            return;
+        }
+        putchar((word >> 16) & 0xFF);
+        if (((word >> 8) & 0xFF)== 0) {
+            return;
         }
+        putchar((word >> 8) & 0xFF);
+        if (((word >> 0) & 0xFF)== 0) {
+            return;
+        }
+        putchar((word >> 0) & 0xFF);
+      
+    }
+}
 
-        // If no two elements were swapped in this pass, the array is sorted
-        if (swapped == 0) {
-            break;
+unsigned int strlen(const char *str) {
+    int *ptr = (int *)str;
+    int word;
+
+    int len = 0;
+    while (1) {
+        word = *ptr++;
+
+        len += 4;
+        // Verifica se algum byte no int é zero (terminador nulo).
+        if (((word >> 24) & 0xFF) == 0) {
+            return len - 1;
+        }
+        if (((word >> 16) & 0xFF)== 0) {
+            return len - 2;
+        }
+        if (((word >> 8) & 0xFF)== 0) {
+            return len - 3;
+        }
+        if (((word >> 0) & 0xFF)== 0) {
+            return len  - 4;
         }
     }
 }
 
-// int div10(int n) {
-//     int q, r;
-//     q = (n >> 1) + (n >> 2);
-//     q = q + (q >> 4);
-//     q = q + (q >> 8);
-//     q = q + (q >> 16);
-//     q = q >> 3;
-//     r = n - (((q << 2) + q) << 1);
-//     q = q + (r > 9);
-//     return q;
-// }
-//
+typedef struct {
+  int x, y;
+} vector2i;
+
+int dot(vector2i v1, vector2i v2) { return v1.x * v2.x + v1.y * v2.y; }
+
+void bubble_sort(int arr[], int n) {
+  int temp;
+  int swapped;
+
+  for (int i = 0; i < n - 1; i++) {
+    swapped = 0;
+
+    for (int j = 0; j < n - 1 - i; j++) {
+      // Compare adjacent elements
+      if (arr[j] > arr[j + 1]) {
+        // Swap them if they are in the wrong order
+        temp = arr[j];
+        arr[j] = arr[j + 1];
+        arr[j + 1] = temp;
+        swapped = 1; // Set the swapped flag
+      }
+    }
+
+    // If no two elements were swapped in this pass, the array is sorted
+    if (swapped == 0) {
+      break;
+    }
+  }
+}
 
 void printi(int num) {
   int divisor = 1;
@@ -84,7 +115,7 @@ void printi(int num) {
   if (isNegative > 0) {
     putchar('-');
   } else {
-    putchar('+');
+    // putchar('+');
   }
   // Extract and print each digit
   while (divisor > 0) {
@@ -94,36 +125,55 @@ void printi(int num) {
   }
 }
 
+int struc_play(void) {
+  vector2i v, r;
+  v.x = 0x1;
+  v.y = 0x1;
+
+  r.x = 0x2;
+  r.y = 0x2;
+
+  int d = dot(v, r);
+  return d;
+}
 
 int main() {
-  int arr[] = {0x1, 0x2, 0x3, 0x4, 0x5};
+  int arr[] = {-1, -564, 420, 69, 1200};
   int n = sizeof(arr) / sizeof(arr[0]);
-
-  // bubble_sort(arr, n);
   int i, a;
+
+  printi(arr[2]);
   for (i = 0; i < n; i++) {
     a = arr[i];
     printi(a);
+    putchar(' ');
   }
-  return i;
+
+  putchar('\n');
+  bubble_sort(arr, n);
+
+  for (i = 0; i < n; i++) {
+    a = arr[i];
+    printi(a);
+    putchar(' ');
+  }
+  return struc_play();
 }
 
 #else
 
+#include "_start.h"
 
-// void memset();
+int *terminal32 = (int *)(0x88888888 >> 2);
+void putchar(int c) { *terminal32 = c; }
 
-int main(void) {
-  int arr[] = {0xf1, 0xf2, 0xf3, 0xf4, 0xf5};
-  int n = sizeof(arr) / sizeof(arr[0]);
 
-  int i, a;
-  for (i = 0; i < n; i++) {
-    a = arr[i];
-  }
-  return a;
-}
 
-void memset(void* ptr, int val, int size) {}
+int main(void) {
+    puts("acc");
+    puts("bcc");
+    return strlen("123");
+   // int* ptr = (int*) (4 >> 2);
+}
 
 #endif
diff --git a/examples/out/poxim-ex1.bin b/examples/out/bin/poxim-ex1.bin
similarity index 87%
rename from examples/out/poxim-ex1.bin
rename to examples/out/bin/poxim-ex1.bin
index 40add406..399df5c1 100755
Binary files a/examples/out/poxim-ex1.bin and b/examples/out/bin/poxim-ex1.bin differ
diff --git a/examples/out/poxim-ex2.bin b/examples/out/bin/poxim-ex2.bin
similarity index 87%
rename from examples/out/poxim-ex2.bin
rename to examples/out/bin/poxim-ex2.bin
index d2cdcb69..2ca80436 100755
Binary files a/examples/out/poxim-ex2.bin and b/examples/out/bin/poxim-ex2.bin differ
diff --git a/examples/out/poxim-ex3.bin b/examples/out/bin/poxim-ex3.bin
similarity index 85%
rename from examples/out/poxim-ex3.bin
rename to examples/out/bin/poxim-ex3.bin
index 567e1933..42e4a2ad 100755
Binary files a/examples/out/poxim-ex3.bin and b/examples/out/bin/poxim-ex3.bin differ
diff --git a/examples/out/poxim-fib-recursion.bin b/examples/out/bin/poxim-fib-recursion.bin
similarity index 87%
rename from examples/out/poxim-fib-recursion.bin
rename to examples/out/bin/poxim-fib-recursion.bin
index fa763098..571f19c2 100755
Binary files a/examples/out/poxim-fib-recursion.bin and b/examples/out/bin/poxim-fib-recursion.bin differ
diff --git a/examples/out/poxim-print-alphabet.bin b/examples/out/bin/poxim-print-alphabet.bin
similarity index 90%
rename from examples/out/poxim-print-alphabet.bin
rename to examples/out/bin/poxim-print-alphabet.bin
index 0b73746f..a82a229f 100755
Binary files a/examples/out/poxim-print-alphabet.bin and b/examples/out/bin/poxim-print-alphabet.bin differ
diff --git a/examples/out/poxim-print-num.bin b/examples/out/bin/poxim-print-num.bin
similarity index 85%
rename from examples/out/poxim-print-num.bin
rename to examples/out/bin/poxim-print-num.bin
index 9d8d41fc..dd96e039 100755
Binary files a/examples/out/poxim-print-num.bin and b/examples/out/bin/poxim-print-num.bin differ
diff --git a/examples/out/poxim-simple-if.bin b/examples/out/bin/poxim-simple-if.bin
similarity index 90%
rename from examples/out/poxim-simple-if.bin
rename to examples/out/bin/poxim-simple-if.bin
index 67f68489..d28a755d 100755
Binary files a/examples/out/poxim-simple-if.bin and b/examples/out/bin/poxim-simple-if.bin differ
diff --git a/examples/out/bin/poxim-sort.bin b/examples/out/bin/poxim-sort.bin
new file mode 100755
index 00000000..bc6b44ba
Binary files /dev/null and b/examples/out/bin/poxim-sort.bin differ
diff --git a/examples/out/poxim-terminal.bin b/examples/out/bin/poxim-terminal.bin
similarity index 88%
rename from examples/out/poxim-terminal.bin
rename to examples/out/bin/poxim-terminal.bin
index 48c5d30f..d50731ef 100755
Binary files a/examples/out/poxim-terminal.bin and b/examples/out/bin/poxim-terminal.bin differ
diff --git a/examples/out/poxim-while.bin b/examples/out/bin/poxim-while.bin
similarity index 90%
rename from examples/out/poxim-while.bin
rename to examples/out/bin/poxim-while.bin
index b6212d2d..d713f2ca 100755
Binary files a/examples/out/poxim-while.bin and b/examples/out/bin/poxim-while.bin differ
diff --git a/examples/out/dump/poxim-ex1.poximdump b/examples/out/dump/poxim-ex1.poximdump
new file mode 100644
index 00000000..3254fc9d
--- /dev/null
+++ b/examples/out/dump/poxim-ex1.poximdump
@@ -0,0 +1,119 @@
+   0:    03 c0 7f fc       mov    sp, 32764
+   4:    dc 00 00 01       bun    1        # 0xc
+   8:    fc 00 00 00       int    0
+   c:    28 00 01 80       push   r6
+  10:    28 00 01 c0       push   r7
+  14:    08 de 00 00       mov    r6, sp
+  18:    08 e6 00 00       mov    r7, r6
+  1c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  20:    4f de 00 00       subi   sp, sp, 0
+  24:    e4 00 00 4d       call   77<<2        # 0x15c
+  28:    e7 ff ff f7       call   -9<<2        # 0x8
+  2c:    0b c6 00 00       mov    sp, r6
+  30:    2c 00 01 c0       pop    r7
+  34:    2c 00 01 80       pop    r6
+  38:    7c 00 00 00       ret   
+  3c:    28 00 01 80       push   r6
+  40:    28 00 01 c0       push   r7
+  44:    08 de 00 00       mov    r6, sp
+  48:    08 e6 00 00       mov    r7, r6
+  4c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  50:    4f de 00 00       subi   sp, sp, 0
+  54:    0b c6 00 00       mov    sp, r6
+  58:    2c 00 01 c0       pop    r7
+  5c:    2c 00 01 80       pop    r6
+  60:    7c 00 00 00       ret   
+  64:    28 00 01 80       push   r6
+  68:    28 00 01 c0       push   r7
+  6c:    08 de 00 00       mov    r6, sp
+  70:    08 e6 00 00       mov    r7, r6
+  74:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  78:    4f de 00 0c       subi   sp, sp, 12
+  7c:    68 27 00 04       l32    r1, [r7+4]<<2
+  80:    74 27 00 00       s32    [r7+0]<<2, r1
+  84:    68 27 00 05       l32    r1, [r7+5]<<2
+  88:    74 27 ff ff       s32    [r7-1]<<2, r1
+  8c:    04 20 00 00       movs   r1, 0
+  90:    74 27 ff fe       s32    [r7-2]<<2, r1
+  94:    68 27 00 18       l32    r1, [r7+24]<<2
+  98:    10 01 0d 01       srl    r0, r1, r1, 1
+  9c:    68 47 ff f8       l32    r2, [r7-8]<<2
+  a0:    14 02 08 00       cmp    r2, r1
+  a4:    a8 00 00 11       bae    17        # 0xec
+  a8:    dc 00 00 05       bun    5        # 0xc0
+  ac:    68 27 ff f8       l32    r1, [r7-8]<<2
+  b0:    08 41 00 00       mov    r2, r1
+  b4:    48 21 00 01       addi   r1, r1, 1
+  b8:    74 27 ff fe       s32    [r7-2]<<2, r1
+  bc:    df ff ff f5       bun    -11        # 0x94
+  c0:    68 27 00 00       l32    r1, [r7+0]<<2
+  c4:    08 41 00 00       mov    r2, r1
+  c8:    48 21 00 04       addi   r1, r1, 4
+  cc:    74 27 00 00       s32    [r7+0]<<2, r1
+  d0:    68 27 ff ff       l32    r1, [r7-1]<<2
+  d4:    08 61 00 00       mov    r3, r1
+  d8:    48 21 00 04       addi   r1, r1, 4
+  dc:    74 27 ff ff       s32    [r7-1]<<2, r1
+  e0:    68 63 00 00       l32    r3, [r3+0]<<2
+  e4:    74 62 00 00       s32    [r2+0]<<2, r3
+  e8:    df ff ff f0       bun    -16        # 0xac
+  ec:    68 47 00 06       l32    r2, [r7+6]<<2
+  f0:    0b c6 00 00       mov    sp, r6
+  f4:    2c 00 01 c0       pop    r7
+  f8:    2c 00 01 80       pop    r6
+  fc:    7c 00 00 00       ret   
+ 100:    28 00 01 80       push   r6
+ 104:    28 00 01 c0       push   r7
+ 108:    08 de 00 00       mov    r6, sp
+ 10c:    08 e6 00 00       mov    r7, r6
+ 110:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 114:    4f de 00 00       subi   sp, sp, 0
+ 118:    68 27 00 04       l32    r1, [r7+4]<<2
+ 11c:    68 47 00 05       l32    r2, [r7+5]<<2
+ 120:    08 21 10 00       add    r1, r1, r2
+ 124:    0c 21 10 00       sub    r1, r1, r2
+ 128:    68 47 00 06       l32    r2, [r7+6]<<2
+ 12c:    08 21 10 00       add    r1, r1, r2
+ 130:    0c 21 10 00       sub    r1, r1, r2
+ 134:    68 47 00 07       l32    r2, [r7+7]<<2
+ 138:    08 21 10 00       add    r1, r1, r2
+ 13c:    0c 21 10 00       sub    r1, r1, r2
+ 140:    68 47 00 08       l32    r2, [r7+8]<<2
+ 144:    0c 21 10 00       sub    r1, r1, r2
+ 148:    08 41 00 00       mov    r2, r1
+ 14c:    0b c6 00 00       mov    sp, r6
+ 150:    2c 00 01 c0       pop    r7
+ 154:    2c 00 01 80       pop    r6
+ 158:    7c 00 00 00       ret   
+ 15c:    28 00 01 80       push   r6
+ 160:    28 00 01 c0       push   r7
+ 164:    08 de 00 00       mov    r6, sp
+ 168:    08 e6 00 00       mov    r7, r6
+ 16c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 170:    4f de 00 08       subi   sp, sp, 8
+ 174:    04 20 00 02       movs   r1, 2
+ 178:    74 27 00 00       s32    [r7+0]<<2, r1
+ 17c:    04 20 00 05       movs   r1, 5
+ 180:    28 00 00 40       push   r1
+ 184:    04 20 00 04       movs   r1, 4
+ 188:    28 00 00 40       push   r1
+ 18c:    04 20 00 03       movs   r1, 3
+ 190:    28 00 00 40       push   r1
+ 194:    04 20 00 02       movs   r1, 2
+ 198:    28 00 00 40       push   r1
+ 19c:    04 20 00 01       movs   r1, 1
+ 1a0:    28 00 00 40       push   r1
+ 1a4:    e7 ff ff d6       call   -42<<2        # 0x100
+ 1a8:    4b de 00 14       addi   sp, sp, 20
+ 1ac:    4c 42 00 45       subi   r2, r2, 69
+ 1b0:    74 47 ff ff       s32    [r7-1]<<2, r2
+ 1b4:    68 27 00 00       l32    r1, [r7+0]<<2
+ 1b8:    68 47 ff ff       l32    r2, [r7-1]<<2
+ 1bc:    08 21 10 00       add    r1, r1, r2
+ 1c0:    0c 21 10 00       sub    r1, r1, r2
+ 1c4:    08 41 00 00       mov    r2, r1
+ 1c8:    0b c6 00 00       mov    sp, r6
+ 1cc:    2c 00 01 c0       pop    r7
+ 1d0:    2c 00 01 80       pop    r6
+ 1d4:    7c 00 00 00       ret   
+  ...
diff --git a/examples/out/dump/poxim-ex2.poximdump b/examples/out/dump/poxim-ex2.poximdump
new file mode 100644
index 00000000..533b6ddc
--- /dev/null
+++ b/examples/out/dump/poxim-ex2.poximdump
@@ -0,0 +1,139 @@
+   0:    03 c0 7f fc       mov    sp, 32764
+   4:    dc 00 00 01       bun    1        # 0xc
+   8:    fc 00 00 00       int    0
+   c:    28 00 01 80       push   r6
+  10:    28 00 01 c0       push   r7
+  14:    08 de 00 00       mov    r6, sp
+  18:    08 e6 00 00       mov    r7, r6
+  1c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  20:    4f de 00 00       subi   sp, sp, 0
+  24:    e4 00 00 5b       call   91<<2        # 0x194
+  28:    e7 ff ff f7       call   -9<<2        # 0x8
+  2c:    0b c6 00 00       mov    sp, r6
+  30:    2c 00 01 c0       pop    r7
+  34:    2c 00 01 80       pop    r6
+  38:    7c 00 00 00       ret   
+  3c:    28 00 01 80       push   r6
+  40:    28 00 01 c0       push   r7
+  44:    08 de 00 00       mov    r6, sp
+  48:    08 e6 00 00       mov    r7, r6
+  4c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  50:    4f de 00 00       subi   sp, sp, 0
+  54:    0b c6 00 00       mov    sp, r6
+  58:    2c 00 01 c0       pop    r7
+  5c:    2c 00 01 80       pop    r6
+  60:    7c 00 00 00       ret   
+  64:    28 00 01 80       push   r6
+  68:    28 00 01 c0       push   r7
+  6c:    08 de 00 00       mov    r6, sp
+  70:    08 e6 00 00       mov    r7, r6
+  74:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  78:    4f de 00 0c       subi   sp, sp, 12
+  7c:    68 27 00 04       l32    r1, [r7+4]<<2
+  80:    74 27 00 00       s32    [r7+0]<<2, r1
+  84:    68 27 00 05       l32    r1, [r7+5]<<2
+  88:    74 27 ff ff       s32    [r7-1]<<2, r1
+  8c:    04 20 00 00       movs   r1, 0
+  90:    74 27 ff fe       s32    [r7-2]<<2, r1
+  94:    68 27 00 18       l32    r1, [r7+24]<<2
+  98:    10 01 0d 01       srl    r0, r1, r1, 1
+  9c:    68 47 ff f8       l32    r2, [r7-8]<<2
+  a0:    14 02 08 00       cmp    r2, r1
+  a4:    a8 00 00 11       bae    17        # 0xec
+  a8:    dc 00 00 05       bun    5        # 0xc0
+  ac:    68 27 ff f8       l32    r1, [r7-8]<<2
+  b0:    08 41 00 00       mov    r2, r1
+  b4:    48 21 00 01       addi   r1, r1, 1
+  b8:    74 27 ff fe       s32    [r7-2]<<2, r1
+  bc:    df ff ff f5       bun    -11        # 0x94
+  c0:    68 27 00 00       l32    r1, [r7+0]<<2
+  c4:    08 41 00 00       mov    r2, r1
+  c8:    48 21 00 04       addi   r1, r1, 4
+  cc:    74 27 00 00       s32    [r7+0]<<2, r1
+  d0:    68 27 ff ff       l32    r1, [r7-1]<<2
+  d4:    08 61 00 00       mov    r3, r1
+  d8:    48 21 00 04       addi   r1, r1, 4
+  dc:    74 27 ff ff       s32    [r7-1]<<2, r1
+  e0:    68 63 00 00       l32    r3, [r3+0]<<2
+  e4:    74 62 00 00       s32    [r2+0]<<2, r3
+  e8:    df ff ff f0       bun    -16        # 0xac
+  ec:    68 47 00 06       l32    r2, [r7+6]<<2
+  f0:    0b c6 00 00       mov    sp, r6
+  f4:    2c 00 01 c0       pop    r7
+  f8:    2c 00 01 80       pop    r6
+  fc:    7c 00 00 00       ret   
+ 100:    28 00 01 80       push   r6
+ 104:    28 00 01 c0       push   r7
+ 108:    08 de 00 00       mov    r6, sp
+ 10c:    08 e6 00 00       mov    r7, r6
+ 110:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 114:    4f de 00 00       subi   sp, sp, 0
+ 118:    68 27 00 04       l32    r1, [r7+4]<<2
+ 11c:    68 47 00 05       l32    r2, [r7+5]<<2
+ 120:    0c 21 10 00       sub    r1, r1, r2
+ 124:    08 41 00 00       mov    r2, r1
+ 128:    0b c6 00 00       mov    sp, r6
+ 12c:    2c 00 01 c0       pop    r7
+ 130:    2c 00 01 80       pop    r6
+ 134:    7c 00 00 00       ret   
+ 138:    28 00 01 80       push   r6
+ 13c:    28 00 01 c0       push   r7
+ 140:    08 de 00 00       mov    r6, sp
+ 144:    08 e6 00 00       mov    r7, r6
+ 148:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 14c:    4f de 00 00       subi   sp, sp, 0
+ 150:    68 27 00 04       l32    r1, [r7+4]<<2
+ 154:    68 47 00 05       l32    r2, [r7+5]<<2
+ 158:    08 21 10 00       add    r1, r1, r2
+ 15c:    0c 21 10 00       sub    r1, r1, r2
+ 160:    68 47 00 06       l32    r2, [r7+6]<<2
+ 164:    08 21 10 00       add    r1, r1, r2
+ 168:    0c 21 10 00       sub    r1, r1, r2
+ 16c:    68 47 00 07       l32    r2, [r7+7]<<2
+ 170:    08 21 10 00       add    r1, r1, r2
+ 174:    0c 21 10 00       sub    r1, r1, r2
+ 178:    68 47 00 08       l32    r2, [r7+8]<<2
+ 17c:    0c 21 10 00       sub    r1, r1, r2
+ 180:    08 41 00 00       mov    r2, r1
+ 184:    0b c6 00 00       mov    sp, r6
+ 188:    2c 00 01 c0       pop    r7
+ 18c:    2c 00 01 80       pop    r6
+ 190:    7c 00 00 00       ret   
+ 194:    28 00 01 80       push   r6
+ 198:    28 00 01 c0       push   r7
+ 19c:    08 de 00 00       mov    r6, sp
+ 1a0:    08 e6 00 00       mov    r7, r6
+ 1a4:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 1a8:    4f de 00 08       subi   sp, sp, 8
+ 1ac:    04 20 00 02       movs   r1, 2
+ 1b0:    74 27 00 00       s32    [r7+0]<<2, r1
+ 1b4:    04 20 00 05       movs   r1, 5
+ 1b8:    28 00 00 40       push   r1
+ 1bc:    04 20 00 04       movs   r1, 4
+ 1c0:    28 00 00 40       push   r1
+ 1c4:    04 20 00 03       movs   r1, 3
+ 1c8:    28 00 00 40       push   r1
+ 1cc:    04 20 00 02       movs   r1, 2
+ 1d0:    28 00 00 40       push   r1
+ 1d4:    04 20 00 01       movs   r1, 1
+ 1d8:    28 00 00 40       push   r1
+ 1dc:    e7 ff ff d6       call   -42<<2        # 0x138
+ 1e0:    4b de 00 14       addi   sp, sp, 20
+ 1e4:    4c 42 00 45       subi   r2, r2, 69
+ 1e8:    74 47 ff ff       s32    [r7-1]<<2, r2
+ 1ec:    68 27 ff ff       l32    r1, [r7-1]<<2
+ 1f0:    28 00 00 40       push   r1
+ 1f4:    68 27 00 00       l32    r1, [r7+0]<<2
+ 1f8:    28 00 00 40       push   r1
+ 1fc:    e7 ff ff c0       call   -64<<2        # 0x100
+ 200:    4b de 00 08       addi   sp, sp, 8
+ 204:    68 27 00 00       l32    r1, [r7+0]<<2
+ 208:    68 47 ff ff       l32    r2, [r7-1]<<2
+ 20c:    08 21 10 00       add    r1, r1, r2
+ 210:    0c 21 10 00       sub    r1, r1, r2
+ 214:    08 41 00 00       mov    r2, r1
+ 218:    0b c6 00 00       mov    sp, r6
+ 21c:    2c 00 01 c0       pop    r7
+ 220:    2c 00 01 80       pop    r6
+ 224:    7c 00 00 00       ret   
+  ...
diff --git a/examples/out/dump/poxim-ex3.poximdump b/examples/out/dump/poxim-ex3.poximdump
new file mode 100644
index 00000000..454d2f0c
--- /dev/null
+++ b/examples/out/dump/poxim-ex3.poximdump
@@ -0,0 +1,152 @@
+   0:    03 c0 7f fc       mov    sp, 32764
+   4:    dc 00 00 01       bun    1        # 0xc
+   8:    fc 00 00 00       int    0
+   c:    28 00 01 80       push   r6
+  10:    28 00 01 c0       push   r7
+  14:    08 de 00 00       mov    r6, sp
+  18:    08 e6 00 00       mov    r7, r6
+  1c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  20:    4f de 00 00       subi   sp, sp, 0
+  24:    e4 00 00 68       call   104<<2        # 0x1c8
+  28:    e7 ff ff f7       call   -9<<2        # 0x8
+  2c:    0b c6 00 00       mov    sp, r6
+  30:    2c 00 01 c0       pop    r7
+  34:    2c 00 01 80       pop    r6
+  38:    7c 00 00 00       ret   
+  3c:    28 00 01 80       push   r6
+  40:    28 00 01 c0       push   r7
+  44:    08 de 00 00       mov    r6, sp
+  48:    08 e6 00 00       mov    r7, r6
+  4c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  50:    4f de 00 00       subi   sp, sp, 0
+  54:    0b c6 00 00       mov    sp, r6
+  58:    2c 00 01 c0       pop    r7
+  5c:    2c 00 01 80       pop    r6
+  60:    7c 00 00 00       ret   
+  64:    28 00 01 80       push   r6
+  68:    28 00 01 c0       push   r7
+  6c:    08 de 00 00       mov    r6, sp
+  70:    08 e6 00 00       mov    r7, r6
+  74:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  78:    4f de 00 0c       subi   sp, sp, 12
+  7c:    68 27 00 04       l32    r1, [r7+4]<<2
+  80:    74 27 00 00       s32    [r7+0]<<2, r1
+  84:    68 27 00 05       l32    r1, [r7+5]<<2
+  88:    74 27 ff ff       s32    [r7-1]<<2, r1
+  8c:    04 20 00 00       movs   r1, 0
+  90:    74 27 ff fe       s32    [r7-2]<<2, r1
+  94:    68 27 00 18       l32    r1, [r7+24]<<2
+  98:    10 01 0d 01       srl    r0, r1, r1, 1
+  9c:    68 47 ff f8       l32    r2, [r7-8]<<2
+  a0:    14 02 08 00       cmp    r2, r1
+  a4:    a8 00 00 11       bae    17        # 0xec
+  a8:    dc 00 00 05       bun    5        # 0xc0
+  ac:    68 27 ff f8       l32    r1, [r7-8]<<2
+  b0:    08 41 00 00       mov    r2, r1
+  b4:    48 21 00 01       addi   r1, r1, 1
+  b8:    74 27 ff fe       s32    [r7-2]<<2, r1
+  bc:    df ff ff f5       bun    -11        # 0x94
+  c0:    68 27 00 00       l32    r1, [r7+0]<<2
+  c4:    08 41 00 00       mov    r2, r1
+  c8:    48 21 00 04       addi   r1, r1, 4
+  cc:    74 27 00 00       s32    [r7+0]<<2, r1
+  d0:    68 27 ff ff       l32    r1, [r7-1]<<2
+  d4:    08 61 00 00       mov    r3, r1
+  d8:    48 21 00 04       addi   r1, r1, 4
+  dc:    74 27 ff ff       s32    [r7-1]<<2, r1
+  e0:    68 63 00 00       l32    r3, [r3+0]<<2
+  e4:    74 62 00 00       s32    [r2+0]<<2, r3
+  e8:    df ff ff f0       bun    -16        # 0xac
+  ec:    68 47 00 06       l32    r2, [r7+6]<<2
+  f0:    0b c6 00 00       mov    sp, r6
+  f4:    2c 00 01 c0       pop    r7
+  f8:    2c 00 01 80       pop    r6
+  fc:    7c 00 00 00       ret   
+ 100:    28 00 01 80       push   r6
+ 104:    28 00 01 c0       push   r7
+ 108:    08 de 00 00       mov    r6, sp
+ 10c:    08 e6 00 00       mov    r7, r6
+ 110:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 114:    4f de 00 00       subi   sp, sp, 0
+ 118:    68 27 00 04       l32    r1, [r7+4]<<2
+ 11c:    04 40 01 a4       movs   r2, 420
+ 120:    74 41 00 00       s32    [r1+0]<<2, r2
+ 124:    0b c6 00 00       mov    sp, r6
+ 128:    2c 00 01 c0       pop    r7
+ 12c:    2c 00 01 80       pop    r6
+ 130:    7c 00 00 00       ret   
+ 134:    28 00 01 80       push   r6
+ 138:    28 00 01 c0       push   r7
+ 13c:    08 de 00 00       mov    r6, sp
+ 140:    08 e6 00 00       mov    r7, r6
+ 144:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 148:    4f de 00 00       subi   sp, sp, 0
+ 14c:    68 27 00 04       l32    r1, [r7+4]<<2
+ 150:    68 47 00 05       l32    r2, [r7+5]<<2
+ 154:    0c 21 10 00       sub    r1, r1, r2
+ 158:    08 41 00 00       mov    r2, r1
+ 15c:    0b c6 00 00       mov    sp, r6
+ 160:    2c 00 01 c0       pop    r7
+ 164:    2c 00 01 80       pop    r6
+ 168:    7c 00 00 00       ret   
+ 16c:    28 00 01 80       push   r6
+ 170:    28 00 01 c0       push   r7
+ 174:    08 de 00 00       mov    r6, sp
+ 178:    08 e6 00 00       mov    r7, r6
+ 17c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 180:    4f de 00 00       subi   sp, sp, 0
+ 184:    68 27 00 04       l32    r1, [r7+4]<<2
+ 188:    68 47 00 05       l32    r2, [r7+5]<<2
+ 18c:    08 21 10 00       add    r1, r1, r2
+ 190:    0c 21 10 00       sub    r1, r1, r2
+ 194:    68 47 00 06       l32    r2, [r7+6]<<2
+ 198:    08 21 10 00       add    r1, r1, r2
+ 19c:    0c 21 10 00       sub    r1, r1, r2
+ 1a0:    68 47 00 07       l32    r2, [r7+7]<<2
+ 1a4:    08 21 10 00       add    r1, r1, r2
+ 1a8:    0c 21 10 00       sub    r1, r1, r2
+ 1ac:    68 47 00 08       l32    r2, [r7+8]<<2
+ 1b0:    0c 21 10 00       sub    r1, r1, r2
+ 1b4:    08 41 00 00       mov    r2, r1
+ 1b8:    0b c6 00 00       mov    sp, r6
+ 1bc:    2c 00 01 c0       pop    r7
+ 1c0:    2c 00 01 80       pop    r6
+ 1c4:    7c 00 00 00       ret   
+ 1c8:    28 00 01 80       push   r6
+ 1cc:    28 00 01 c0       push   r7
+ 1d0:    08 de 00 00       mov    r6, sp
+ 1d4:    08 e6 00 00       mov    r7, r6
+ 1d8:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 1dc:    4f de 00 08       subi   sp, sp, 8
+ 1e0:    04 20 00 02       movs   r1, 2
+ 1e4:    74 27 00 00       s32    [r7+0]<<2, r1
+ 1e8:    04 20 00 12       movs   r1, 18
+ 1ec:    74 27 ff ff       s32    [r7-1]<<2, r1
+ 1f0:    04 20 00 05       movs   r1, 5
+ 1f4:    28 00 00 40       push   r1
+ 1f8:    04 20 00 10       movs   r1, 16
+ 1fc:    28 00 00 40       push   r1
+ 200:    04 20 00 08       movs   r1, 8
+ 204:    28 00 00 40       push   r1
+ 208:    04 20 00 02       movs   r1, 2
+ 20c:    28 00 00 40       push   r1
+ 210:    04 20 00 01       movs   r1, 1
+ 214:    28 00 00 40       push   r1
+ 218:    e7 ff ff d4       call   -44<<2        # 0x16c
+ 21c:    4b de 00 14       addi   sp, sp, 20
+ 220:    68 27 ff ff       l32    r1, [r7-1]<<2
+ 224:    28 00 00 40       push   r1
+ 228:    68 27 00 00       l32    r1, [r7+0]<<2
+ 22c:    28 00 00 40       push   r1
+ 230:    e7 ff ff c0       call   -64<<2        # 0x134
+ 234:    4b de 00 08       addi   sp, sp, 8
+ 238:    48 27 00 00       addi   r1, r7, 0
+ 23c:    28 00 00 40       push   r1
+ 240:    e7 ff ff af       call   -81<<2        # 0x100
+ 244:    4b de 00 04       addi   sp, sp, 4
+ 248:    68 47 ff ff       l32    r2, [r7-1]<<2
+ 24c:    0b c6 00 00       mov    sp, r6
+ 250:    2c 00 01 c0       pop    r7
+ 254:    2c 00 01 80       pop    r6
+ 258:    7c 00 00 00       ret   
+  ...
diff --git a/examples/out/dump/poxim-fib-recursion.poximdump b/examples/out/dump/poxim-fib-recursion.poximdump
new file mode 100644
index 00000000..eb853ea4
--- /dev/null
+++ b/examples/out/dump/poxim-fib-recursion.poximdump
@@ -0,0 +1,120 @@
+   0:    03 c0 7f fc       mov    sp, 32764
+   4:    dc 00 00 01       bun    1        # 0xc
+   8:    fc 00 00 00       int    0
+   c:    28 00 01 80       push   r6
+  10:    28 00 01 c0       push   r7
+  14:    08 de 00 00       mov    r6, sp
+  18:    08 e6 00 00       mov    r7, r6
+  1c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  20:    4f de 00 00       subi   sp, sp, 0
+  24:    e4 00 00 54       call   84<<2        # 0x178
+  28:    e7 ff ff f7       call   -9<<2        # 0x8
+  2c:    0b c6 00 00       mov    sp, r6
+  30:    2c 00 01 c0       pop    r7
+  34:    2c 00 01 80       pop    r6
+  38:    7c 00 00 00       ret   
+  3c:    28 00 01 80       push   r6
+  40:    28 00 01 c0       push   r7
+  44:    08 de 00 00       mov    r6, sp
+  48:    08 e6 00 00       mov    r7, r6
+  4c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  50:    4f de 00 00       subi   sp, sp, 0
+  54:    0b c6 00 00       mov    sp, r6
+  58:    2c 00 01 c0       pop    r7
+  5c:    2c 00 01 80       pop    r6
+  60:    7c 00 00 00       ret   
+  64:    28 00 01 80       push   r6
+  68:    28 00 01 c0       push   r7
+  6c:    08 de 00 00       mov    r6, sp
+  70:    08 e6 00 00       mov    r7, r6
+  74:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  78:    4f de 00 0c       subi   sp, sp, 12
+  7c:    68 27 00 04       l32    r1, [r7+4]<<2
+  80:    74 27 00 00       s32    [r7+0]<<2, r1
+  84:    68 27 00 05       l32    r1, [r7+5]<<2
+  88:    74 27 ff ff       s32    [r7-1]<<2, r1
+  8c:    04 20 00 00       movs   r1, 0
+  90:    74 27 ff fe       s32    [r7-2]<<2, r1
+  94:    68 27 00 18       l32    r1, [r7+24]<<2
+  98:    10 01 0d 01       srl    r0, r1, r1, 1
+  9c:    68 47 ff f8       l32    r2, [r7-8]<<2
+  a0:    14 02 08 00       cmp    r2, r1
+  a4:    a8 00 00 11       bae    17        # 0xec
+  a8:    dc 00 00 05       bun    5        # 0xc0
+  ac:    68 27 ff f8       l32    r1, [r7-8]<<2
+  b0:    08 41 00 00       mov    r2, r1
+  b4:    48 21 00 01       addi   r1, r1, 1
+  b8:    74 27 ff fe       s32    [r7-2]<<2, r1
+  bc:    df ff ff f5       bun    -11        # 0x94
+  c0:    68 27 00 00       l32    r1, [r7+0]<<2
+  c4:    08 41 00 00       mov    r2, r1
+  c8:    48 21 00 04       addi   r1, r1, 4
+  cc:    74 27 00 00       s32    [r7+0]<<2, r1
+  d0:    68 27 ff ff       l32    r1, [r7-1]<<2
+  d4:    08 61 00 00       mov    r3, r1
+  d8:    48 21 00 04       addi   r1, r1, 4
+  dc:    74 27 ff ff       s32    [r7-1]<<2, r1
+  e0:    68 63 00 00       l32    r3, [r3+0]<<2
+  e4:    74 62 00 00       s32    [r2+0]<<2, r3
+  e8:    df ff ff f0       bun    -16        # 0xac
+  ec:    68 47 00 06       l32    r2, [r7+6]<<2
+  f0:    0b c6 00 00       mov    sp, r6
+  f4:    2c 00 01 c0       pop    r7
+  f8:    2c 00 01 80       pop    r6
+  fc:    7c 00 00 00       ret   
+ 100:    28 00 01 80       push   r6
+ 104:    28 00 01 c0       push   r7
+ 108:    08 de 00 00       mov    r6, sp
+ 10c:    08 e6 00 00       mov    r7, r6
+ 110:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 114:    4f de 00 04       subi   sp, sp, 4
+ 118:    68 27 00 04       l32    r1, [r7+4]<<2
+ 11c:    5c 01 00 02       cmpi   r1, 2
+ 120:    bc 00 00 02       bge    2        # 0x12c
+ 124:    68 47 00 04       l32    r2, [r7+4]<<2
+ 128:    dc 00 00 0f       bun    15        # 0x168
+ 12c:    68 27 00 04       l32    r1, [r7+4]<<2
+ 130:    4c 21 00 01       subi   r1, r1, 1
+ 134:    28 00 00 40       push   r1
+ 138:    e7 ff ff f1       call   -15<<2        # 0x100
+ 13c:    4b de 00 04       addi   sp, sp, 4
+ 140:    68 27 00 04       l32    r1, [r7+4]<<2
+ 144:    4c 21 00 02       subi   r1, r1, 2
+ 148:    28 00 00 40       push   r1
+ 14c:    74 47 00 00       s32    [r7+0]<<2, r2
+ 150:    e7 ff ff eb       call   -21<<2        # 0x100
+ 154:    4b de 00 04       addi   sp, sp, 4
+ 158:    68 27 00 00       l32    r1, [r7+0]<<2
+ 15c:    08 21 10 00       add    r1, r1, r2
+ 160:    0c 21 10 00       sub    r1, r1, r2
+ 164:    08 41 00 00       mov    r2, r1
+ 168:    0b c6 00 00       mov    sp, r6
+ 16c:    2c 00 01 c0       pop    r7
+ 170:    2c 00 01 80       pop    r6
+ 174:    7c 00 00 00       ret   
+ 178:    28 00 01 80       push   r6
+ 17c:    28 00 01 c0       push   r7
+ 180:    08 de 00 00       mov    r6, sp
+ 184:    08 e6 00 00       mov    r7, r6
+ 188:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 18c:    4f de 00 08       subi   sp, sp, 8
+ 190:    04 20 00 06       movs   r1, 6
+ 194:    28 00 00 40       push   r1
+ 198:    e7 ff ff d9       call   -39<<2        # 0x100
+ 19c:    4b de 00 04       addi   sp, sp, 4
+ 1a0:    74 47 00 00       s32    [r7+0]<<2, r2
+ 1a4:    04 20 00 05       movs   r1, 5
+ 1a8:    28 00 00 40       push   r1
+ 1ac:    e7 ff ff d4       call   -44<<2        # 0x100
+ 1b0:    4b de 00 04       addi   sp, sp, 4
+ 1b4:    74 47 ff ff       s32    [r7-1]<<2, r2
+ 1b8:    68 27 00 00       l32    r1, [r7+0]<<2
+ 1bc:    68 47 ff ff       l32    r2, [r7-1]<<2
+ 1c0:    08 21 10 00       add    r1, r1, r2
+ 1c4:    0c 21 10 00       sub    r1, r1, r2
+ 1c8:    08 41 00 00       mov    r2, r1
+ 1cc:    0b c6 00 00       mov    sp, r6
+ 1d0:    2c 00 01 c0       pop    r7
+ 1d4:    2c 00 01 80       pop    r6
+ 1d8:    7c 00 00 00       ret   
+  ...
diff --git a/examples/out/dump/poxim-print-alphabet.poximdump b/examples/out/dump/poxim-print-alphabet.poximdump
new file mode 100644
index 00000000..cb6cd347
--- /dev/null
+++ b/examples/out/dump/poxim-print-alphabet.poximdump
@@ -0,0 +1,111 @@
+   0:    03 c0 7f fc       mov    sp, 32764
+   4:    dc 00 00 01       bun    1        # 0xc
+   8:    fc 00 00 00       int    0
+   c:    28 00 01 80       push   r6
+  10:    28 00 01 c0       push   r7
+  14:    08 de 00 00       mov    r6, sp
+  18:    08 e6 00 00       mov    r7, r6
+  1c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  20:    4f de 00 00       subi   sp, sp, 0
+  24:    e4 00 00 52       call   82<<2        # 0x170
+  28:    e7 ff ff f7       call   -9<<2        # 0x8
+  2c:    0b c6 00 00       mov    sp, r6
+  30:    2c 00 01 c0       pop    r7
+  34:    2c 00 01 80       pop    r6
+  38:    7c 00 00 00       ret   
+  3c:    28 00 01 80       push   r6
+  40:    28 00 01 c0       push   r7
+  44:    08 de 00 00       mov    r6, sp
+  48:    08 e6 00 00       mov    r7, r6
+  4c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  50:    4f de 00 00       subi   sp, sp, 0
+  54:    0b c6 00 00       mov    sp, r6
+  58:    2c 00 01 c0       pop    r7
+  5c:    2c 00 01 80       pop    r6
+  60:    7c 00 00 00       ret   
+  64:    28 00 01 80       push   r6
+  68:    28 00 01 c0       push   r7
+  6c:    08 de 00 00       mov    r6, sp
+  70:    08 e6 00 00       mov    r7, r6
+  74:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  78:    4f de 00 0c       subi   sp, sp, 12
+  7c:    68 27 00 04       l32    r1, [r7+4]<<2
+  80:    74 27 00 00       s32    [r7+0]<<2, r1
+  84:    68 27 00 05       l32    r1, [r7+5]<<2
+  88:    74 27 ff ff       s32    [r7-1]<<2, r1
+  8c:    04 20 00 00       movs   r1, 0
+  90:    74 27 ff fe       s32    [r7-2]<<2, r1
+  94:    68 27 00 18       l32    r1, [r7+24]<<2
+  98:    10 01 0d 01       srl    r0, r1, r1, 1
+  9c:    68 47 ff f8       l32    r2, [r7-8]<<2
+  a0:    14 02 08 00       cmp    r2, r1
+  a4:    a8 00 00 11       bae    17        # 0xec
+  a8:    dc 00 00 05       bun    5        # 0xc0
+  ac:    68 27 ff f8       l32    r1, [r7-8]<<2
+  b0:    08 41 00 00       mov    r2, r1
+  b4:    48 21 00 01       addi   r1, r1, 1
+  b8:    74 27 ff fe       s32    [r7-2]<<2, r1
+  bc:    df ff ff f5       bun    -11        # 0x94
+  c0:    68 27 00 00       l32    r1, [r7+0]<<2
+  c4:    08 41 00 00       mov    r2, r1
+  c8:    48 21 00 04       addi   r1, r1, 4
+  cc:    74 27 00 00       s32    [r7+0]<<2, r1
+  d0:    68 27 ff ff       l32    r1, [r7-1]<<2
+  d4:    08 61 00 00       mov    r3, r1
+  d8:    48 21 00 04       addi   r1, r1, 4
+  dc:    74 27 ff ff       s32    [r7-1]<<2, r1
+  e0:    68 63 00 00       l32    r3, [r3+0]<<2
+  e4:    74 62 00 00       s32    [r2+0]<<2, r3
+  e8:    df ff ff f0       bun    -16        # 0xac
+  ec:    68 47 00 06       l32    r2, [r7+6]<<2
+  f0:    0b c6 00 00       mov    sp, r6
+  f4:    2c 00 01 c0       pop    r7
+  f8:    2c 00 01 80       pop    r6
+  fc:    7c 00 00 00       ret   
+ 100:    28 00 01 80       push   r6
+ 104:    28 00 01 c0       push   r7
+ 108:    08 de 00 00       mov    r6, sp
+ 10c:    08 e6 00 00       mov    r7, r6
+ 110:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 114:    4f de 00 08       subi   sp, sp, 8
+ 118:    04 20 00 00       movs   r1, 0
+ 11c:    74 27 00 00       s32    [r7+0]<<2, r1
+ 120:    68 27 00 00       l32    r1, [r7+0]<<2
+ 124:    68 47 00 04       l32    r2, [r7+4]<<2
+ 128:    14 01 10 00       cmp    r1, r2
+ 12c:    bc 00 00 0b       bge    11        # 0x15c
+ 130:    68 27 00 00       l32    r1, [r7+0]<<2
+ 134:    48 21 00 61       addi   r1, r1, 97
+ 138:    74 27 ff ff       s32    [r7-1]<<2, r1
+ 13c:    01 00 04 00       mov    r8, 1024
+ 140:    68 28 00 00       l32    r1, [r8+0]<<2
+ 144:    68 47 ff ff       l32    r2, [r7-1]<<2
+ 148:    74 41 00 00       s32    [r1+0]<<2, r2
+ 14c:    68 27 00 00       l32    r1, [r7+0]<<2
+ 150:    48 21 00 01       addi   r1, r1, 1
+ 154:    74 27 00 00       s32    [r7+0]<<2, r1
+ 158:    df ff ff f1       bun    -15        # 0x120
+ 15c:    68 47 00 00       l32    r2, [r7+0]<<2
+ 160:    0b c6 00 00       mov    sp, r6
+ 164:    2c 00 01 c0       pop    r7
+ 168:    2c 00 01 80       pop    r6
+ 16c:    7c 00 00 00       ret   
+ 170:    28 00 01 80       push   r6
+ 174:    28 00 01 c0       push   r7
+ 178:    08 de 00 00       mov    r6, sp
+ 17c:    08 e6 00 00       mov    r7, r6
+ 180:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 184:    4f de 00 04       subi   sp, sp, 4
+ 188:    04 20 00 1a       movs   r1, 26
+ 18c:    74 27 00 00       s32    [r7+0]<<2, r1
+ 190:    68 27 00 00       l32    r1, [r7+0]<<2
+ 194:    28 00 00 40       push   r1
+ 198:    e7 ff ff d9       call   -39<<2        # 0x100
+ 19c:    4b de 00 04       addi   sp, sp, 4
+ 1a0:    0b c6 00 00       mov    sp, r6
+ 1a4:    2c 00 01 c0       pop    r7
+ 1a8:    2c 00 01 80       pop    r6
+ 1ac:    7c 00 00 00       ret   
+  ...
+1000:    22 22 22 22       not    r17, r2
+  ...
diff --git a/examples/out/dump/poxim-print-num.poximdump b/examples/out/dump/poxim-print-num.poximdump
new file mode 100644
index 00000000..683ef09b
--- /dev/null
+++ b/examples/out/dump/poxim-print-num.poximdump
@@ -0,0 +1,168 @@
+   0:    03 c0 7f fc       mov    sp, 32764
+   4:    dc 00 00 01       bun    1        # 0xc
+   8:    fc 00 00 00       int    0
+   c:    28 00 01 80       push   r6
+  10:    28 00 01 c0       push   r7
+  14:    08 de 00 00       mov    r6, sp
+  18:    08 e6 00 00       mov    r7, r6
+  1c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  20:    4f de 00 00       subi   sp, sp, 0
+  24:    e4 00 00 84       call   132<<2        # 0x238
+  28:    e7 ff ff f7       call   -9<<2        # 0x8
+  2c:    0b c6 00 00       mov    sp, r6
+  30:    2c 00 01 c0       pop    r7
+  34:    2c 00 01 80       pop    r6
+  38:    7c 00 00 00       ret   
+  3c:    28 00 01 80       push   r6
+  40:    28 00 01 c0       push   r7
+  44:    08 de 00 00       mov    r6, sp
+  48:    08 e6 00 00       mov    r7, r6
+  4c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  50:    4f de 00 00       subi   sp, sp, 0
+  54:    0b c6 00 00       mov    sp, r6
+  58:    2c 00 01 c0       pop    r7
+  5c:    2c 00 01 80       pop    r6
+  60:    7c 00 00 00       ret   
+  64:    28 00 01 80       push   r6
+  68:    28 00 01 c0       push   r7
+  6c:    08 de 00 00       mov    r6, sp
+  70:    08 e6 00 00       mov    r7, r6
+  74:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  78:    4f de 00 0c       subi   sp, sp, 12
+  7c:    68 27 00 04       l32    r1, [r7+4]<<2
+  80:    74 27 00 00       s32    [r7+0]<<2, r1
+  84:    68 27 00 05       l32    r1, [r7+5]<<2
+  88:    74 27 ff ff       s32    [r7-1]<<2, r1
+  8c:    04 20 00 00       movs   r1, 0
+  90:    74 27 ff fe       s32    [r7-2]<<2, r1
+  94:    68 27 00 18       l32    r1, [r7+24]<<2
+  98:    10 01 0d 01       srl    r0, r1, r1, 1
+  9c:    68 47 ff f8       l32    r2, [r7-8]<<2
+  a0:    14 02 08 00       cmp    r2, r1
+  a4:    a8 00 00 11       bae    17        # 0xec
+  a8:    dc 00 00 05       bun    5        # 0xc0
+  ac:    68 27 ff f8       l32    r1, [r7-8]<<2
+  b0:    08 41 00 00       mov    r2, r1
+  b4:    48 21 00 01       addi   r1, r1, 1
+  b8:    74 27 ff fe       s32    [r7-2]<<2, r1
+  bc:    df ff ff f5       bun    -11        # 0x94
+  c0:    68 27 00 00       l32    r1, [r7+0]<<2
+  c4:    08 41 00 00       mov    r2, r1
+  c8:    48 21 00 04       addi   r1, r1, 4
+  cc:    74 27 00 00       s32    [r7+0]<<2, r1
+  d0:    68 27 ff ff       l32    r1, [r7-1]<<2
+  d4:    08 61 00 00       mov    r3, r1
+  d8:    48 21 00 04       addi   r1, r1, 4
+  dc:    74 27 ff ff       s32    [r7-1]<<2, r1
+  e0:    68 63 00 00       l32    r3, [r3+0]<<2
+  e4:    74 62 00 00       s32    [r2+0]<<2, r3
+  e8:    df ff ff f0       bun    -16        # 0xac
+  ec:    68 47 00 06       l32    r2, [r7+6]<<2
+  f0:    0b c6 00 00       mov    sp, r6
+  f4:    2c 00 01 c0       pop    r7
+  f8:    2c 00 01 80       pop    r6
+  fc:    7c 00 00 00       ret   
+ 100:    28 00 01 80       push   r6
+ 104:    28 00 01 c0       push   r7
+ 108:    08 de 00 00       mov    r6, sp
+ 10c:    08 e6 00 00       mov    r7, r6
+ 110:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 114:    4f de 00 00       subi   sp, sp, 0
+ 118:    01 00 04 00       mov    r8, 1024
+ 11c:    68 28 00 00       l32    r1, [r8+0]<<2
+ 120:    68 47 00 04       l32    r2, [r7+4]<<2
+ 124:    74 41 00 00       s32    [r1+0]<<2, r2
+ 128:    0b c6 00 00       mov    sp, r6
+ 12c:    2c 00 01 c0       pop    r7
+ 130:    2c 00 01 80       pop    r6
+ 134:    7c 00 00 00       ret   
+ 138:    28 00 01 80       push   r6
+ 13c:    28 00 01 c0       push   r7
+ 140:    08 de 00 00       mov    r6, sp
+ 144:    08 e6 00 00       mov    r7, r6
+ 148:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 14c:    4f de 00 0c       subi   sp, sp, 12
+ 150:    04 20 00 01       movs   r1, 1
+ 154:    74 27 00 00       s32    [r7+0]<<2, r1
+ 158:    04 20 00 00       movs   r1, 0
+ 15c:    74 27 ff ff       s32    [r7-1]<<2, r1
+ 160:    68 27 00 04       l32    r1, [r7+4]<<2
+ 164:    5c 01 00 00       cmpi   r1, 0
+ 168:    bc 00 00 06       bge    6        # 0x184
+ 16c:    04 20 00 01       movs   r1, 1
+ 170:    74 27 ff ff       s32    [r7-1]<<2, r1
+ 174:    04 20 00 00       movs   r1, 0
+ 178:    68 47 00 04       l32    r2, [r7+4]<<2
+ 17c:    0c 21 10 00       sub    r1, r1, r2
+ 180:    74 27 00 04       s32    [r7+4]<<2, r1
+ 184:    68 27 00 04       l32    r1, [r7+4]<<2
+ 188:    68 47 00 00       l32    r2, [r7+0]<<2
+ 18c:    10 21 16 04       divs   r4, r1, r1, r2
+ 190:    5c 01 00 0b       cmpi   r1, 11
+ 194:    c8 00 00 05       ble    5        # 0x1ac
+ 198:    68 27 00 00       l32    r1, [r7+0]<<2
+ 19c:    04 40 00 0a       movs   r2, 10
+ 1a0:    10 21 12 08       muls   r8, r1, r1, r2
+ 1a4:    74 27 00 00       s32    [r7+0]<<2, r1
+ 1a8:    df ff ff f6       bun    -10        # 0x184
+ 1ac:    68 27 ff ff       l32    r1, [r7-1]<<2
+ 1b0:    5c 01 00 00       cmpi   r1, 0
+ 1b4:    c8 00 00 05       ble    5        # 0x1cc
+ 1b8:    04 20 00 2d       movs   r1, 45
+ 1bc:    28 00 00 40       push   r1
+ 1c0:    e7 ff ff cf       call   -49<<2        # 0x100
+ 1c4:    4b de 00 04       addi   sp, sp, 4
+ 1c8:    dc 00 00 04       bun    4        # 0x1dc
+ 1cc:    04 20 00 2b       movs   r1, 43
+ 1d0:    28 00 00 40       push   r1
+ 1d4:    e7 ff ff ca       call   -54<<2        # 0x100
+ 1d8:    4b de 00 04       addi   sp, sp, 4
+ 1dc:    68 27 00 00       l32    r1, [r7+0]<<2
+ 1e0:    5c 01 00 00       cmpi   r1, 0
+ 1e4:    c8 00 00 10       ble    16        # 0x228
+ 1e8:    68 27 00 04       l32    r1, [r7+4]<<2
+ 1ec:    68 47 00 00       l32    r2, [r7+0]<<2
+ 1f0:    10 21 16 04       divs   r4, r1, r1, r2
+ 1f4:    04 40 00 0a       movs   r2, 10
+ 1f8:    10 21 16 04       divs   r4, r1, r1, r2
+ 1fc:    74 87 ff fe       s32    [r7-2]<<2, r4
+ 200:    68 27 ff fe       l32    r1, [r7-2]<<2
+ 204:    48 21 00 30       addi   r1, r1, 48
+ 208:    28 00 00 40       push   r1
+ 20c:    e7 ff ff bc       call   -68<<2        # 0x100
+ 210:    4b de 00 04       addi   sp, sp, 4
+ 214:    68 27 00 00       l32    r1, [r7+0]<<2
+ 218:    04 40 00 0a       movs   r2, 10
+ 21c:    10 21 16 04       divs   r4, r1, r1, r2
+ 220:    74 27 00 00       s32    [r7+0]<<2, r1
+ 224:    df ff ff ed       bun    -19        # 0x1dc
+ 228:    0b c6 00 00       mov    sp, r6
+ 22c:    2c 00 01 c0       pop    r7
+ 230:    2c 00 01 80       pop    r6
+ 234:    7c 00 00 00       ret   
+ 238:    28 00 01 80       push   r6
+ 23c:    28 00 01 c0       push   r7
+ 240:    08 de 00 00       mov    r6, sp
+ 244:    08 e6 00 00       mov    r7, r6
+ 248:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 24c:    4f de 00 08       subi   sp, sp, 8
+ 250:    04 20 00 7b       movs   r1, 123
+ 254:    74 27 00 00       s32    [r7+0]<<2, r1
+ 258:    04 20 00 64       movs   r1, 100
+ 25c:    74 27 ff ff       s32    [r7-1]<<2, r1
+ 260:    68 27 00 00       l32    r1, [r7+0]<<2
+ 264:    28 00 00 40       push   r1
+ 268:    e7 ff ff b3       call   -77<<2        # 0x138
+ 26c:    4b de 00 04       addi   sp, sp, 4
+ 270:    04 20 00 0a       movs   r1, 10
+ 274:    28 00 00 40       push   r1
+ 278:    e7 ff ff a1       call   -95<<2        # 0x100
+ 27c:    4b de 00 04       addi   sp, sp, 4
+ 280:    68 47 ff ff       l32    r2, [r7-1]<<2
+ 284:    0b c6 00 00       mov    sp, r6
+ 288:    2c 00 01 c0       pop    r7
+ 28c:    2c 00 01 80       pop    r6
+ 290:    7c 00 00 00       ret   
+  ...
+1000:    22 22 22 22       not    r17, r2
+  ...
diff --git a/examples/out/dump/poxim-simple-if.poximdump b/examples/out/dump/poxim-simple-if.poximdump
new file mode 100644
index 00000000..a01d9fe6
--- /dev/null
+++ b/examples/out/dump/poxim-simple-if.poximdump
@@ -0,0 +1,94 @@
+   0:    03 c0 7f fc       mov    sp, 32764
+   4:    dc 00 00 01       bun    1        # 0xc
+   8:    fc 00 00 00       int    0
+   c:    28 00 01 80       push   r6
+  10:    28 00 01 c0       push   r7
+  14:    08 de 00 00       mov    r6, sp
+  18:    08 e6 00 00       mov    r7, r6
+  1c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  20:    4f de 00 00       subi   sp, sp, 0
+  24:    e4 00 00 36       call   54<<2        # 0x100
+  28:    e7 ff ff f7       call   -9<<2        # 0x8
+  2c:    0b c6 00 00       mov    sp, r6
+  30:    2c 00 01 c0       pop    r7
+  34:    2c 00 01 80       pop    r6
+  38:    7c 00 00 00       ret   
+  3c:    28 00 01 80       push   r6
+  40:    28 00 01 c0       push   r7
+  44:    08 de 00 00       mov    r6, sp
+  48:    08 e6 00 00       mov    r7, r6
+  4c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  50:    4f de 00 00       subi   sp, sp, 0
+  54:    0b c6 00 00       mov    sp, r6
+  58:    2c 00 01 c0       pop    r7
+  5c:    2c 00 01 80       pop    r6
+  60:    7c 00 00 00       ret   
+  64:    28 00 01 80       push   r6
+  68:    28 00 01 c0       push   r7
+  6c:    08 de 00 00       mov    r6, sp
+  70:    08 e6 00 00       mov    r7, r6
+  74:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  78:    4f de 00 0c       subi   sp, sp, 12
+  7c:    68 27 00 04       l32    r1, [r7+4]<<2
+  80:    74 27 00 00       s32    [r7+0]<<2, r1
+  84:    68 27 00 05       l32    r1, [r7+5]<<2
+  88:    74 27 ff ff       s32    [r7-1]<<2, r1
+  8c:    04 20 00 00       movs   r1, 0
+  90:    74 27 ff fe       s32    [r7-2]<<2, r1
+  94:    68 27 00 18       l32    r1, [r7+24]<<2
+  98:    10 01 0d 01       srl    r0, r1, r1, 1
+  9c:    68 47 ff f8       l32    r2, [r7-8]<<2
+  a0:    14 02 08 00       cmp    r2, r1
+  a4:    a8 00 00 11       bae    17        # 0xec
+  a8:    dc 00 00 05       bun    5        # 0xc0
+  ac:    68 27 ff f8       l32    r1, [r7-8]<<2
+  b0:    08 41 00 00       mov    r2, r1
+  b4:    48 21 00 01       addi   r1, r1, 1
+  b8:    74 27 ff fe       s32    [r7-2]<<2, r1
+  bc:    df ff ff f5       bun    -11        # 0x94
+  c0:    68 27 00 00       l32    r1, [r7+0]<<2
+  c4:    08 41 00 00       mov    r2, r1
+  c8:    48 21 00 04       addi   r1, r1, 4
+  cc:    74 27 00 00       s32    [r7+0]<<2, r1
+  d0:    68 27 ff ff       l32    r1, [r7-1]<<2
+  d4:    08 61 00 00       mov    r3, r1
+  d8:    48 21 00 04       addi   r1, r1, 4
+  dc:    74 27 ff ff       s32    [r7-1]<<2, r1
+  e0:    68 63 00 00       l32    r3, [r3+0]<<2
+  e4:    74 62 00 00       s32    [r2+0]<<2, r3
+  e8:    df ff ff f0       bun    -16        # 0xac
+  ec:    68 47 00 06       l32    r2, [r7+6]<<2
+  f0:    0b c6 00 00       mov    sp, r6
+  f4:    2c 00 01 c0       pop    r7
+  f8:    2c 00 01 80       pop    r6
+  fc:    7c 00 00 00       ret   
+ 100:    28 00 01 80       push   r6
+ 104:    28 00 01 c0       push   r7
+ 108:    08 de 00 00       mov    r6, sp
+ 10c:    08 e6 00 00       mov    r7, r6
+ 110:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 114:    4f de 00 08       subi   sp, sp, 8
+ 118:    04 20 00 07       movs   r1, 7
+ 11c:    74 27 00 00       s32    [r7+0]<<2, r1
+ 120:    04 20 00 03       movs   r1, 3
+ 124:    74 27 ff ff       s32    [r7-1]<<2, r1
+ 128:    68 27 00 00       l32    r1, [r7+0]<<2
+ 12c:    68 47 ff ff       l32    r2, [r7-1]<<2
+ 130:    14 01 10 00       cmp    r1, r2
+ 134:    c8 00 00 04       ble    4        # 0x148
+ 138:    04 20 00 69       movs   r1, 105
+ 13c:    74 27 ff ff       s32    [r7-1]<<2, r1
+ 140:    04 20 00 68       movs   r1, 104
+ 144:    74 27 00 00       s32    [r7+0]<<2, r1
+ 148:    68 27 00 00       l32    r1, [r7+0]<<2
+ 14c:    68 47 ff ff       l32    r2, [r7-1]<<2
+ 150:    14 01 10 00       cmp    r1, r2
+ 154:    bc 00 00 02       bge    2        # 0x160
+ 158:    04 20 00 07       movs   r1, 7
+ 15c:    74 27 ff ff       s32    [r7-1]<<2, r1
+ 160:    68 47 ff ff       l32    r2, [r7-1]<<2
+ 164:    0b c6 00 00       mov    sp, r6
+ 168:    2c 00 01 c0       pop    r7
+ 16c:    2c 00 01 80       pop    r6
+ 170:    7c 00 00 00       ret   
+  ...
diff --git a/examples/out/dump/poxim-sort.poximdump b/examples/out/dump/poxim-sort.poximdump
new file mode 100644
index 00000000..1a4ab9ff
--- /dev/null
+++ b/examples/out/dump/poxim-sort.poximdump
@@ -0,0 +1,329 @@
+   0:    03 c0 7f fc       mov    sp, 32764
+   4:    dc 00 00 01       bun    1        # 0xc
+   8:    fc 00 00 00       int    0
+   c:    28 00 01 80       push   r6
+  10:    28 00 01 c0       push   r7
+  14:    08 de 00 00       mov    r6, sp
+  18:    08 e6 00 00       mov    r7, r6
+  1c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  20:    4f de 00 00       subi   sp, sp, 0
+  24:    e4 00 00 db       call   219<<2        # 0x394
+  28:    e7 ff ff f7       call   -9<<2        # 0x8
+  2c:    0b c6 00 00       mov    sp, r6
+  30:    2c 00 01 c0       pop    r7
+  34:    2c 00 01 80       pop    r6
+  38:    7c 00 00 00       ret   
+  3c:    28 00 01 80       push   r6
+  40:    28 00 01 c0       push   r7
+  44:    08 de 00 00       mov    r6, sp
+  48:    08 e6 00 00       mov    r7, r6
+  4c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  50:    4f de 00 00       subi   sp, sp, 0
+  54:    0b c6 00 00       mov    sp, r6
+  58:    2c 00 01 c0       pop    r7
+  5c:    2c 00 01 80       pop    r6
+  60:    7c 00 00 00       ret   
+  64:    28 00 01 80       push   r6
+  68:    28 00 01 c0       push   r7
+  6c:    08 de 00 00       mov    r6, sp
+  70:    08 e6 00 00       mov    r7, r6
+  74:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  78:    4f de 00 0c       subi   sp, sp, 12
+  7c:    68 27 00 04       l32    r1, [r7+4]<<2
+  80:    74 27 00 00       s32    [r7+0]<<2, r1
+  84:    68 27 00 05       l32    r1, [r7+5]<<2
+  88:    74 27 ff ff       s32    [r7-1]<<2, r1
+  8c:    04 20 00 00       movs   r1, 0
+  90:    74 27 ff fe       s32    [r7-2]<<2, r1
+  94:    68 27 00 18       l32    r1, [r7+24]<<2
+  98:    10 01 0d 01       srl    r0, r1, r1, 1
+  9c:    68 47 ff f8       l32    r2, [r7-8]<<2
+  a0:    14 02 08 00       cmp    r2, r1
+  a4:    a8 00 00 11       bae    17        # 0xec
+  a8:    dc 00 00 05       bun    5        # 0xc0
+  ac:    68 27 ff f8       l32    r1, [r7-8]<<2
+  b0:    08 41 00 00       mov    r2, r1
+  b4:    48 21 00 01       addi   r1, r1, 1
+  b8:    74 27 ff fe       s32    [r7-2]<<2, r1
+  bc:    df ff ff f5       bun    -11        # 0x94
+  c0:    68 27 00 00       l32    r1, [r7+0]<<2
+  c4:    08 41 00 00       mov    r2, r1
+  c8:    48 21 00 04       addi   r1, r1, 4
+  cc:    74 27 00 00       s32    [r7+0]<<2, r1
+  d0:    68 27 ff ff       l32    r1, [r7-1]<<2
+  d4:    08 61 00 00       mov    r3, r1
+  d8:    48 21 00 04       addi   r1, r1, 4
+  dc:    74 27 ff ff       s32    [r7-1]<<2, r1
+  e0:    68 63 00 00       l32    r3, [r3+0]<<2
+  e4:    74 62 00 00       s32    [r2+0]<<2, r3
+  e8:    df ff ff f0       bun    -16        # 0xac
+  ec:    68 47 00 06       l32    r2, [r7+6]<<2
+  f0:    0b c6 00 00       mov    sp, r6
+  f4:    2c 00 01 c0       pop    r7
+  f8:    2c 00 01 80       pop    r6
+  fc:    7c 00 00 00       ret   
+ 100:    28 00 01 80       push   r6
+ 104:    28 00 01 c0       push   r7
+ 108:    08 de 00 00       mov    r6, sp
+ 10c:    08 e6 00 00       mov    r7, r6
+ 110:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 114:    4f de 00 00       subi   sp, sp, 0
+ 118:    01 00 04 00       mov    r8, 1024
+ 11c:    68 28 00 00       l32    r1, [r8+0]<<2
+ 120:    68 47 00 04       l32    r2, [r7+4]<<2
+ 124:    74 41 00 00       s32    [r1+0]<<2, r2
+ 128:    0b c6 00 00       mov    sp, r6
+ 12c:    2c 00 01 c0       pop    r7
+ 130:    2c 00 01 80       pop    r6
+ 134:    7c 00 00 00       ret   
+ 138:    28 00 01 80       push   r6
+ 13c:    28 00 01 c0       push   r7
+ 140:    08 de 00 00       mov    r6, sp
+ 144:    08 e6 00 00       mov    r7, r6
+ 148:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 14c:    4f de 00 10       subi   sp, sp, 16
+ 150:    04 20 00 00       movs   r1, 0
+ 154:    74 27 ff fe       s32    [r7-2]<<2, r1
+ 158:    68 27 00 05       l32    r1, [r7+5]<<2
+ 15c:    4c 21 00 01       subi   r1, r1, 1
+ 160:    68 47 ff fe       l32    r2, [r7-2]<<2
+ 164:    14 02 08 00       cmp    r2, r1
+ 168:    bc 00 00 4a       bge    74        # 0x294
+ 16c:    dc 00 00 05       bun    5        # 0x184
+ 170:    68 27 ff fe       l32    r1, [r7-2]<<2
+ 174:    08 41 00 00       mov    r2, r1
+ 178:    48 21 00 01       addi   r1, r1, 1
+ 17c:    74 27 ff fe       s32    [r7-2]<<2, r1
+ 180:    df ff ff f5       bun    -11        # 0x158
+ 184:    04 20 00 00       movs   r1, 0
+ 188:    74 27 ff ff       s32    [r7-1]<<2, r1
+ 18c:    04 20 00 00       movs   r1, 0
+ 190:    74 27 ff fd       s32    [r7-3]<<2, r1
+ 194:    68 27 00 05       l32    r1, [r7+5]<<2
+ 198:    4c 21 00 01       subi   r1, r1, 1
+ 19c:    68 47 ff fe       l32    r2, [r7-2]<<2
+ 1a0:    0c 21 10 00       sub    r1, r1, r2
+ 1a4:    68 47 ff fd       l32    r2, [r7-3]<<2
+ 1a8:    14 02 08 00       cmp    r2, r1
+ 1ac:    bc 00 00 34       bge    52        # 0x280
+ 1b0:    dc 00 00 05       bun    5        # 0x1c8
+ 1b4:    68 27 ff fd       l32    r1, [r7-3]<<2
+ 1b8:    08 41 00 00       mov    r2, r1
+ 1bc:    48 21 00 01       addi   r1, r1, 1
+ 1c0:    74 27 ff fd       s32    [r7-3]<<2, r1
+ 1c4:    df ff ff f3       bun    -13        # 0x194
+ 1c8:    68 27 ff fd       l32    r1, [r7-3]<<2
+ 1cc:    10 01 0b 01       sla    r0, r1, r1, 1
+ 1d0:    68 47 00 04       l32    r2, [r7+4]<<2
+ 1d4:    08 42 08 00       add    r2, r2, r1
+ 1d8:    0c 42 08 00       sub    r2, r2, r1
+ 1dc:    68 27 ff fd       l32    r1, [r7-3]<<2
+ 1e0:    48 21 00 01       addi   r1, r1, 1
+ 1e4:    10 01 0b 01       sla    r0, r1, r1, 1
+ 1e8:    68 67 00 04       l32    r3, [r7+4]<<2
+ 1ec:    08 63 08 00       add    r3, r3, r1
+ 1f0:    0c 63 08 00       sub    r3, r3, r1
+ 1f4:    68 42 00 00       l32    r2, [r2+0]<<2
+ 1f8:    68 63 00 00       l32    r3, [r3+0]<<2
+ 1fc:    14 02 18 00       cmp    r2, r3
+ 200:    c8 00 00 1e       ble    30        # 0x27c
+ 204:    68 27 ff fd       l32    r1, [r7-3]<<2
+ 208:    10 01 0b 01       sla    r0, r1, r1, 1
+ 20c:    68 47 00 04       l32    r2, [r7+4]<<2
+ 210:    08 42 08 00       add    r2, r2, r1
+ 214:    0c 42 08 00       sub    r2, r2, r1
+ 218:    68 42 00 00       l32    r2, [r2+0]<<2
+ 21c:    74 47 00 00       s32    [r7+0]<<2, r2
+ 220:    68 27 ff fd       l32    r1, [r7-3]<<2
+ 224:    10 01 0b 01       sla    r0, r1, r1, 1
+ 228:    68 47 00 04       l32    r2, [r7+4]<<2
+ 22c:    08 42 08 00       add    r2, r2, r1
+ 230:    0c 42 08 00       sub    r2, r2, r1
+ 234:    68 27 ff fd       l32    r1, [r7-3]<<2
+ 238:    48 21 00 01       addi   r1, r1, 1
+ 23c:    10 01 0b 01       sla    r0, r1, r1, 1
+ 240:    68 67 00 04       l32    r3, [r7+4]<<2
+ 244:    08 63 08 00       add    r3, r3, r1
+ 248:    0c 63 08 00       sub    r3, r3, r1
+ 24c:    68 63 00 00       l32    r3, [r3+0]<<2
+ 250:    74 62 00 00       s32    [r2+0]<<2, r3
+ 254:    68 27 ff fd       l32    r1, [r7-3]<<2
+ 258:    48 21 00 01       addi   r1, r1, 1
+ 25c:    10 01 0b 01       sla    r0, r1, r1, 1
+ 260:    68 47 00 04       l32    r2, [r7+4]<<2
+ 264:    08 42 08 00       add    r2, r2, r1
+ 268:    0c 42 08 00       sub    r2, r2, r1
+ 26c:    68 27 00 00       l32    r1, [r7+0]<<2
+ 270:    74 22 00 00       s32    [r2+0]<<2, r1
+ 274:    04 20 00 01       movs   r1, 1
+ 278:    74 27 ff ff       s32    [r7-1]<<2, r1
+ 27c:    df ff ff cd       bun    -51        # 0x1b4
+ 280:    68 27 ff ff       l32    r1, [r7-1]<<2
+ 284:    5c 01 00 00       cmpi   r1, 0
+ 288:    d0 00 00 01       bne    1        # 0x290
+ 28c:    dc 00 00 01       bun    1        # 0x294
+ 290:    df ff ff b7       bun    -73        # 0x170
+ 294:    0b c6 00 00       mov    sp, r6
+ 298:    2c 00 01 c0       pop    r7
+ 29c:    2c 00 01 80       pop    r6
+ 2a0:    7c 00 00 00       ret   
+ 2a4:    28 00 01 80       push   r6
+ 2a8:    28 00 01 c0       push   r7
+ 2ac:    08 de 00 00       mov    r6, sp
+ 2b0:    08 e6 00 00       mov    r7, r6
+ 2b4:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 2b8:    4f de 00 0c       subi   sp, sp, 12
+ 2bc:    04 20 00 01       movs   r1, 1
+ 2c0:    74 27 00 00       s32    [r7+0]<<2, r1
+ 2c4:    04 20 00 00       movs   r1, 0
+ 2c8:    74 27 ff ff       s32    [r7-1]<<2, r1
+ 2cc:    68 27 00 04       l32    r1, [r7+4]<<2
+ 2d0:    5c 01 00 00       cmpi   r1, 0
+ 2d4:    bc 00 00 06       bge    6        # 0x2f0
+ 2d8:    04 20 00 01       movs   r1, 1
+ 2dc:    74 27 ff ff       s32    [r7-1]<<2, r1
+ 2e0:    04 20 00 00       movs   r1, 0
+ 2e4:    68 47 00 04       l32    r2, [r7+4]<<2
+ 2e8:    0c 21 10 00       sub    r1, r1, r2
+ 2ec:    74 27 00 04       s32    [r7+4]<<2, r1
+ 2f0:    68 27 00 04       l32    r1, [r7+4]<<2
+ 2f4:    68 47 00 00       l32    r2, [r7+0]<<2
+ 2f8:    10 21 16 04       divs   r4, r1, r1, r2
+ 2fc:    5c 01 00 0b       cmpi   r1, 11
+ 300:    c8 00 00 05       ble    5        # 0x318
+ 304:    68 27 00 00       l32    r1, [r7+0]<<2
+ 308:    04 40 00 0a       movs   r2, 10
+ 30c:    10 21 12 08       muls   r8, r1, r1, r2
+ 310:    74 27 00 00       s32    [r7+0]<<2, r1
+ 314:    df ff ff f6       bun    -10        # 0x2f0
+ 318:    68 27 ff ff       l32    r1, [r7-1]<<2
+ 31c:    5c 01 00 00       cmpi   r1, 0
+ 320:    c8 00 00 05       ble    5        # 0x338
+ 324:    04 20 00 2d       movs   r1, 45
+ 328:    28 00 00 40       push   r1
+ 32c:    e7 ff ff 74       call   -140<<2        # 0x100
+ 330:    4b de 00 04       addi   sp, sp, 4
+ 334:    dc 00 00 00       bun    0        # 0x338
+ 338:    68 27 00 00       l32    r1, [r7+0]<<2
+ 33c:    5c 01 00 00       cmpi   r1, 0
+ 340:    c8 00 00 10       ble    16        # 0x384
+ 344:    68 27 00 04       l32    r1, [r7+4]<<2
+ 348:    68 47 00 00       l32    r2, [r7+0]<<2
+ 34c:    10 21 16 04       divs   r4, r1, r1, r2
+ 350:    04 40 00 0a       movs   r2, 10
+ 354:    10 21 16 04       divs   r4, r1, r1, r2
+ 358:    74 87 ff fe       s32    [r7-2]<<2, r4
+ 35c:    68 27 ff fe       l32    r1, [r7-2]<<2
+ 360:    48 21 00 30       addi   r1, r1, 48
+ 364:    28 00 00 40       push   r1
+ 368:    e7 ff ff 65       call   -155<<2        # 0x100
+ 36c:    4b de 00 04       addi   sp, sp, 4
+ 370:    68 27 00 00       l32    r1, [r7+0]<<2
+ 374:    04 40 00 0a       movs   r2, 10
+ 378:    10 21 16 04       divs   r4, r1, r1, r2
+ 37c:    74 27 00 00       s32    [r7+0]<<2, r1
+ 380:    df ff ff ed       bun    -19        # 0x338
+ 384:    0b c6 00 00       mov    sp, r6
+ 388:    2c 00 01 c0       pop    r7
+ 38c:    2c 00 01 80       pop    r6
+ 390:    7c 00 00 00       ret   
+ 394:    28 00 01 80       push   r6
+ 398:    28 00 01 c0       push   r7
+ 39c:    08 de 00 00       mov    r6, sp
+ 3a0:    08 e6 00 00       mov    r7, r6
+ 3a4:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 3a8:    4f de 00 20       subi   sp, sp, 32
+ 3ac:    04 20 00 14       movs   r1, 20
+ 3b0:    28 00 00 40       push   r1
+ 3b4:    04 20 00 00       movs   r1, 0
+ 3b8:    28 00 00 40       push   r1
+ 3bc:    48 27 ff fc       addi   r1, r7, -4
+ 3c0:    28 00 00 40       push   r1
+ 3c4:    e7 ff ff 1d       call   -227<<2        # 0x3c
+ 3c8:    4b de 00 0c       addi   sp, sp, 12
+ 3cc:    04 3f ff ff       movs   r1, -1
+ 3d0:    74 27 ff fc       s32    [r7-4]<<2, r1
+ 3d4:    04 3f fd cc       movs   r1, -564
+ 3d8:    74 27 ff fd       s32    [r7-3]<<2, r1
+ 3dc:    04 20 01 a4       movs   r1, 420
+ 3e0:    74 27 ff fe       s32    [r7-2]<<2, r1
+ 3e4:    04 20 00 45       movs   r1, 69
+ 3e8:    74 27 ff ff       s32    [r7-1]<<2, r1
+ 3ec:    04 20 04 b0       movs   r1, 1200
+ 3f0:    74 27 00 00       s32    [r7+0]<<2, r1
+ 3f4:    04 20 00 05       movs   r1, 5
+ 3f8:    74 27 ff fb       s32    [r7-5]<<2, r1
+ 3fc:    04 20 00 00       movs   r1, 0
+ 400:    74 27 ff fa       s32    [r7-6]<<2, r1
+ 404:    68 27 ff fa       l32    r1, [r7-6]<<2
+ 408:    68 47 ff fb       l32    r2, [r7-5]<<2
+ 40c:    14 01 10 00       cmp    r1, r2
+ 410:    bc 00 00 16       bge    22        # 0x46c
+ 414:    dc 00 00 05       bun    5        # 0x42c
+ 418:    68 27 ff fa       l32    r1, [r7-6]<<2
+ 41c:    08 41 00 00       mov    r2, r1
+ 420:    48 21 00 01       addi   r1, r1, 1
+ 424:    74 27 ff fa       s32    [r7-6]<<2, r1
+ 428:    df ff ff f6       bun    -10        # 0x404
+ 42c:    68 27 ff fa       l32    r1, [r7-6]<<2
+ 430:    10 01 0b 01       sla    r0, r1, r1, 1
+ 434:    48 47 ff fc       addi   r2, r7, -4
+ 438:    08 42 08 00       add    r2, r2, r1
+ 43c:    0c 42 08 00       sub    r2, r2, r1
+ 440:    68 42 00 00       l32    r2, [r2+0]<<2
+ 444:    74 47 ff f9       s32    [r7-7]<<2, r2
+ 448:    68 27 ff f9       l32    r1, [r7-7]<<2
+ 44c:    28 00 00 40       push   r1
+ 450:    e7 ff ff 94       call   -108<<2        # 0x2a4
+ 454:    4b de 00 04       addi   sp, sp, 4
+ 458:    04 20 00 20       movs   r1, 32
+ 45c:    28 00 00 40       push   r1
+ 460:    e7 ff ff 27       call   -217<<2        # 0x100
+ 464:    4b de 00 04       addi   sp, sp, 4
+ 468:    df ff ff eb       bun    -21        # 0x418
+ 46c:    04 20 00 0a       movs   r1, 10
+ 470:    28 00 00 40       push   r1
+ 474:    e7 ff ff 22       call   -222<<2        # 0x100
+ 478:    4b de 00 04       addi   sp, sp, 4
+ 47c:    68 27 ff fb       l32    r1, [r7-5]<<2
+ 480:    28 00 00 40       push   r1
+ 484:    48 27 ff fc       addi   r1, r7, -4
+ 488:    28 00 00 40       push   r1
+ 48c:    e7 ff ff 2a       call   -214<<2        # 0x138
+ 490:    4b de 00 08       addi   sp, sp, 8
+ 494:    04 20 00 00       movs   r1, 0
+ 498:    74 27 ff fa       s32    [r7-6]<<2, r1
+ 49c:    68 27 ff fa       l32    r1, [r7-6]<<2
+ 4a0:    68 47 ff fb       l32    r2, [r7-5]<<2
+ 4a4:    14 01 10 00       cmp    r1, r2
+ 4a8:    bc 00 00 16       bge    22        # 0x504
+ 4ac:    dc 00 00 05       bun    5        # 0x4c4
+ 4b0:    68 27 ff fa       l32    r1, [r7-6]<<2
+ 4b4:    08 41 00 00       mov    r2, r1
+ 4b8:    48 21 00 01       addi   r1, r1, 1
+ 4bc:    74 27 ff fa       s32    [r7-6]<<2, r1
+ 4c0:    df ff ff f6       bun    -10        # 0x49c
+ 4c4:    68 27 ff fa       l32    r1, [r7-6]<<2
+ 4c8:    10 01 0b 01       sla    r0, r1, r1, 1
+ 4cc:    48 47 ff fc       addi   r2, r7, -4
+ 4d0:    08 42 08 00       add    r2, r2, r1
+ 4d4:    0c 42 08 00       sub    r2, r2, r1
+ 4d8:    68 42 00 00       l32    r2, [r2+0]<<2
+ 4dc:    74 47 ff f9       s32    [r7-7]<<2, r2
+ 4e0:    68 27 ff f9       l32    r1, [r7-7]<<2
+ 4e4:    28 00 00 40       push   r1
+ 4e8:    e7 ff ff 6e       call   -146<<2        # 0x2a4
+ 4ec:    4b de 00 04       addi   sp, sp, 4
+ 4f0:    04 20 00 20       movs   r1, 32
+ 4f4:    28 00 00 40       push   r1
+ 4f8:    e7 ff ff 01       call   -255<<2        # 0x100
+ 4fc:    4b de 00 04       addi   sp, sp, 4
+ 500:    df ff ff eb       bun    -21        # 0x4b0
+ 504:    68 47 ff fa       l32    r2, [r7-6]<<2
+ 508:    0b c6 00 00       mov    sp, r6
+ 50c:    2c 00 01 c0       pop    r7
+ 510:    2c 00 01 80       pop    r6
+ 514:    7c 00 00 00       ret   
+  ...
+1000:    22 22 22 22       not    r17, r2
+  ...
diff --git a/examples/out/dump/poxim-terminal.poximdump b/examples/out/dump/poxim-terminal.poximdump
new file mode 100644
index 00000000..e151d4c8
--- /dev/null
+++ b/examples/out/dump/poxim-terminal.poximdump
@@ -0,0 +1,118 @@
+   0:    03 c0 7f fc       mov    sp, 32764
+   4:    dc 00 00 01       bun    1        # 0xc
+   8:    fc 00 00 00       int    0
+   c:    28 00 01 80       push   r6
+  10:    28 00 01 c0       push   r7
+  14:    08 de 00 00       mov    r6, sp
+  18:    08 e6 00 00       mov    r7, r6
+  1c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  20:    4f de 00 00       subi   sp, sp, 0
+  24:    e4 00 00 36       call   54<<2        # 0x100
+  28:    e7 ff ff f7       call   -9<<2        # 0x8
+  2c:    0b c6 00 00       mov    sp, r6
+  30:    2c 00 01 c0       pop    r7
+  34:    2c 00 01 80       pop    r6
+  38:    7c 00 00 00       ret   
+  3c:    28 00 01 80       push   r6
+  40:    28 00 01 c0       push   r7
+  44:    08 de 00 00       mov    r6, sp
+  48:    08 e6 00 00       mov    r7, r6
+  4c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  50:    4f de 00 00       subi   sp, sp, 0
+  54:    0b c6 00 00       mov    sp, r6
+  58:    2c 00 01 c0       pop    r7
+  5c:    2c 00 01 80       pop    r6
+  60:    7c 00 00 00       ret   
+  64:    28 00 01 80       push   r6
+  68:    28 00 01 c0       push   r7
+  6c:    08 de 00 00       mov    r6, sp
+  70:    08 e6 00 00       mov    r7, r6
+  74:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  78:    4f de 00 0c       subi   sp, sp, 12
+  7c:    68 27 00 04       l32    r1, [r7+4]<<2
+  80:    74 27 00 00       s32    [r7+0]<<2, r1
+  84:    68 27 00 05       l32    r1, [r7+5]<<2
+  88:    74 27 ff ff       s32    [r7-1]<<2, r1
+  8c:    04 20 00 00       movs   r1, 0
+  90:    74 27 ff fe       s32    [r7-2]<<2, r1
+  94:    68 27 00 18       l32    r1, [r7+24]<<2
+  98:    10 01 0d 01       srl    r0, r1, r1, 1
+  9c:    68 47 ff f8       l32    r2, [r7-8]<<2
+  a0:    14 02 08 00       cmp    r2, r1
+  a4:    a8 00 00 11       bae    17        # 0xec
+  a8:    dc 00 00 05       bun    5        # 0xc0
+  ac:    68 27 ff f8       l32    r1, [r7-8]<<2
+  b0:    08 41 00 00       mov    r2, r1
+  b4:    48 21 00 01       addi   r1, r1, 1
+  b8:    74 27 ff fe       s32    [r7-2]<<2, r1
+  bc:    df ff ff f5       bun    -11        # 0x94
+  c0:    68 27 00 00       l32    r1, [r7+0]<<2
+  c4:    08 41 00 00       mov    r2, r1
+  c8:    48 21 00 04       addi   r1, r1, 4
+  cc:    74 27 00 00       s32    [r7+0]<<2, r1
+  d0:    68 27 ff ff       l32    r1, [r7-1]<<2
+  d4:    08 61 00 00       mov    r3, r1
+  d8:    48 21 00 04       addi   r1, r1, 4
+  dc:    74 27 ff ff       s32    [r7-1]<<2, r1
+  e0:    68 63 00 00       l32    r3, [r3+0]<<2
+  e4:    74 62 00 00       s32    [r2+0]<<2, r3
+  e8:    df ff ff f0       bun    -16        # 0xac
+  ec:    68 47 00 06       l32    r2, [r7+6]<<2
+  f0:    0b c6 00 00       mov    sp, r6
+  f4:    2c 00 01 c0       pop    r7
+  f8:    2c 00 01 80       pop    r6
+  fc:    7c 00 00 00       ret   
+ 100:    28 00 01 80       push   r6
+ 104:    28 00 01 c0       push   r7
+ 108:    08 de 00 00       mov    r6, sp
+ 10c:    08 e6 00 00       mov    r7, r6
+ 110:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 114:    4f de 00 00       subi   sp, sp, 0
+ 118:    01 00 04 00       mov    r8, 1024
+ 11c:    68 28 00 00       l32    r1, [r8+0]<<2
+ 120:    04 40 00 65       movs   r2, 101
+ 124:    74 41 00 00       s32    [r1+0]<<2, r2
+ 128:    01 00 04 00       mov    r8, 1024
+ 12c:    68 28 00 00       l32    r1, [r8+0]<<2
+ 130:    04 40 00 75       movs   r2, 117
+ 134:    74 41 00 00       s32    [r1+0]<<2, r2
+ 138:    01 00 04 00       mov    r8, 1024
+ 13c:    68 28 00 00       l32    r1, [r8+0]<<2
+ 140:    04 40 00 20       movs   r2, 32
+ 144:    74 41 00 00       s32    [r1+0]<<2, r2
+ 148:    01 00 04 00       mov    r8, 1024
+ 14c:    68 28 00 00       l32    r1, [r8+0]<<2
+ 150:    04 40 00 74       movs   r2, 116
+ 154:    74 41 00 00       s32    [r1+0]<<2, r2
+ 158:    01 00 04 00       mov    r8, 1024
+ 15c:    68 28 00 00       l32    r1, [r8+0]<<2
+ 160:    04 40 00 65       movs   r2, 101
+ 164:    74 41 00 00       s32    [r1+0]<<2, r2
+ 168:    01 00 04 00       mov    r8, 1024
+ 16c:    68 28 00 00       l32    r1, [r8+0]<<2
+ 170:    04 40 00 20       movs   r2, 32
+ 174:    74 41 00 00       s32    [r1+0]<<2, r2
+ 178:    01 00 04 00       mov    r8, 1024
+ 17c:    68 28 00 00       l32    r1, [r8+0]<<2
+ 180:    04 40 00 61       movs   r2, 97
+ 184:    74 41 00 00       s32    [r1+0]<<2, r2
+ 188:    01 00 04 00       mov    r8, 1024
+ 18c:    68 28 00 00       l32    r1, [r8+0]<<2
+ 190:    04 40 00 6d       movs   r2, 109
+ 194:    74 41 00 00       s32    [r1+0]<<2, r2
+ 198:    01 00 04 00       mov    r8, 1024
+ 19c:    68 28 00 00       l32    r1, [r8+0]<<2
+ 1a0:    04 40 00 6f       movs   r2, 111
+ 1a4:    74 41 00 00       s32    [r1+0]<<2, r2
+ 1a8:    01 00 04 00       mov    r8, 1024
+ 1ac:    68 28 00 00       l32    r1, [r8+0]<<2
+ 1b0:    04 40 00 21       movs   r2, 33
+ 1b4:    74 41 00 00       s32    [r1+0]<<2, r2
+ 1b8:    04 40 00 00       movs   r2, 0
+ 1bc:    0b c6 00 00       mov    sp, r6
+ 1c0:    2c 00 01 c0       pop    r7
+ 1c4:    2c 00 01 80       pop    r6
+ 1c8:    7c 00 00 00       ret   
+  ...
+1000:    22 22 22 22       not    r17, r2
+  ...
diff --git a/examples/out/dump/poxim-while.poximdump b/examples/out/dump/poxim-while.poximdump
new file mode 100644
index 00000000..9a8d4a5e
--- /dev/null
+++ b/examples/out/dump/poxim-while.poximdump
@@ -0,0 +1,102 @@
+   0:    03 c0 7f fc       mov    sp, 32764
+   4:    dc 00 00 01       bun    1        # 0xc
+   8:    fc 00 00 00       int    0
+   c:    28 00 01 80       push   r6
+  10:    28 00 01 c0       push   r7
+  14:    08 de 00 00       mov    r6, sp
+  18:    08 e6 00 00       mov    r7, r6
+  1c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  20:    4f de 00 00       subi   sp, sp, 0
+  24:    e4 00 00 4b       call   75<<2        # 0x154
+  28:    e7 ff ff f7       call   -9<<2        # 0x8
+  2c:    0b c6 00 00       mov    sp, r6
+  30:    2c 00 01 c0       pop    r7
+  34:    2c 00 01 80       pop    r6
+  38:    7c 00 00 00       ret   
+  3c:    28 00 01 80       push   r6
+  40:    28 00 01 c0       push   r7
+  44:    08 de 00 00       mov    r6, sp
+  48:    08 e6 00 00       mov    r7, r6
+  4c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  50:    4f de 00 00       subi   sp, sp, 0
+  54:    0b c6 00 00       mov    sp, r6
+  58:    2c 00 01 c0       pop    r7
+  5c:    2c 00 01 80       pop    r6
+  60:    7c 00 00 00       ret   
+  64:    28 00 01 80       push   r6
+  68:    28 00 01 c0       push   r7
+  6c:    08 de 00 00       mov    r6, sp
+  70:    08 e6 00 00       mov    r7, r6
+  74:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  78:    4f de 00 0c       subi   sp, sp, 12
+  7c:    68 27 00 04       l32    r1, [r7+4]<<2
+  80:    74 27 00 00       s32    [r7+0]<<2, r1
+  84:    68 27 00 05       l32    r1, [r7+5]<<2
+  88:    74 27 ff ff       s32    [r7-1]<<2, r1
+  8c:    04 20 00 00       movs   r1, 0
+  90:    74 27 ff fe       s32    [r7-2]<<2, r1
+  94:    68 27 00 18       l32    r1, [r7+24]<<2
+  98:    10 01 0d 01       srl    r0, r1, r1, 1
+  9c:    68 47 ff f8       l32    r2, [r7-8]<<2
+  a0:    14 02 08 00       cmp    r2, r1
+  a4:    a8 00 00 11       bae    17        # 0xec
+  a8:    dc 00 00 05       bun    5        # 0xc0
+  ac:    68 27 ff f8       l32    r1, [r7-8]<<2
+  b0:    08 41 00 00       mov    r2, r1
+  b4:    48 21 00 01       addi   r1, r1, 1
+  b8:    74 27 ff fe       s32    [r7-2]<<2, r1
+  bc:    df ff ff f5       bun    -11        # 0x94
+  c0:    68 27 00 00       l32    r1, [r7+0]<<2
+  c4:    08 41 00 00       mov    r2, r1
+  c8:    48 21 00 04       addi   r1, r1, 4
+  cc:    74 27 00 00       s32    [r7+0]<<2, r1
+  d0:    68 27 ff ff       l32    r1, [r7-1]<<2
+  d4:    08 61 00 00       mov    r3, r1
+  d8:    48 21 00 04       addi   r1, r1, 4
+  dc:    74 27 ff ff       s32    [r7-1]<<2, r1
+  e0:    68 63 00 00       l32    r3, [r3+0]<<2
+  e4:    74 62 00 00       s32    [r2+0]<<2, r3
+  e8:    df ff ff f0       bun    -16        # 0xac
+  ec:    68 47 00 06       l32    r2, [r7+6]<<2
+  f0:    0b c6 00 00       mov    sp, r6
+  f4:    2c 00 01 c0       pop    r7
+  f8:    2c 00 01 80       pop    r6
+  fc:    7c 00 00 00       ret   
+ 100:    28 00 01 80       push   r6
+ 104:    28 00 01 c0       push   r7
+ 108:    08 de 00 00       mov    r6, sp
+ 10c:    08 e6 00 00       mov    r7, r6
+ 110:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 114:    4f de 00 04       subi   sp, sp, 4
+ 118:    04 20 00 00       movs   r1, 0
+ 11c:    74 27 00 00       s32    [r7+0]<<2, r1
+ 120:    68 27 00 00       l32    r1, [r7+0]<<2
+ 124:    68 47 00 04       l32    r2, [r7+4]<<2
+ 128:    14 01 10 00       cmp    r1, r2
+ 12c:    bc 00 00 04       bge    4        # 0x140
+ 130:    68 27 00 00       l32    r1, [r7+0]<<2
+ 134:    48 21 00 01       addi   r1, r1, 1
+ 138:    74 27 00 00       s32    [r7+0]<<2, r1
+ 13c:    df ff ff f8       bun    -8        # 0x120
+ 140:    68 47 00 00       l32    r2, [r7+0]<<2
+ 144:    0b c6 00 00       mov    sp, r6
+ 148:    2c 00 01 c0       pop    r7
+ 14c:    2c 00 01 80       pop    r6
+ 150:    7c 00 00 00       ret   
+ 154:    28 00 01 80       push   r6
+ 158:    28 00 01 c0       push   r7
+ 15c:    08 de 00 00       mov    r6, sp
+ 160:    08 e6 00 00       mov    r7, r6
+ 164:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 168:    4f de 00 04       subi   sp, sp, 4
+ 16c:    04 20 00 69       movs   r1, 105
+ 170:    74 27 00 00       s32    [r7+0]<<2, r1
+ 174:    68 27 00 00       l32    r1, [r7+0]<<2
+ 178:    28 00 00 40       push   r1
+ 17c:    e7 ff ff e0       call   -32<<2        # 0x100
+ 180:    4b de 00 04       addi   sp, sp, 4
+ 184:    0b c6 00 00       mov    sp, r6
+ 188:    2c 00 01 c0       pop    r7
+ 18c:    2c 00 01 80       pop    r6
+ 190:    7c 00 00 00       ret   
+  ...
diff --git a/examples/out/intep/poxim-ex1.interp b/examples/out/intep/poxim-ex1.interp
new file mode 100644
index 00000000..c5885e80
--- /dev/null
+++ b/examples/out/intep/poxim-ex1.interp
@@ -0,0 +1,67 @@
+[START OF SIMULATION]
+0x00000000:	mov sp,32764            	SP=0x00007FFC
+0x00000004:	bun 1                   	PC=0x0000000C
+0x0000000C:	push r6                 	MEM[0x00007FFC]{0x00000000}={R6}
+0x00000010:	push r7                 	MEM[0x00007FF8]{0x00000000}={R7}
+0x00000014:	add r6,sp,r0            	R6=SP+R0=0x00007FF4,SR=0x00000000
+0x00000018:	add r7,r6,r0            	R7=R6+R0=0x00007FF4,SR=0x00000000
+0x0000001C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFD,SR=0x00000000
+0x00000020:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FF4,SR=0x00000000
+0x00000024:	call 77                 	PC=0x0000015C,MEM[0x00007FF4]=0x00000028
+0x0000015C:	push r6                 	MEM[0x00007FF0]{0x00007FF4}={R6}
+0x00000160:	push r7                 	MEM[0x00007FEC]{0x00001FFD}={R7}
+0x00000164:	add r6,sp,r0            	R6=SP+R0=0x00007FE8,SR=0x00000000
+0x00000168:	add r7,r6,r0            	R7=R6+R0=0x00007FE8,SR=0x00000000
+0x0000016C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFA,SR=0x00000000
+0x00000170:	subi sp,sp,8            	SP=SP-0x00000008=0x00007FE0,SR=0x00000000
+0x00000174:	movs r1,2               	R1=0x00000002
+0x00000178:	s32 [r7+0],r1           	MEM[0x00007FE8]=R1=0x00000002
+0x0000017C:	movs r1,5               	R1=0x00000005
+0x00000180:	push r1                 	MEM[0x00007FE0]{0x00000005}={R1}
+0x00000184:	movs r1,4               	R1=0x00000004
+0x00000188:	push r1                 	MEM[0x00007FDC]{0x00000004}={R1}
+0x0000018C:	movs r1,3               	R1=0x00000003
+0x00000190:	push r1                 	MEM[0x00007FD8]{0x00000003}={R1}
+0x00000194:	movs r1,2               	R1=0x00000002
+0x00000198:	push r1                 	MEM[0x00007FD4]{0x00000002}={R1}
+0x0000019C:	movs r1,1               	R1=0x00000001
+0x000001A0:	push r1                 	MEM[0x00007FD0]{0x00000001}={R1}
+0x000001A4:	call -42                	PC=0x00000100,MEM[0x00007FCC]=0x000001A8
+0x00000100:	push r6                 	MEM[0x00007FC8]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FC4]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FC0,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FC0,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF0,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FC0,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FD0]=0x00000001
+0x0000011C:	l32 r2,[r7+5]           	R2=MEM[0x00007FD4]=0x00000002
+0x00000120:	add r1,r1,r2            	R1=R1+R2=0x00000003,SR=0x00000000
+0x00000124:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000128:	l32 r2,[r7+6]           	R2=MEM[0x00007FD8]=0x00000003
+0x0000012C:	add r1,r1,r2            	R1=R1+R2=0x00000004,SR=0x00000000
+0x00000130:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000134:	l32 r2,[r7+7]           	R2=MEM[0x00007FDC]=0x00000004
+0x00000138:	add r1,r1,r2            	R1=R1+R2=0x00000005,SR=0x00000000
+0x0000013C:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000140:	l32 r2,[r7+8]           	R2=MEM[0x00007FE0]=0x00000005
+0x00000144:	sub r1,r1,r2            	R1=R1-R2=0xFFFFFFFC,SR=0x00000011
+0x00000148:	add r2,r1,r0            	R2=R1+R0=0xFFFFFFFC,SR=0x00000010
+0x0000014C:	add sp,r6,r0            	SP=R6+R0=0x00007FC0,SR=0x00000000
+0x00000150:	pop r7                  	{R7}=MEM[0x00007FC4]{0x00001FFA}
+0x00000154:	pop r6                  	{R6}=MEM[0x00007FC8]{0x00007FE8}
+0x00000158:	ret                     	PC=MEM[0x00007FCC]=0x000001A8
+0x000001A8:	addi sp,sp,20           	SP=SP+0x00000014=0x00007FE0,SR=0x00000000
+0x000001AC:	subi r2,r2,69           	R2=R2-0x00000045=0xFFFFFFB7,SR=0x00000010
+0x000001B0:	s32 [r7-1],r2           	MEM[0x00007FE4]=R2=0xFFFFFFB7
+0x000001B4:	l32 r1,[r7+0]           	R1=MEM[0x00007FE8]=0x00000002
+0x000001B8:	l32 r2,[r7-1]           	R2=MEM[0x00007FE4]=0xFFFFFFB7
+0x000001BC:	add r1,r1,r2            	R1=R1+R2=0xFFFFFFB9,SR=0x00000010
+0x000001C0:	sub r1,r1,r2            	R1=R1-R2=0x00000002,SR=0x00000000
+0x000001C4:	add r2,r1,r0            	R2=R1+R0=0x00000002,SR=0x00000000
+0x000001C8:	add sp,r6,r0            	SP=R6+R0=0x00007FE8,SR=0x00000000
+0x000001CC:	pop r7                  	{R7}=MEM[0x00007FEC]{0x00001FFD}
+0x000001D0:	pop r6                  	{R6}=MEM[0x00007FF0]{0x00007FF4}
+0x000001D4:	ret                     	PC=MEM[0x00007FF4]=0x00000028
+0x00000028:	call -9                 	PC=0x00000008,MEM[0x00007FF4]=0x0000002C
+0x00000008:	int 0                   	CR=0x00000000,PC=0x00000000
+[END OF SIMULATION]
\ No newline at end of file
diff --git a/examples/out/intep/poxim-ex2.interp b/examples/out/intep/poxim-ex2.interp
new file mode 100644
index 00000000..ff78a6a3
--- /dev/null
+++ b/examples/out/intep/poxim-ex2.interp
@@ -0,0 +1,87 @@
+[START OF SIMULATION]
+0x00000000:	mov sp,32764            	SP=0x00007FFC
+0x00000004:	bun 1                   	PC=0x0000000C
+0x0000000C:	push r6                 	MEM[0x00007FFC]{0x00000000}={R6}
+0x00000010:	push r7                 	MEM[0x00007FF8]{0x00000000}={R7}
+0x00000014:	add r6,sp,r0            	R6=SP+R0=0x00007FF4,SR=0x00000000
+0x00000018:	add r7,r6,r0            	R7=R6+R0=0x00007FF4,SR=0x00000000
+0x0000001C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFD,SR=0x00000000
+0x00000020:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FF4,SR=0x00000000
+0x00000024:	call 91                 	PC=0x00000194,MEM[0x00007FF4]=0x00000028
+0x00000194:	push r6                 	MEM[0x00007FF0]{0x00007FF4}={R6}
+0x00000198:	push r7                 	MEM[0x00007FEC]{0x00001FFD}={R7}
+0x0000019C:	add r6,sp,r0            	R6=SP+R0=0x00007FE8,SR=0x00000000
+0x000001A0:	add r7,r6,r0            	R7=R6+R0=0x00007FE8,SR=0x00000000
+0x000001A4:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFA,SR=0x00000000
+0x000001A8:	subi sp,sp,8            	SP=SP-0x00000008=0x00007FE0,SR=0x00000000
+0x000001AC:	movs r1,2               	R1=0x00000002
+0x000001B0:	s32 [r7+0],r1           	MEM[0x00007FE8]=R1=0x00000002
+0x000001B4:	movs r1,5               	R1=0x00000005
+0x000001B8:	push r1                 	MEM[0x00007FE0]{0x00000005}={R1}
+0x000001BC:	movs r1,4               	R1=0x00000004
+0x000001C0:	push r1                 	MEM[0x00007FDC]{0x00000004}={R1}
+0x000001C4:	movs r1,3               	R1=0x00000003
+0x000001C8:	push r1                 	MEM[0x00007FD8]{0x00000003}={R1}
+0x000001CC:	movs r1,2               	R1=0x00000002
+0x000001D0:	push r1                 	MEM[0x00007FD4]{0x00000002}={R1}
+0x000001D4:	movs r1,1               	R1=0x00000001
+0x000001D8:	push r1                 	MEM[0x00007FD0]{0x00000001}={R1}
+0x000001DC:	call -42                	PC=0x00000138,MEM[0x00007FCC]=0x000001E0
+0x00000138:	push r6                 	MEM[0x00007FC8]{0x00007FE8}={R6}
+0x0000013C:	push r7                 	MEM[0x00007FC4]{0x00001FFA}={R7}
+0x00000140:	add r6,sp,r0            	R6=SP+R0=0x00007FC0,SR=0x00000000
+0x00000144:	add r7,r6,r0            	R7=R6+R0=0x00007FC0,SR=0x00000000
+0x00000148:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF0,SR=0x00000000
+0x0000014C:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FC0,SR=0x00000000
+0x00000150:	l32 r1,[r7+4]           	R1=MEM[0x00007FD0]=0x00000001
+0x00000154:	l32 r2,[r7+5]           	R2=MEM[0x00007FD4]=0x00000002
+0x00000158:	add r1,r1,r2            	R1=R1+R2=0x00000003,SR=0x00000000
+0x0000015C:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000160:	l32 r2,[r7+6]           	R2=MEM[0x00007FD8]=0x00000003
+0x00000164:	add r1,r1,r2            	R1=R1+R2=0x00000004,SR=0x00000000
+0x00000168:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x0000016C:	l32 r2,[r7+7]           	R2=MEM[0x00007FDC]=0x00000004
+0x00000170:	add r1,r1,r2            	R1=R1+R2=0x00000005,SR=0x00000000
+0x00000174:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000178:	l32 r2,[r7+8]           	R2=MEM[0x00007FE0]=0x00000005
+0x0000017C:	sub r1,r1,r2            	R1=R1-R2=0xFFFFFFFC,SR=0x00000011
+0x00000180:	add r2,r1,r0            	R2=R1+R0=0xFFFFFFFC,SR=0x00000010
+0x00000184:	add sp,r6,r0            	SP=R6+R0=0x00007FC0,SR=0x00000000
+0x00000188:	pop r7                  	{R7}=MEM[0x00007FC4]{0x00001FFA}
+0x0000018C:	pop r6                  	{R6}=MEM[0x00007FC8]{0x00007FE8}
+0x00000190:	ret                     	PC=MEM[0x00007FCC]=0x000001E0
+0x000001E0:	addi sp,sp,20           	SP=SP+0x00000014=0x00007FE0,SR=0x00000000
+0x000001E4:	subi r2,r2,69           	R2=R2-0x00000045=0xFFFFFFB7,SR=0x00000010
+0x000001E8:	s32 [r7-1],r2           	MEM[0x00007FE4]=R2=0xFFFFFFB7
+0x000001EC:	l32 r1,[r7-1]           	R1=MEM[0x00007FE4]=0xFFFFFFB7
+0x000001F0:	push r1                 	MEM[0x00007FE0]{0xFFFFFFB7}={R1}
+0x000001F4:	l32 r1,[r7+0]           	R1=MEM[0x00007FE8]=0x00000002
+0x000001F8:	push r1                 	MEM[0x00007FDC]{0x00000002}={R1}
+0x000001FC:	call -64                	PC=0x00000100,MEM[0x00007FD8]=0x00000200
+0x00000100:	push r6                 	MEM[0x00007FD4]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FD0]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FCC,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FCC,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF3,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FCC,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FDC]=0x00000002
+0x0000011C:	l32 r2,[r7+5]           	R2=MEM[0x00007FE0]=0xFFFFFFB7
+0x00000120:	sub r1,r1,r2            	R1=R1-R2=0x0000004B,SR=0x00000001
+0x00000124:	add r2,r1,r0            	R2=R1+R0=0x0000004B,SR=0x00000000
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FCC,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FD0]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FD4]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FD8]=0x00000200
+0x00000200:	addi sp,sp,8            	SP=SP+0x00000008=0x00007FE0,SR=0x00000000
+0x00000204:	l32 r1,[r7+0]           	R1=MEM[0x00007FE8]=0x00000002
+0x00000208:	l32 r2,[r7-1]           	R2=MEM[0x00007FE4]=0xFFFFFFB7
+0x0000020C:	add r1,r1,r2            	R1=R1+R2=0xFFFFFFB9,SR=0x00000010
+0x00000210:	sub r1,r1,r2            	R1=R1-R2=0x00000002,SR=0x00000000
+0x00000214:	add r2,r1,r0            	R2=R1+R0=0x00000002,SR=0x00000000
+0x00000218:	add sp,r6,r0            	SP=R6+R0=0x00007FE8,SR=0x00000000
+0x0000021C:	pop r7                  	{R7}=MEM[0x00007FEC]{0x00001FFD}
+0x00000220:	pop r6                  	{R6}=MEM[0x00007FF0]{0x00007FF4}
+0x00000224:	ret                     	PC=MEM[0x00007FF4]=0x00000028
+0x00000028:	call -9                 	PC=0x00000008,MEM[0x00007FF4]=0x0000002C
+0x00000008:	int 0                   	CR=0x00000000,PC=0x00000000
+[END OF SIMULATION]
\ No newline at end of file
diff --git a/examples/out/intep/poxim-ex3.interp b/examples/out/intep/poxim-ex3.interp
new file mode 100644
index 00000000..2c26e753
--- /dev/null
+++ b/examples/out/intep/poxim-ex3.interp
@@ -0,0 +1,100 @@
+[START OF SIMULATION]
+0x00000000:	mov sp,32764            	SP=0x00007FFC
+0x00000004:	bun 1                   	PC=0x0000000C
+0x0000000C:	push r6                 	MEM[0x00007FFC]{0x00000000}={R6}
+0x00000010:	push r7                 	MEM[0x00007FF8]{0x00000000}={R7}
+0x00000014:	add r6,sp,r0            	R6=SP+R0=0x00007FF4,SR=0x00000000
+0x00000018:	add r7,r6,r0            	R7=R6+R0=0x00007FF4,SR=0x00000000
+0x0000001C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFD,SR=0x00000000
+0x00000020:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FF4,SR=0x00000000
+0x00000024:	call 104                	PC=0x000001C8,MEM[0x00007FF4]=0x00000028
+0x000001C8:	push r6                 	MEM[0x00007FF0]{0x00007FF4}={R6}
+0x000001CC:	push r7                 	MEM[0x00007FEC]{0x00001FFD}={R7}
+0x000001D0:	add r6,sp,r0            	R6=SP+R0=0x00007FE8,SR=0x00000000
+0x000001D4:	add r7,r6,r0            	R7=R6+R0=0x00007FE8,SR=0x00000000
+0x000001D8:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFA,SR=0x00000000
+0x000001DC:	subi sp,sp,8            	SP=SP-0x00000008=0x00007FE0,SR=0x00000000
+0x000001E0:	movs r1,2               	R1=0x00000002
+0x000001E4:	s32 [r7+0],r1           	MEM[0x00007FE8]=R1=0x00000002
+0x000001E8:	movs r1,18              	R1=0x00000012
+0x000001EC:	s32 [r7-1],r1           	MEM[0x00007FE4]=R1=0x00000012
+0x000001F0:	movs r1,5               	R1=0x00000005
+0x000001F4:	push r1                 	MEM[0x00007FE0]{0x00000005}={R1}
+0x000001F8:	movs r1,16              	R1=0x00000010
+0x000001FC:	push r1                 	MEM[0x00007FDC]{0x00000010}={R1}
+0x00000200:	movs r1,8               	R1=0x00000008
+0x00000204:	push r1                 	MEM[0x00007FD8]{0x00000008}={R1}
+0x00000208:	movs r1,2               	R1=0x00000002
+0x0000020C:	push r1                 	MEM[0x00007FD4]{0x00000002}={R1}
+0x00000210:	movs r1,1               	R1=0x00000001
+0x00000214:	push r1                 	MEM[0x00007FD0]{0x00000001}={R1}
+0x00000218:	call -44                	PC=0x0000016C,MEM[0x00007FCC]=0x0000021C
+0x0000016C:	push r6                 	MEM[0x00007FC8]{0x00007FE8}={R6}
+0x00000170:	push r7                 	MEM[0x00007FC4]{0x00001FFA}={R7}
+0x00000174:	add r6,sp,r0            	R6=SP+R0=0x00007FC0,SR=0x00000000
+0x00000178:	add r7,r6,r0            	R7=R6+R0=0x00007FC0,SR=0x00000000
+0x0000017C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF0,SR=0x00000000
+0x00000180:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FC0,SR=0x00000000
+0x00000184:	l32 r1,[r7+4]           	R1=MEM[0x00007FD0]=0x00000001
+0x00000188:	l32 r2,[r7+5]           	R2=MEM[0x00007FD4]=0x00000002
+0x0000018C:	add r1,r1,r2            	R1=R1+R2=0x00000003,SR=0x00000000
+0x00000190:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000194:	l32 r2,[r7+6]           	R2=MEM[0x00007FD8]=0x00000008
+0x00000198:	add r1,r1,r2            	R1=R1+R2=0x00000009,SR=0x00000000
+0x0000019C:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x000001A0:	l32 r2,[r7+7]           	R2=MEM[0x00007FDC]=0x00000010
+0x000001A4:	add r1,r1,r2            	R1=R1+R2=0x00000011,SR=0x00000000
+0x000001A8:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x000001AC:	l32 r2,[r7+8]           	R2=MEM[0x00007FE0]=0x00000005
+0x000001B0:	sub r1,r1,r2            	R1=R1-R2=0xFFFFFFFC,SR=0x00000011
+0x000001B4:	add r2,r1,r0            	R2=R1+R0=0xFFFFFFFC,SR=0x00000010
+0x000001B8:	add sp,r6,r0            	SP=R6+R0=0x00007FC0,SR=0x00000000
+0x000001BC:	pop r7                  	{R7}=MEM[0x00007FC4]{0x00001FFA}
+0x000001C0:	pop r6                  	{R6}=MEM[0x00007FC8]{0x00007FE8}
+0x000001C4:	ret                     	PC=MEM[0x00007FCC]=0x0000021C
+0x0000021C:	addi sp,sp,20           	SP=SP+0x00000014=0x00007FE0,SR=0x00000000
+0x00000220:	l32 r1,[r7-1]           	R1=MEM[0x00007FE4]=0x00000012
+0x00000224:	push r1                 	MEM[0x00007FE0]{0x00000012}={R1}
+0x00000228:	l32 r1,[r7+0]           	R1=MEM[0x00007FE8]=0x00000002
+0x0000022C:	push r1                 	MEM[0x00007FDC]{0x00000002}={R1}
+0x00000230:	call -64                	PC=0x00000134,MEM[0x00007FD8]=0x00000234
+0x00000134:	push r6                 	MEM[0x00007FD4]{0x00007FE8}={R6}
+0x00000138:	push r7                 	MEM[0x00007FD0]{0x00001FFA}={R7}
+0x0000013C:	add r6,sp,r0            	R6=SP+R0=0x00007FCC,SR=0x00000000
+0x00000140:	add r7,r6,r0            	R7=R6+R0=0x00007FCC,SR=0x00000000
+0x00000144:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF3,SR=0x00000000
+0x00000148:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FCC,SR=0x00000000
+0x0000014C:	l32 r1,[r7+4]           	R1=MEM[0x00007FDC]=0x00000002
+0x00000150:	l32 r2,[r7+5]           	R2=MEM[0x00007FE0]=0x00000012
+0x00000154:	sub r1,r1,r2            	R1=R1-R2=0xFFFFFFF0,SR=0x00000011
+0x00000158:	add r2,r1,r0            	R2=R1+R0=0xFFFFFFF0,SR=0x00000010
+0x0000015C:	add sp,r6,r0            	SP=R6+R0=0x00007FCC,SR=0x00000000
+0x00000160:	pop r7                  	{R7}=MEM[0x00007FD0]{0x00001FFA}
+0x00000164:	pop r6                  	{R6}=MEM[0x00007FD4]{0x00007FE8}
+0x00000168:	ret                     	PC=MEM[0x00007FD8]=0x00000234
+0x00000234:	addi sp,sp,8            	SP=SP+0x00000008=0x00007FE0,SR=0x00000000
+0x00000238:	addi r1,r7,0            	R1=R7+0x00000000=0x00001FFA,SR=0x00000000
+0x0000023C:	push r1                 	MEM[0x00007FE0]{0x00001FFA}={R1}
+0x00000240:	call -81                	PC=0x00000100,MEM[0x00007FDC]=0x00000244
+0x00000100:	push r6                 	MEM[0x00007FD8]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FD4]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FD0,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FD0,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF4,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FD0,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x00001FFA
+0x0000011C:	movs r2,420             	R2=0x000001A4
+0x00000120:	s32 [r1+0],r2           	MEM[0x00007FE8]=R2=0x000001A4
+0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007FD0,SR=0x00000000
+0x00000128:	pop r7                  	{R7}=MEM[0x00007FD4]{0x00001FFA}
+0x0000012C:	pop r6                  	{R6}=MEM[0x00007FD8]{0x00007FE8}
+0x00000130:	ret                     	PC=MEM[0x00007FDC]=0x00000244
+0x00000244:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FE0,SR=0x00000000
+0x00000248:	l32 r2,[r7-1]           	R2=MEM[0x00007FE4]=0x00000012
+0x0000024C:	add sp,r6,r0            	SP=R6+R0=0x00007FE8,SR=0x00000000
+0x00000250:	pop r7                  	{R7}=MEM[0x00007FEC]{0x00001FFD}
+0x00000254:	pop r6                  	{R6}=MEM[0x00007FF0]{0x00007FF4}
+0x00000258:	ret                     	PC=MEM[0x00007FF4]=0x00000028
+0x00000028:	call -9                 	PC=0x00000008,MEM[0x00007FF4]=0x0000002C
+0x00000008:	int 0                   	CR=0x00000000,PC=0x00000000
+[END OF SIMULATION]
\ No newline at end of file
diff --git a/examples/out/intep/poxim-fib-recursion.interp b/examples/out/intep/poxim-fib-recursion.interp
new file mode 100644
index 00000000..c70a9da3
--- /dev/null
+++ b/examples/out/intep/poxim-fib-recursion.interp
@@ -0,0 +1,885 @@
+[START OF SIMULATION]
+0x00000000:	mov sp,32764            	SP=0x00007FFC
+0x00000004:	bun 1                   	PC=0x0000000C
+0x0000000C:	push r6                 	MEM[0x00007FFC]{0x00000000}={R6}
+0x00000010:	push r7                 	MEM[0x00007FF8]{0x00000000}={R7}
+0x00000014:	add r6,sp,r0            	R6=SP+R0=0x00007FF4,SR=0x00000000
+0x00000018:	add r7,r6,r0            	R7=R6+R0=0x00007FF4,SR=0x00000000
+0x0000001C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFD,SR=0x00000000
+0x00000020:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FF4,SR=0x00000000
+0x00000024:	call 84                 	PC=0x00000178,MEM[0x00007FF4]=0x00000028
+0x00000178:	push r6                 	MEM[0x00007FF0]{0x00007FF4}={R6}
+0x0000017C:	push r7                 	MEM[0x00007FEC]{0x00001FFD}={R7}
+0x00000180:	add r6,sp,r0            	R6=SP+R0=0x00007FE8,SR=0x00000000
+0x00000184:	add r7,r6,r0            	R7=R6+R0=0x00007FE8,SR=0x00000000
+0x00000188:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFA,SR=0x00000000
+0x0000018C:	subi sp,sp,8            	SP=SP-0x00000008=0x00007FE0,SR=0x00000000
+0x00000190:	movs r1,6               	R1=0x00000006
+0x00000194:	push r1                 	MEM[0x00007FE0]{0x00000006}={R1}
+0x00000198:	call -39                	PC=0x00000100,MEM[0x00007FDC]=0x0000019C
+0x00000100:	push r6                 	MEM[0x00007FD8]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FD4]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FD0,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FD0,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF4,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FCC,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x00000006
+0x0000011C:	cmpi r1,2               	SR=0x00000000
+0x00000120:	bge 2                   	PC=0x0000012C
+0x0000012C:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x00000006
+0x00000130:	subi r1,r1,1            	R1=R1-0x00000001=0x00000005,SR=0x00000000
+0x00000134:	push r1                 	MEM[0x00007FCC]{0x00000005}={R1}
+0x00000138:	call -15                	PC=0x00000100,MEM[0x00007FC8]=0x0000013C
+0x00000100:	push r6                 	MEM[0x00007FC4]{0x00007FD0}={R6}
+0x00000104:	push r7                 	MEM[0x00007FC0]{0x00001FF4}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FBC,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FBC,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEF,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FB8,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000005
+0x0000011C:	cmpi r1,2               	SR=0x00000000
+0x00000120:	bge 2                   	PC=0x0000012C
+0x0000012C:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000005
+0x00000130:	subi r1,r1,1            	R1=R1-0x00000001=0x00000004,SR=0x00000000
+0x00000134:	push r1                 	MEM[0x00007FB8]{0x00000004}={R1}
+0x00000138:	call -15                	PC=0x00000100,MEM[0x00007FB4]=0x0000013C
+0x00000100:	push r6                 	MEM[0x00007FB0]{0x00007FBC}={R6}
+0x00000104:	push r7                 	MEM[0x00007FAC]{0x00001FEF}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FA8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FA8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEA,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FA4,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000004
+0x0000011C:	cmpi r1,2               	SR=0x00000000
+0x00000120:	bge 2                   	PC=0x0000012C
+0x0000012C:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000004
+0x00000130:	subi r1,r1,1            	R1=R1-0x00000001=0x00000003,SR=0x00000000
+0x00000134:	push r1                 	MEM[0x00007FA4]{0x00000003}={R1}
+0x00000138:	call -15                	PC=0x00000100,MEM[0x00007FA0]=0x0000013C
+0x00000100:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
+0x00000104:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000003
+0x0000011C:	cmpi r1,2               	SR=0x00000000
+0x00000120:	bge 2                   	PC=0x0000012C
+0x0000012C:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000003
+0x00000130:	subi r1,r1,1            	R1=R1-0x00000001=0x00000002,SR=0x00000000
+0x00000134:	push r1                 	MEM[0x00007F90]{0x00000002}={R1}
+0x00000138:	call -15                	PC=0x00000100,MEM[0x00007F8C]=0x0000013C
+0x00000100:	push r6                 	MEM[0x00007F88]{0x00007F94}={R6}
+0x00000104:	push r7                 	MEM[0x00007F84]{0x00001FE5}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F80,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F80,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE0,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F7C,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000002
+0x0000011C:	cmpi r1,2               	SR=0x00000040
+0x00000120:	bge 2                   	PC=0x0000012C
+0x0000012C:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000002
+0x00000130:	subi r1,r1,1            	R1=R1-0x00000001=0x00000001,SR=0x00000000
+0x00000134:	push r1                 	MEM[0x00007F7C]{0x00000001}={R1}
+0x00000138:	call -15                	PC=0x00000100,MEM[0x00007F78]=0x0000013C
+0x00000100:	push r6                 	MEM[0x00007F74]{0x00007F80}={R6}
+0x00000104:	push r7                 	MEM[0x00007F70]{0x00001FE0}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F6C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F6C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FDB,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F68,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007F7C]=0x00000001
+0x0000011C:	cmpi r1,2               	SR=0x00000011
+0x00000120:	bge 2                   	PC=0x00000124
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007F7C]=0x00000001
+0x00000128:	bun 15                  	PC=0x00000168
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F6C,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F70]{0x00001FE0}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F74]{0x00007F80}
+0x00000174:	ret                     	PC=MEM[0x00007F78]=0x0000013C
+0x0000013C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F7C,SR=0x00000000
+0x00000140:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000002
+0x00000144:	subi r1,r1,2            	R1=R1-0x00000002=0x00000000,SR=0x00000040
+0x00000148:	push r1                 	MEM[0x00007F7C]{0x00000000}={R1}
+0x0000014C:	s32 [r7+0],r2           	MEM[0x00007F80]=R2=0x00000001
+0x00000150:	call -21                	PC=0x00000100,MEM[0x00007F78]=0x00000154
+0x00000100:	push r6                 	MEM[0x00007F74]{0x00007F80}={R6}
+0x00000104:	push r7                 	MEM[0x00007F70]{0x00001FE0}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F6C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F6C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FDB,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F68,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007F7C]=0x00000000
+0x0000011C:	cmpi r1,2               	SR=0x00000011
+0x00000120:	bge 2                   	PC=0x00000124
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007F7C]=0x00000000
+0x00000128:	bun 15                  	PC=0x00000168
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F6C,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F70]{0x00001FE0}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F74]{0x00007F80}
+0x00000174:	ret                     	PC=MEM[0x00007F78]=0x00000154
+0x00000154:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F7C,SR=0x00000000
+0x00000158:	l32 r1,[r7+0]           	R1=MEM[0x00007F80]=0x00000001
+0x0000015C:	add r1,r1,r2            	R1=R1+R2=0x00000001,SR=0x00000000
+0x00000160:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000164:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F80,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F84]{0x00001FE5}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F88]{0x00007F94}
+0x00000174:	ret                     	PC=MEM[0x00007F8C]=0x0000013C
+0x0000013C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F90,SR=0x00000000
+0x00000140:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000003
+0x00000144:	subi r1,r1,2            	R1=R1-0x00000002=0x00000001,SR=0x00000000
+0x00000148:	push r1                 	MEM[0x00007F90]{0x00000001}={R1}
+0x0000014C:	s32 [r7+0],r2           	MEM[0x00007F94]=R2=0x00000001
+0x00000150:	call -21                	PC=0x00000100,MEM[0x00007F8C]=0x00000154
+0x00000100:	push r6                 	MEM[0x00007F88]{0x00007F94}={R6}
+0x00000104:	push r7                 	MEM[0x00007F84]{0x00001FE5}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F80,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F80,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE0,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F7C,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000001
+0x0000011C:	cmpi r1,2               	SR=0x00000011
+0x00000120:	bge 2                   	PC=0x00000124
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007F90]=0x00000001
+0x00000128:	bun 15                  	PC=0x00000168
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F80,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F84]{0x00001FE5}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F88]{0x00007F94}
+0x00000174:	ret                     	PC=MEM[0x00007F8C]=0x00000154
+0x00000154:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F90,SR=0x00000000
+0x00000158:	l32 r1,[r7+0]           	R1=MEM[0x00007F94]=0x00000001
+0x0000015C:	add r1,r1,r2            	R1=R1+R2=0x00000002,SR=0x00000000
+0x00000160:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000164:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
+0x00000174:	ret                     	PC=MEM[0x00007FA0]=0x0000013C
+0x0000013C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
+0x00000140:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000004
+0x00000144:	subi r1,r1,2            	R1=R1-0x00000002=0x00000002,SR=0x00000000
+0x00000148:	push r1                 	MEM[0x00007FA4]{0x00000002}={R1}
+0x0000014C:	s32 [r7+0],r2           	MEM[0x00007FA8]=R2=0x00000001
+0x00000150:	call -21                	PC=0x00000100,MEM[0x00007FA0]=0x00000154
+0x00000100:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
+0x00000104:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
+0x0000011C:	cmpi r1,2               	SR=0x00000040
+0x00000120:	bge 2                   	PC=0x0000012C
+0x0000012C:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
+0x00000130:	subi r1,r1,1            	R1=R1-0x00000001=0x00000001,SR=0x00000000
+0x00000134:	push r1                 	MEM[0x00007F90]{0x00000001}={R1}
+0x00000138:	call -15                	PC=0x00000100,MEM[0x00007F8C]=0x0000013C
+0x00000100:	push r6                 	MEM[0x00007F88]{0x00007F94}={R6}
+0x00000104:	push r7                 	MEM[0x00007F84]{0x00001FE5}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F80,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F80,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE0,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F7C,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000001
+0x0000011C:	cmpi r1,2               	SR=0x00000011
+0x00000120:	bge 2                   	PC=0x00000124
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007F90]=0x00000001
+0x00000128:	bun 15                  	PC=0x00000168
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F80,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F84]{0x00001FE5}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F88]{0x00007F94}
+0x00000174:	ret                     	PC=MEM[0x00007F8C]=0x0000013C
+0x0000013C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F90,SR=0x00000000
+0x00000140:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
+0x00000144:	subi r1,r1,2            	R1=R1-0x00000002=0x00000000,SR=0x00000040
+0x00000148:	push r1                 	MEM[0x00007F90]{0x00000000}={R1}
+0x0000014C:	s32 [r7+0],r2           	MEM[0x00007F94]=R2=0x00000001
+0x00000150:	call -21                	PC=0x00000100,MEM[0x00007F8C]=0x00000154
+0x00000100:	push r6                 	MEM[0x00007F88]{0x00007F94}={R6}
+0x00000104:	push r7                 	MEM[0x00007F84]{0x00001FE5}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F80,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F80,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE0,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F7C,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000000
+0x0000011C:	cmpi r1,2               	SR=0x00000011
+0x00000120:	bge 2                   	PC=0x00000124
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007F90]=0x00000000
+0x00000128:	bun 15                  	PC=0x00000168
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F80,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F84]{0x00001FE5}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F88]{0x00007F94}
+0x00000174:	ret                     	PC=MEM[0x00007F8C]=0x00000154
+0x00000154:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F90,SR=0x00000000
+0x00000158:	l32 r1,[r7+0]           	R1=MEM[0x00007F94]=0x00000001
+0x0000015C:	add r1,r1,r2            	R1=R1+R2=0x00000001,SR=0x00000000
+0x00000160:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000164:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
+0x00000174:	ret                     	PC=MEM[0x00007FA0]=0x00000154
+0x00000154:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
+0x00000158:	l32 r1,[r7+0]           	R1=MEM[0x00007FA8]=0x00000001
+0x0000015C:	add r1,r1,r2            	R1=R1+R2=0x00000002,SR=0x00000000
+0x00000160:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000164:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007FA8,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007FAC]{0x00001FEF}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007FB0]{0x00007FBC}
+0x00000174:	ret                     	PC=MEM[0x00007FB4]=0x0000013C
+0x0000013C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FB8,SR=0x00000000
+0x00000140:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000005
+0x00000144:	subi r1,r1,2            	R1=R1-0x00000002=0x00000003,SR=0x00000000
+0x00000148:	push r1                 	MEM[0x00007FB8]{0x00000003}={R1}
+0x0000014C:	s32 [r7+0],r2           	MEM[0x00007FBC]=R2=0x00000001
+0x00000150:	call -21                	PC=0x00000100,MEM[0x00007FB4]=0x00000154
+0x00000100:	push r6                 	MEM[0x00007FB0]{0x00007FBC}={R6}
+0x00000104:	push r7                 	MEM[0x00007FAC]{0x00001FEF}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FA8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FA8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEA,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FA4,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000003
+0x0000011C:	cmpi r1,2               	SR=0x00000000
+0x00000120:	bge 2                   	PC=0x0000012C
+0x0000012C:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000003
+0x00000130:	subi r1,r1,1            	R1=R1-0x00000001=0x00000002,SR=0x00000000
+0x00000134:	push r1                 	MEM[0x00007FA4]{0x00000002}={R1}
+0x00000138:	call -15                	PC=0x00000100,MEM[0x00007FA0]=0x0000013C
+0x00000100:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
+0x00000104:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
+0x0000011C:	cmpi r1,2               	SR=0x00000040
+0x00000120:	bge 2                   	PC=0x0000012C
+0x0000012C:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
+0x00000130:	subi r1,r1,1            	R1=R1-0x00000001=0x00000001,SR=0x00000000
+0x00000134:	push r1                 	MEM[0x00007F90]{0x00000001}={R1}
+0x00000138:	call -15                	PC=0x00000100,MEM[0x00007F8C]=0x0000013C
+0x00000100:	push r6                 	MEM[0x00007F88]{0x00007F94}={R6}
+0x00000104:	push r7                 	MEM[0x00007F84]{0x00001FE5}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F80,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F80,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE0,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F7C,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000001
+0x0000011C:	cmpi r1,2               	SR=0x00000011
+0x00000120:	bge 2                   	PC=0x00000124
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007F90]=0x00000001
+0x00000128:	bun 15                  	PC=0x00000168
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F80,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F84]{0x00001FE5}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F88]{0x00007F94}
+0x00000174:	ret                     	PC=MEM[0x00007F8C]=0x0000013C
+0x0000013C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F90,SR=0x00000000
+0x00000140:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
+0x00000144:	subi r1,r1,2            	R1=R1-0x00000002=0x00000000,SR=0x00000040
+0x00000148:	push r1                 	MEM[0x00007F90]{0x00000000}={R1}
+0x0000014C:	s32 [r7+0],r2           	MEM[0x00007F94]=R2=0x00000001
+0x00000150:	call -21                	PC=0x00000100,MEM[0x00007F8C]=0x00000154
+0x00000100:	push r6                 	MEM[0x00007F88]{0x00007F94}={R6}
+0x00000104:	push r7                 	MEM[0x00007F84]{0x00001FE5}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F80,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F80,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE0,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F7C,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000000
+0x0000011C:	cmpi r1,2               	SR=0x00000011
+0x00000120:	bge 2                   	PC=0x00000124
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007F90]=0x00000000
+0x00000128:	bun 15                  	PC=0x00000168
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F80,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F84]{0x00001FE5}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F88]{0x00007F94}
+0x00000174:	ret                     	PC=MEM[0x00007F8C]=0x00000154
+0x00000154:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F90,SR=0x00000000
+0x00000158:	l32 r1,[r7+0]           	R1=MEM[0x00007F94]=0x00000001
+0x0000015C:	add r1,r1,r2            	R1=R1+R2=0x00000001,SR=0x00000000
+0x00000160:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000164:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
+0x00000174:	ret                     	PC=MEM[0x00007FA0]=0x0000013C
+0x0000013C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
+0x00000140:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000003
+0x00000144:	subi r1,r1,2            	R1=R1-0x00000002=0x00000001,SR=0x00000000
+0x00000148:	push r1                 	MEM[0x00007FA4]{0x00000001}={R1}
+0x0000014C:	s32 [r7+0],r2           	MEM[0x00007FA8]=R2=0x00000001
+0x00000150:	call -21                	PC=0x00000100,MEM[0x00007FA0]=0x00000154
+0x00000100:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
+0x00000104:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000001
+0x0000011C:	cmpi r1,2               	SR=0x00000011
+0x00000120:	bge 2                   	PC=0x00000124
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FA4]=0x00000001
+0x00000128:	bun 15                  	PC=0x00000168
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
+0x00000174:	ret                     	PC=MEM[0x00007FA0]=0x00000154
+0x00000154:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
+0x00000158:	l32 r1,[r7+0]           	R1=MEM[0x00007FA8]=0x00000001
+0x0000015C:	add r1,r1,r2            	R1=R1+R2=0x00000002,SR=0x00000000
+0x00000160:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000164:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007FA8,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007FAC]{0x00001FEF}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007FB0]{0x00007FBC}
+0x00000174:	ret                     	PC=MEM[0x00007FB4]=0x00000154
+0x00000154:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FB8,SR=0x00000000
+0x00000158:	l32 r1,[r7+0]           	R1=MEM[0x00007FBC]=0x00000001
+0x0000015C:	add r1,r1,r2            	R1=R1+R2=0x00000002,SR=0x00000000
+0x00000160:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000164:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007FBC,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007FC0]{0x00001FF4}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007FC4]{0x00007FD0}
+0x00000174:	ret                     	PC=MEM[0x00007FC8]=0x0000013C
+0x0000013C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FCC,SR=0x00000000
+0x00000140:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x00000006
+0x00000144:	subi r1,r1,2            	R1=R1-0x00000002=0x00000004,SR=0x00000000
+0x00000148:	push r1                 	MEM[0x00007FCC]{0x00000004}={R1}
+0x0000014C:	s32 [r7+0],r2           	MEM[0x00007FD0]=R2=0x00000001
+0x00000150:	call -21                	PC=0x00000100,MEM[0x00007FC8]=0x00000154
+0x00000100:	push r6                 	MEM[0x00007FC4]{0x00007FD0}={R6}
+0x00000104:	push r7                 	MEM[0x00007FC0]{0x00001FF4}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FBC,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FBC,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEF,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FB8,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000004
+0x0000011C:	cmpi r1,2               	SR=0x00000000
+0x00000120:	bge 2                   	PC=0x0000012C
+0x0000012C:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000004
+0x00000130:	subi r1,r1,1            	R1=R1-0x00000001=0x00000003,SR=0x00000000
+0x00000134:	push r1                 	MEM[0x00007FB8]{0x00000003}={R1}
+0x00000138:	call -15                	PC=0x00000100,MEM[0x00007FB4]=0x0000013C
+0x00000100:	push r6                 	MEM[0x00007FB0]{0x00007FBC}={R6}
+0x00000104:	push r7                 	MEM[0x00007FAC]{0x00001FEF}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FA8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FA8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEA,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FA4,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000003
+0x0000011C:	cmpi r1,2               	SR=0x00000000
+0x00000120:	bge 2                   	PC=0x0000012C
+0x0000012C:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000003
+0x00000130:	subi r1,r1,1            	R1=R1-0x00000001=0x00000002,SR=0x00000000
+0x00000134:	push r1                 	MEM[0x00007FA4]{0x00000002}={R1}
+0x00000138:	call -15                	PC=0x00000100,MEM[0x00007FA0]=0x0000013C
+0x00000100:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
+0x00000104:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
+0x0000011C:	cmpi r1,2               	SR=0x00000040
+0x00000120:	bge 2                   	PC=0x0000012C
+0x0000012C:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
+0x00000130:	subi r1,r1,1            	R1=R1-0x00000001=0x00000001,SR=0x00000000
+0x00000134:	push r1                 	MEM[0x00007F90]{0x00000001}={R1}
+0x00000138:	call -15                	PC=0x00000100,MEM[0x00007F8C]=0x0000013C
+0x00000100:	push r6                 	MEM[0x00007F88]{0x00007F94}={R6}
+0x00000104:	push r7                 	MEM[0x00007F84]{0x00001FE5}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F80,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F80,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE0,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F7C,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000001
+0x0000011C:	cmpi r1,2               	SR=0x00000011
+0x00000120:	bge 2                   	PC=0x00000124
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007F90]=0x00000001
+0x00000128:	bun 15                  	PC=0x00000168
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F80,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F84]{0x00001FE5}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F88]{0x00007F94}
+0x00000174:	ret                     	PC=MEM[0x00007F8C]=0x0000013C
+0x0000013C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F90,SR=0x00000000
+0x00000140:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
+0x00000144:	subi r1,r1,2            	R1=R1-0x00000002=0x00000000,SR=0x00000040
+0x00000148:	push r1                 	MEM[0x00007F90]{0x00000000}={R1}
+0x0000014C:	s32 [r7+0],r2           	MEM[0x00007F94]=R2=0x00000001
+0x00000150:	call -21                	PC=0x00000100,MEM[0x00007F8C]=0x00000154
+0x00000100:	push r6                 	MEM[0x00007F88]{0x00007F94}={R6}
+0x00000104:	push r7                 	MEM[0x00007F84]{0x00001FE5}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F80,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F80,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE0,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F7C,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000000
+0x0000011C:	cmpi r1,2               	SR=0x00000011
+0x00000120:	bge 2                   	PC=0x00000124
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007F90]=0x00000000
+0x00000128:	bun 15                  	PC=0x00000168
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F80,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F84]{0x00001FE5}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F88]{0x00007F94}
+0x00000174:	ret                     	PC=MEM[0x00007F8C]=0x00000154
+0x00000154:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F90,SR=0x00000000
+0x00000158:	l32 r1,[r7+0]           	R1=MEM[0x00007F94]=0x00000001
+0x0000015C:	add r1,r1,r2            	R1=R1+R2=0x00000001,SR=0x00000000
+0x00000160:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000164:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
+0x00000174:	ret                     	PC=MEM[0x00007FA0]=0x0000013C
+0x0000013C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
+0x00000140:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000003
+0x00000144:	subi r1,r1,2            	R1=R1-0x00000002=0x00000001,SR=0x00000000
+0x00000148:	push r1                 	MEM[0x00007FA4]{0x00000001}={R1}
+0x0000014C:	s32 [r7+0],r2           	MEM[0x00007FA8]=R2=0x00000001
+0x00000150:	call -21                	PC=0x00000100,MEM[0x00007FA0]=0x00000154
+0x00000100:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
+0x00000104:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000001
+0x0000011C:	cmpi r1,2               	SR=0x00000011
+0x00000120:	bge 2                   	PC=0x00000124
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FA4]=0x00000001
+0x00000128:	bun 15                  	PC=0x00000168
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
+0x00000174:	ret                     	PC=MEM[0x00007FA0]=0x00000154
+0x00000154:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
+0x00000158:	l32 r1,[r7+0]           	R1=MEM[0x00007FA8]=0x00000001
+0x0000015C:	add r1,r1,r2            	R1=R1+R2=0x00000002,SR=0x00000000
+0x00000160:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000164:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007FA8,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007FAC]{0x00001FEF}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007FB0]{0x00007FBC}
+0x00000174:	ret                     	PC=MEM[0x00007FB4]=0x0000013C
+0x0000013C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FB8,SR=0x00000000
+0x00000140:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000004
+0x00000144:	subi r1,r1,2            	R1=R1-0x00000002=0x00000002,SR=0x00000000
+0x00000148:	push r1                 	MEM[0x00007FB8]{0x00000002}={R1}
+0x0000014C:	s32 [r7+0],r2           	MEM[0x00007FBC]=R2=0x00000001
+0x00000150:	call -21                	PC=0x00000100,MEM[0x00007FB4]=0x00000154
+0x00000100:	push r6                 	MEM[0x00007FB0]{0x00007FBC}={R6}
+0x00000104:	push r7                 	MEM[0x00007FAC]{0x00001FEF}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FA8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FA8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEA,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FA4,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000002
+0x0000011C:	cmpi r1,2               	SR=0x00000040
+0x00000120:	bge 2                   	PC=0x0000012C
+0x0000012C:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000002
+0x00000130:	subi r1,r1,1            	R1=R1-0x00000001=0x00000001,SR=0x00000000
+0x00000134:	push r1                 	MEM[0x00007FA4]{0x00000001}={R1}
+0x00000138:	call -15                	PC=0x00000100,MEM[0x00007FA0]=0x0000013C
+0x00000100:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
+0x00000104:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000001
+0x0000011C:	cmpi r1,2               	SR=0x00000011
+0x00000120:	bge 2                   	PC=0x00000124
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FA4]=0x00000001
+0x00000128:	bun 15                  	PC=0x00000168
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
+0x00000174:	ret                     	PC=MEM[0x00007FA0]=0x0000013C
+0x0000013C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
+0x00000140:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000002
+0x00000144:	subi r1,r1,2            	R1=R1-0x00000002=0x00000000,SR=0x00000040
+0x00000148:	push r1                 	MEM[0x00007FA4]{0x00000000}={R1}
+0x0000014C:	s32 [r7+0],r2           	MEM[0x00007FA8]=R2=0x00000001
+0x00000150:	call -21                	PC=0x00000100,MEM[0x00007FA0]=0x00000154
+0x00000100:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
+0x00000104:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000000
+0x0000011C:	cmpi r1,2               	SR=0x00000011
+0x00000120:	bge 2                   	PC=0x00000124
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FA4]=0x00000000
+0x00000128:	bun 15                  	PC=0x00000168
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
+0x00000174:	ret                     	PC=MEM[0x00007FA0]=0x00000154
+0x00000154:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
+0x00000158:	l32 r1,[r7+0]           	R1=MEM[0x00007FA8]=0x00000001
+0x0000015C:	add r1,r1,r2            	R1=R1+R2=0x00000001,SR=0x00000000
+0x00000160:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000164:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007FA8,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007FAC]{0x00001FEF}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007FB0]{0x00007FBC}
+0x00000174:	ret                     	PC=MEM[0x00007FB4]=0x00000154
+0x00000154:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FB8,SR=0x00000000
+0x00000158:	l32 r1,[r7+0]           	R1=MEM[0x00007FBC]=0x00000001
+0x0000015C:	add r1,r1,r2            	R1=R1+R2=0x00000002,SR=0x00000000
+0x00000160:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000164:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007FBC,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007FC0]{0x00001FF4}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007FC4]{0x00007FD0}
+0x00000174:	ret                     	PC=MEM[0x00007FC8]=0x00000154
+0x00000154:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FCC,SR=0x00000000
+0x00000158:	l32 r1,[r7+0]           	R1=MEM[0x00007FD0]=0x00000001
+0x0000015C:	add r1,r1,r2            	R1=R1+R2=0x00000002,SR=0x00000000
+0x00000160:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000164:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007FD0,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007FD4]{0x00001FFA}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007FD8]{0x00007FE8}
+0x00000174:	ret                     	PC=MEM[0x00007FDC]=0x0000019C
+0x0000019C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FE0,SR=0x00000000
+0x000001A0:	s32 [r7+0],r2           	MEM[0x00007FE8]=R2=0x00000001
+0x000001A4:	movs r1,5               	R1=0x00000005
+0x000001A8:	push r1                 	MEM[0x00007FE0]{0x00000005}={R1}
+0x000001AC:	call -44                	PC=0x00000100,MEM[0x00007FDC]=0x000001B0
+0x00000100:	push r6                 	MEM[0x00007FD8]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FD4]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FD0,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FD0,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF4,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FCC,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x00000005
+0x0000011C:	cmpi r1,2               	SR=0x00000000
+0x00000120:	bge 2                   	PC=0x0000012C
+0x0000012C:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x00000005
+0x00000130:	subi r1,r1,1            	R1=R1-0x00000001=0x00000004,SR=0x00000000
+0x00000134:	push r1                 	MEM[0x00007FCC]{0x00000004}={R1}
+0x00000138:	call -15                	PC=0x00000100,MEM[0x00007FC8]=0x0000013C
+0x00000100:	push r6                 	MEM[0x00007FC4]{0x00007FD0}={R6}
+0x00000104:	push r7                 	MEM[0x00007FC0]{0x00001FF4}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FBC,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FBC,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEF,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FB8,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000004
+0x0000011C:	cmpi r1,2               	SR=0x00000000
+0x00000120:	bge 2                   	PC=0x0000012C
+0x0000012C:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000004
+0x00000130:	subi r1,r1,1            	R1=R1-0x00000001=0x00000003,SR=0x00000000
+0x00000134:	push r1                 	MEM[0x00007FB8]{0x00000003}={R1}
+0x00000138:	call -15                	PC=0x00000100,MEM[0x00007FB4]=0x0000013C
+0x00000100:	push r6                 	MEM[0x00007FB0]{0x00007FBC}={R6}
+0x00000104:	push r7                 	MEM[0x00007FAC]{0x00001FEF}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FA8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FA8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEA,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FA4,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000003
+0x0000011C:	cmpi r1,2               	SR=0x00000000
+0x00000120:	bge 2                   	PC=0x0000012C
+0x0000012C:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000003
+0x00000130:	subi r1,r1,1            	R1=R1-0x00000001=0x00000002,SR=0x00000000
+0x00000134:	push r1                 	MEM[0x00007FA4]{0x00000002}={R1}
+0x00000138:	call -15                	PC=0x00000100,MEM[0x00007FA0]=0x0000013C
+0x00000100:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
+0x00000104:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
+0x0000011C:	cmpi r1,2               	SR=0x00000040
+0x00000120:	bge 2                   	PC=0x0000012C
+0x0000012C:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
+0x00000130:	subi r1,r1,1            	R1=R1-0x00000001=0x00000001,SR=0x00000000
+0x00000134:	push r1                 	MEM[0x00007F90]{0x00000001}={R1}
+0x00000138:	call -15                	PC=0x00000100,MEM[0x00007F8C]=0x0000013C
+0x00000100:	push r6                 	MEM[0x00007F88]{0x00007F94}={R6}
+0x00000104:	push r7                 	MEM[0x00007F84]{0x00001FE5}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F80,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F80,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE0,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F7C,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000001
+0x0000011C:	cmpi r1,2               	SR=0x00000011
+0x00000120:	bge 2                   	PC=0x00000124
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007F90]=0x00000001
+0x00000128:	bun 15                  	PC=0x00000168
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F80,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F84]{0x00001FE5}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F88]{0x00007F94}
+0x00000174:	ret                     	PC=MEM[0x00007F8C]=0x0000013C
+0x0000013C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F90,SR=0x00000000
+0x00000140:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
+0x00000144:	subi r1,r1,2            	R1=R1-0x00000002=0x00000000,SR=0x00000040
+0x00000148:	push r1                 	MEM[0x00007F90]{0x00000000}={R1}
+0x0000014C:	s32 [r7+0],r2           	MEM[0x00007F94]=R2=0x00000001
+0x00000150:	call -21                	PC=0x00000100,MEM[0x00007F8C]=0x00000154
+0x00000100:	push r6                 	MEM[0x00007F88]{0x00007F94}={R6}
+0x00000104:	push r7                 	MEM[0x00007F84]{0x00001FE5}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F80,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F80,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE0,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F7C,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000000
+0x0000011C:	cmpi r1,2               	SR=0x00000011
+0x00000120:	bge 2                   	PC=0x00000124
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007F90]=0x00000000
+0x00000128:	bun 15                  	PC=0x00000168
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F80,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F84]{0x00001FE5}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F88]{0x00007F94}
+0x00000174:	ret                     	PC=MEM[0x00007F8C]=0x00000154
+0x00000154:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F90,SR=0x00000000
+0x00000158:	l32 r1,[r7+0]           	R1=MEM[0x00007F94]=0x00000001
+0x0000015C:	add r1,r1,r2            	R1=R1+R2=0x00000001,SR=0x00000000
+0x00000160:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000164:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
+0x00000174:	ret                     	PC=MEM[0x00007FA0]=0x0000013C
+0x0000013C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
+0x00000140:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000003
+0x00000144:	subi r1,r1,2            	R1=R1-0x00000002=0x00000001,SR=0x00000000
+0x00000148:	push r1                 	MEM[0x00007FA4]{0x00000001}={R1}
+0x0000014C:	s32 [r7+0],r2           	MEM[0x00007FA8]=R2=0x00000001
+0x00000150:	call -21                	PC=0x00000100,MEM[0x00007FA0]=0x00000154
+0x00000100:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
+0x00000104:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000001
+0x0000011C:	cmpi r1,2               	SR=0x00000011
+0x00000120:	bge 2                   	PC=0x00000124
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FA4]=0x00000001
+0x00000128:	bun 15                  	PC=0x00000168
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
+0x00000174:	ret                     	PC=MEM[0x00007FA0]=0x00000154
+0x00000154:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
+0x00000158:	l32 r1,[r7+0]           	R1=MEM[0x00007FA8]=0x00000001
+0x0000015C:	add r1,r1,r2            	R1=R1+R2=0x00000002,SR=0x00000000
+0x00000160:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000164:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007FA8,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007FAC]{0x00001FEF}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007FB0]{0x00007FBC}
+0x00000174:	ret                     	PC=MEM[0x00007FB4]=0x0000013C
+0x0000013C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FB8,SR=0x00000000
+0x00000140:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000004
+0x00000144:	subi r1,r1,2            	R1=R1-0x00000002=0x00000002,SR=0x00000000
+0x00000148:	push r1                 	MEM[0x00007FB8]{0x00000002}={R1}
+0x0000014C:	s32 [r7+0],r2           	MEM[0x00007FBC]=R2=0x00000001
+0x00000150:	call -21                	PC=0x00000100,MEM[0x00007FB4]=0x00000154
+0x00000100:	push r6                 	MEM[0x00007FB0]{0x00007FBC}={R6}
+0x00000104:	push r7                 	MEM[0x00007FAC]{0x00001FEF}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FA8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FA8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEA,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FA4,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000002
+0x0000011C:	cmpi r1,2               	SR=0x00000040
+0x00000120:	bge 2                   	PC=0x0000012C
+0x0000012C:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000002
+0x00000130:	subi r1,r1,1            	R1=R1-0x00000001=0x00000001,SR=0x00000000
+0x00000134:	push r1                 	MEM[0x00007FA4]{0x00000001}={R1}
+0x00000138:	call -15                	PC=0x00000100,MEM[0x00007FA0]=0x0000013C
+0x00000100:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
+0x00000104:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000001
+0x0000011C:	cmpi r1,2               	SR=0x00000011
+0x00000120:	bge 2                   	PC=0x00000124
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FA4]=0x00000001
+0x00000128:	bun 15                  	PC=0x00000168
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
+0x00000174:	ret                     	PC=MEM[0x00007FA0]=0x0000013C
+0x0000013C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
+0x00000140:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000002
+0x00000144:	subi r1,r1,2            	R1=R1-0x00000002=0x00000000,SR=0x00000040
+0x00000148:	push r1                 	MEM[0x00007FA4]{0x00000000}={R1}
+0x0000014C:	s32 [r7+0],r2           	MEM[0x00007FA8]=R2=0x00000001
+0x00000150:	call -21                	PC=0x00000100,MEM[0x00007FA0]=0x00000154
+0x00000100:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
+0x00000104:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000000
+0x0000011C:	cmpi r1,2               	SR=0x00000011
+0x00000120:	bge 2                   	PC=0x00000124
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FA4]=0x00000000
+0x00000128:	bun 15                  	PC=0x00000168
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
+0x00000174:	ret                     	PC=MEM[0x00007FA0]=0x00000154
+0x00000154:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
+0x00000158:	l32 r1,[r7+0]           	R1=MEM[0x00007FA8]=0x00000001
+0x0000015C:	add r1,r1,r2            	R1=R1+R2=0x00000001,SR=0x00000000
+0x00000160:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000164:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007FA8,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007FAC]{0x00001FEF}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007FB0]{0x00007FBC}
+0x00000174:	ret                     	PC=MEM[0x00007FB4]=0x00000154
+0x00000154:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FB8,SR=0x00000000
+0x00000158:	l32 r1,[r7+0]           	R1=MEM[0x00007FBC]=0x00000001
+0x0000015C:	add r1,r1,r2            	R1=R1+R2=0x00000002,SR=0x00000000
+0x00000160:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000164:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007FBC,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007FC0]{0x00001FF4}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007FC4]{0x00007FD0}
+0x00000174:	ret                     	PC=MEM[0x00007FC8]=0x0000013C
+0x0000013C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FCC,SR=0x00000000
+0x00000140:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x00000005
+0x00000144:	subi r1,r1,2            	R1=R1-0x00000002=0x00000003,SR=0x00000000
+0x00000148:	push r1                 	MEM[0x00007FCC]{0x00000003}={R1}
+0x0000014C:	s32 [r7+0],r2           	MEM[0x00007FD0]=R2=0x00000001
+0x00000150:	call -21                	PC=0x00000100,MEM[0x00007FC8]=0x00000154
+0x00000100:	push r6                 	MEM[0x00007FC4]{0x00007FD0}={R6}
+0x00000104:	push r7                 	MEM[0x00007FC0]{0x00001FF4}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FBC,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FBC,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEF,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FB8,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000003
+0x0000011C:	cmpi r1,2               	SR=0x00000000
+0x00000120:	bge 2                   	PC=0x0000012C
+0x0000012C:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000003
+0x00000130:	subi r1,r1,1            	R1=R1-0x00000001=0x00000002,SR=0x00000000
+0x00000134:	push r1                 	MEM[0x00007FB8]{0x00000002}={R1}
+0x00000138:	call -15                	PC=0x00000100,MEM[0x00007FB4]=0x0000013C
+0x00000100:	push r6                 	MEM[0x00007FB0]{0x00007FBC}={R6}
+0x00000104:	push r7                 	MEM[0x00007FAC]{0x00001FEF}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FA8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FA8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEA,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FA4,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000002
+0x0000011C:	cmpi r1,2               	SR=0x00000040
+0x00000120:	bge 2                   	PC=0x0000012C
+0x0000012C:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000002
+0x00000130:	subi r1,r1,1            	R1=R1-0x00000001=0x00000001,SR=0x00000000
+0x00000134:	push r1                 	MEM[0x00007FA4]{0x00000001}={R1}
+0x00000138:	call -15                	PC=0x00000100,MEM[0x00007FA0]=0x0000013C
+0x00000100:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
+0x00000104:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000001
+0x0000011C:	cmpi r1,2               	SR=0x00000011
+0x00000120:	bge 2                   	PC=0x00000124
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FA4]=0x00000001
+0x00000128:	bun 15                  	PC=0x00000168
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
+0x00000174:	ret                     	PC=MEM[0x00007FA0]=0x0000013C
+0x0000013C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
+0x00000140:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000002
+0x00000144:	subi r1,r1,2            	R1=R1-0x00000002=0x00000000,SR=0x00000040
+0x00000148:	push r1                 	MEM[0x00007FA4]{0x00000000}={R1}
+0x0000014C:	s32 [r7+0],r2           	MEM[0x00007FA8]=R2=0x00000001
+0x00000150:	call -21                	PC=0x00000100,MEM[0x00007FA0]=0x00000154
+0x00000100:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
+0x00000104:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000000
+0x0000011C:	cmpi r1,2               	SR=0x00000011
+0x00000120:	bge 2                   	PC=0x00000124
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FA4]=0x00000000
+0x00000128:	bun 15                  	PC=0x00000168
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
+0x00000174:	ret                     	PC=MEM[0x00007FA0]=0x00000154
+0x00000154:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
+0x00000158:	l32 r1,[r7+0]           	R1=MEM[0x00007FA8]=0x00000001
+0x0000015C:	add r1,r1,r2            	R1=R1+R2=0x00000001,SR=0x00000000
+0x00000160:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000164:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007FA8,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007FAC]{0x00001FEF}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007FB0]{0x00007FBC}
+0x00000174:	ret                     	PC=MEM[0x00007FB4]=0x0000013C
+0x0000013C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FB8,SR=0x00000000
+0x00000140:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000003
+0x00000144:	subi r1,r1,2            	R1=R1-0x00000002=0x00000001,SR=0x00000000
+0x00000148:	push r1                 	MEM[0x00007FB8]{0x00000001}={R1}
+0x0000014C:	s32 [r7+0],r2           	MEM[0x00007FBC]=R2=0x00000001
+0x00000150:	call -21                	PC=0x00000100,MEM[0x00007FB4]=0x00000154
+0x00000100:	push r6                 	MEM[0x00007FB0]{0x00007FBC}={R6}
+0x00000104:	push r7                 	MEM[0x00007FAC]{0x00001FEF}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FA8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FA8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEA,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FA4,SR=0x00000000
+0x00000118:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000001
+0x0000011C:	cmpi r1,2               	SR=0x00000011
+0x00000120:	bge 2                   	PC=0x00000124
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FB8]=0x00000001
+0x00000128:	bun 15                  	PC=0x00000168
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007FA8,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007FAC]{0x00001FEF}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007FB0]{0x00007FBC}
+0x00000174:	ret                     	PC=MEM[0x00007FB4]=0x00000154
+0x00000154:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FB8,SR=0x00000000
+0x00000158:	l32 r1,[r7+0]           	R1=MEM[0x00007FBC]=0x00000001
+0x0000015C:	add r1,r1,r2            	R1=R1+R2=0x00000002,SR=0x00000000
+0x00000160:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000164:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007FBC,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007FC0]{0x00001FF4}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007FC4]{0x00007FD0}
+0x00000174:	ret                     	PC=MEM[0x00007FC8]=0x00000154
+0x00000154:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FCC,SR=0x00000000
+0x00000158:	l32 r1,[r7+0]           	R1=MEM[0x00007FD0]=0x00000001
+0x0000015C:	add r1,r1,r2            	R1=R1+R2=0x00000002,SR=0x00000000
+0x00000160:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x00000164:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x00000168:	add sp,r6,r0            	SP=R6+R0=0x00007FD0,SR=0x00000000
+0x0000016C:	pop r7                  	{R7}=MEM[0x00007FD4]{0x00001FFA}
+0x00000170:	pop r6                  	{R6}=MEM[0x00007FD8]{0x00007FE8}
+0x00000174:	ret                     	PC=MEM[0x00007FDC]=0x000001B0
+0x000001B0:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FE0,SR=0x00000000
+0x000001B4:	s32 [r7-1],r2           	MEM[0x00007FE4]=R2=0x00000001
+0x000001B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FE8]=0x00000001
+0x000001BC:	l32 r2,[r7-1]           	R2=MEM[0x00007FE4]=0x00000001
+0x000001C0:	add r1,r1,r2            	R1=R1+R2=0x00000002,SR=0x00000000
+0x000001C4:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000000
+0x000001C8:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x000001CC:	add sp,r6,r0            	SP=R6+R0=0x00007FE8,SR=0x00000000
+0x000001D0:	pop r7                  	{R7}=MEM[0x00007FEC]{0x00001FFD}
+0x000001D4:	pop r6                  	{R6}=MEM[0x00007FF0]{0x00007FF4}
+0x000001D8:	ret                     	PC=MEM[0x00007FF4]=0x00000028
+0x00000028:	call -9                 	PC=0x00000008,MEM[0x00007FF4]=0x0000002C
+0x00000008:	int 0                   	CR=0x00000000,PC=0x00000000
+[END OF SIMULATION]
\ No newline at end of file
diff --git a/examples/out/intep/poxim-print-alphabet.interp b/examples/out/intep/poxim-print-alphabet.interp
new file mode 100644
index 00000000..72c02555
--- /dev/null
+++ b/examples/out/intep/poxim-print-alphabet.interp
@@ -0,0 +1,438 @@
+[START OF SIMULATION]
+0x00000000:	mov sp,32764            	SP=0x00007FFC
+0x00000004:	bun 1                   	PC=0x0000000C
+0x0000000C:	push r6                 	MEM[0x00007FFC]{0x00000000}={R6}
+0x00000010:	push r7                 	MEM[0x00007FF8]{0x00000000}={R7}
+0x00000014:	add r6,sp,r0            	R6=SP+R0=0x00007FF4,SR=0x00000000
+0x00000018:	add r7,r6,r0            	R7=R6+R0=0x00007FF4,SR=0x00000000
+0x0000001C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFD,SR=0x00000000
+0x00000020:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FF4,SR=0x00000000
+0x00000024:	call 82                 	PC=0x00000170,MEM[0x00007FF4]=0x00000028
+0x00000170:	push r6                 	MEM[0x00007FF0]{0x00007FF4}={R6}
+0x00000174:	push r7                 	MEM[0x00007FEC]{0x00001FFD}={R7}
+0x00000178:	add r6,sp,r0            	R6=SP+R0=0x00007FE8,SR=0x00000000
+0x0000017C:	add r7,r6,r0            	R7=R6+R0=0x00007FE8,SR=0x00000000
+0x00000180:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFA,SR=0x00000000
+0x00000184:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FE4,SR=0x00000000
+0x00000188:	movs r1,26              	R1=0x0000001A
+0x0000018C:	s32 [r7+0],r1           	MEM[0x00007FE8]=R1=0x0000001A
+0x00000190:	l32 r1,[r7+0]           	R1=MEM[0x00007FE8]=0x0000001A
+0x00000194:	push r1                 	MEM[0x00007FE4]{0x0000001A}={R1}
+0x00000198:	call -39                	PC=0x00000100,MEM[0x00007FE0]=0x0000019C
+0x00000100:	push r6                 	MEM[0x00007FDC]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FD8]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FD4,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FD4,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF5,SR=0x00000000
+0x00000114:	subi sp,sp,8            	SP=SP-0x00000008=0x00007FCC,SR=0x00000000
+0x00000118:	movs r1,0               	R1=0x00000000
+0x0000011C:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000000
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000000
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000000
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x00000061,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000061
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000061
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000061
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000000
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x00000001,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000001
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000001
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000001
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x00000062,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000062
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000062
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000062
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000001
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x00000002,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000002
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000002
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000002
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x00000063,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000063
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000063
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000063
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000002
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x00000003,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000003
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000003
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000003
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x00000064,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000064
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000064
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000064
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000003
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x00000004,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000004
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000004
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000004
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x00000065,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000065
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000065
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000065
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000004
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x00000005,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000005
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000005
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000005
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x00000066,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000066
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000066
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000066
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000005
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x00000006,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000006
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000006
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000006
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x00000067,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000067
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000067
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000067
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000006
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x00000007,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000007
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000007
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000007
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x00000068,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000068
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000068
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000068
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000007
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x00000008,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000008
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000008
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000008
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x00000069,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000069
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000069
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000069
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000008
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x00000009,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000009
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000009
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000009
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x0000006A,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x0000006A
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x0000006A
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000006A
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000009
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000A,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000A
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000A
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000A
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x0000006B,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x0000006B
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x0000006B
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000006B
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000A
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000B,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000B
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000B
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000B
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x0000006C,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x0000006C
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x0000006C
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000006C
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000B
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000C,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000C
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000C
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000C
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x0000006D,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x0000006D
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x0000006D
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000006D
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000C
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000D,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000D
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000D
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000D
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x0000006E,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x0000006E
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x0000006E
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000006E
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000D
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000E,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000E
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000E
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000E
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x0000006F,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x0000006F
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x0000006F
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000006F
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000E
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000F,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000F
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000F
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000F
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x00000070,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000070
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000070
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000070
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000F
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x00000010,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000010
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000010
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000010
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x00000071,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000071
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000071
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000071
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000010
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x00000011,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000011
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000011
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000011
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x00000072,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000072
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000072
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000072
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000011
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x00000012,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000012
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000012
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000012
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x00000073,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000073
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000073
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000073
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000012
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x00000013,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000013
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000013
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000013
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x00000074,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000074
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000074
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000074
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000013
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x00000014,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000014
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000014
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000014
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x00000075,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000075
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000075
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000075
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000014
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x00000015,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000015
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000015
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000015
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x00000076,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000076
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000076
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000076
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000015
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x00000016,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000016
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000016
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000016
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x00000077,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000077
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000077
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000077
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000016
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x00000017,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000017
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000017
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000017
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x00000078,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000078
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000078
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000078
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000017
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x00000018,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000018
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000018
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000018
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x00000079,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000079
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000079
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000079
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000018
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x00000019,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000019
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000019
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 11                  	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000019
+0x00000134:	addi r1,r1,97           	R1=R1+0x00000061=0x0000007A,SR=0x00000000
+0x00000138:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x0000007A
+0x0000013C:	mov r8,1024             	R8=0x00000400
+0x00000140:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000144:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x0000007A
+0x00000148:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000007A
+0x0000014C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000019
+0x00000150:	addi r1,r1,1            	R1=R1+0x00000001=0x0000001A,SR=0x00000000
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000001A
+0x00000158:	bun -15                 	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001A
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
+0x00000128:	cmp r1,r2               	SR=0x00000040
+0x0000012C:	bge 11                  	PC=0x0000015C
+0x0000015C:	l32 r2,[r7+0]           	R2=MEM[0x00007FD4]=0x0000001A
+0x00000160:	add sp,r6,r0            	SP=R6+R0=0x00007FD4,SR=0x00000000
+0x00000164:	pop r7                  	{R7}=MEM[0x00007FD8]{0x00001FFA}
+0x00000168:	pop r6                  	{R6}=MEM[0x00007FDC]{0x00007FE8}
+0x0000016C:	ret                     	PC=MEM[0x00007FE0]=0x0000019C
+0x0000019C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FE4,SR=0x00000000
+0x000001A0:	add sp,r6,r0            	SP=R6+R0=0x00007FE8,SR=0x00000000
+0x000001A4:	pop r7                  	{R7}=MEM[0x00007FEC]{0x00001FFD}
+0x000001A8:	pop r6                  	{R6}=MEM[0x00007FF0]{0x00007FF4}
+0x000001AC:	ret                     	PC=MEM[0x00007FF4]=0x00000028
+0x00000028:	call -9                 	PC=0x00000008,MEM[0x00007FF4]=0x0000002C
+0x00000008:	int 0                   	CR=0x00000000,PC=0x00000000
+[TERMINAL]
+abcdefghijklmnopqrstuvwxyz
+[END OF SIMULATION]
\ No newline at end of file
diff --git a/examples/out/intep/poxim-print-num.interp b/examples/out/intep/poxim-print-num.interp
new file mode 100644
index 00000000..f06e8aa0
--- /dev/null
+++ b/examples/out/intep/poxim-print-num.interp
@@ -0,0 +1,218 @@
+[START OF SIMULATION]
+0x00000000:	mov sp,32764            	SP=0x00007FFC
+0x00000004:	bun 1                   	PC=0x0000000C
+0x0000000C:	push r6                 	MEM[0x00007FFC]{0x00000000}={R6}
+0x00000010:	push r7                 	MEM[0x00007FF8]{0x00000000}={R7}
+0x00000014:	add r6,sp,r0            	R6=SP+R0=0x00007FF4,SR=0x00000000
+0x00000018:	add r7,r6,r0            	R7=R6+R0=0x00007FF4,SR=0x00000000
+0x0000001C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFD,SR=0x00000000
+0x00000020:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FF4,SR=0x00000000
+0x00000024:	call 132                	PC=0x00000238,MEM[0x00007FF4]=0x00000028
+0x00000238:	push r6                 	MEM[0x00007FF0]{0x00007FF4}={R6}
+0x0000023C:	push r7                 	MEM[0x00007FEC]{0x00001FFD}={R7}
+0x00000240:	add r6,sp,r0            	R6=SP+R0=0x00007FE8,SR=0x00000000
+0x00000244:	add r7,r6,r0            	R7=R6+R0=0x00007FE8,SR=0x00000000
+0x00000248:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFA,SR=0x00000000
+0x0000024C:	subi sp,sp,8            	SP=SP-0x00000008=0x00007FE0,SR=0x00000000
+0x00000250:	movs r1,123             	R1=0x0000007B
+0x00000254:	s32 [r7+0],r1           	MEM[0x00007FE8]=R1=0x0000007B
+0x00000258:	movs r1,100             	R1=0x00000064
+0x0000025C:	s32 [r7-1],r1           	MEM[0x00007FE4]=R1=0x00000064
+0x00000260:	l32 r1,[r7+0]           	R1=MEM[0x00007FE8]=0x0000007B
+0x00000264:	push r1                 	MEM[0x00007FE0]{0x0000007B}={R1}
+0x00000268:	call -77                	PC=0x00000138,MEM[0x00007FDC]=0x0000026C
+0x00000138:	push r6                 	MEM[0x00007FD8]{0x00007FE8}={R6}
+0x0000013C:	push r7                 	MEM[0x00007FD4]{0x00001FFA}={R7}
+0x00000140:	add r6,sp,r0            	R6=SP+R0=0x00007FD0,SR=0x00000000
+0x00000144:	add r7,r6,r0            	R7=R6+R0=0x00007FD0,SR=0x00000000
+0x00000148:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF4,SR=0x00000000
+0x0000014C:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FC4,SR=0x00000000
+0x00000150:	movs r1,1               	R1=0x00000001
+0x00000154:	s32 [r7+0],r1           	MEM[0x00007FD0]=R1=0x00000001
+0x00000158:	movs r1,0               	R1=0x00000000
+0x0000015C:	s32 [r7-1],r1           	MEM[0x00007FCC]=R1=0x00000000
+0x00000160:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x0000007B
+0x00000164:	cmpi r1,0               	SR=0x00000000
+0x00000168:	bge 6                   	PC=0x00000184
+0x00000184:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x0000007B
+0x00000188:	l32 r2,[r7+0]           	R2=MEM[0x00007FD0]=0x00000001
+0x0000018C:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x0000007B,SR=0x00000000
+0x00000190:	cmpi r1,11              	SR=0x00000000
+0x00000194:	ble 5                   	PC=0x00000198
+0x00000198:	l32 r1,[r7+0]           	R1=MEM[0x00007FD0]=0x00000001
+0x0000019C:	movs r2,10              	R2=0x0000000A
+0x000001A0:	muls r8,r1,r1,r2        	R8:R1=R1*R2=0x000000000000000A,SR=0x00000000
+0x000001A4:	s32 [r7+0],r1           	MEM[0x00007FD0]=R1=0x0000000A
+0x000001A8:	bun -10                 	PC=0x00000184
+0x00000184:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x0000007B
+0x00000188:	l32 r2,[r7+0]           	R2=MEM[0x00007FD0]=0x0000000A
+0x0000018C:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000003,R1=R1/R2=0x0000000C,SR=0x00000001
+0x00000190:	cmpi r1,11              	SR=0x00000000
+0x00000194:	ble 5                   	PC=0x00000198
+0x00000198:	l32 r1,[r7+0]           	R1=MEM[0x00007FD0]=0x0000000A
+0x0000019C:	movs r2,10              	R2=0x0000000A
+0x000001A0:	muls r8,r1,r1,r2        	R8:R1=R1*R2=0x0000000000000064,SR=0x00000000
+0x000001A4:	s32 [r7+0],r1           	MEM[0x00007FD0]=R1=0x00000064
+0x000001A8:	bun -10                 	PC=0x00000184
+0x00000184:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x0000007B
+0x00000188:	l32 r2,[r7+0]           	R2=MEM[0x00007FD0]=0x00000064
+0x0000018C:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000017,R1=R1/R2=0x00000001,SR=0x00000001
+0x00000190:	cmpi r1,11              	SR=0x00000011
+0x00000194:	ble 5                   	PC=0x000001AC
+0x000001AC:	l32 r1,[r7-1]           	R1=MEM[0x00007FCC]=0x00000000
+0x000001B0:	cmpi r1,0               	SR=0x00000040
+0x000001B4:	ble 5                   	PC=0x000001CC
+0x000001CC:	movs r1,43              	R1=0x0000002B
+0x000001D0:	push r1                 	MEM[0x00007FC4]{0x0000002B}={R1}
+0x000001D4:	call -54                	PC=0x00000100,MEM[0x00007FC0]=0x000001D8
+0x00000100:	push r6                 	MEM[0x00007FBC]{0x00007FD0}={R6}
+0x00000104:	push r7                 	MEM[0x00007FB8]{0x00001FF4}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB4,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB4,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FED,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB4,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC4]=0x0000002B
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002B
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB4,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FB8]{0x00001FF4}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FBC]{0x00007FD0}
+0x00000134:	ret                     	PC=MEM[0x00007FC0]=0x000001D8
+0x000001D8:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC4,SR=0x00000000
+0x000001DC:	l32 r1,[r7+0]           	R1=MEM[0x00007FD0]=0x00000064
+0x000001E0:	cmpi r1,0               	SR=0x00000000
+0x000001E4:	ble 16                  	PC=0x000001E8
+0x000001E8:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x0000007B
+0x000001EC:	l32 r2,[r7+0]           	R2=MEM[0x00007FD0]=0x00000064
+0x000001F0:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000017,R1=R1/R2=0x00000001,SR=0x00000001
+0x000001F4:	movs r2,10              	R2=0x0000000A
+0x000001F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x000001FC:	s32 [r7-2],r4           	MEM[0x00007FC8]=R4=0x00000001
+0x00000200:	l32 r1,[r7-2]           	R1=MEM[0x00007FC8]=0x00000001
+0x00000204:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
+0x00000208:	push r1                 	MEM[0x00007FC4]{0x00000031}={R1}
+0x0000020C:	call -68                	PC=0x00000100,MEM[0x00007FC0]=0x00000210
+0x00000100:	push r6                 	MEM[0x00007FBC]{0x00007FD0}={R6}
+0x00000104:	push r7                 	MEM[0x00007FB8]{0x00001FF4}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB4,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB4,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FED,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB4,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC4]=0x00000031
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB4,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FB8]{0x00001FF4}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FBC]{0x00007FD0}
+0x00000134:	ret                     	PC=MEM[0x00007FC0]=0x00000210
+0x00000210:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC4,SR=0x00000000
+0x00000214:	l32 r1,[r7+0]           	R1=MEM[0x00007FD0]=0x00000064
+0x00000218:	movs r2,10              	R2=0x0000000A
+0x0000021C:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x0000000A,SR=0x00000000
+0x00000220:	s32 [r7+0],r1           	MEM[0x00007FD0]=R1=0x0000000A
+0x00000224:	bun -19                 	PC=0x000001DC
+0x000001DC:	l32 r1,[r7+0]           	R1=MEM[0x00007FD0]=0x0000000A
+0x000001E0:	cmpi r1,0               	SR=0x00000000
+0x000001E4:	ble 16                  	PC=0x000001E8
+0x000001E8:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x0000007B
+0x000001EC:	l32 r2,[r7+0]           	R2=MEM[0x00007FD0]=0x0000000A
+0x000001F0:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000003,R1=R1/R2=0x0000000C,SR=0x00000001
+0x000001F4:	movs r2,10              	R2=0x0000000A
+0x000001F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000002,R1=R1/R2=0x00000001,SR=0x00000001
+0x000001FC:	s32 [r7-2],r4           	MEM[0x00007FC8]=R4=0x00000002
+0x00000200:	l32 r1,[r7-2]           	R1=MEM[0x00007FC8]=0x00000002
+0x00000204:	addi r1,r1,48           	R1=R1+0x00000030=0x00000032,SR=0x00000000
+0x00000208:	push r1                 	MEM[0x00007FC4]{0x00000032}={R1}
+0x0000020C:	call -68                	PC=0x00000100,MEM[0x00007FC0]=0x00000210
+0x00000100:	push r6                 	MEM[0x00007FBC]{0x00007FD0}={R6}
+0x00000104:	push r7                 	MEM[0x00007FB8]{0x00001FF4}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB4,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB4,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FED,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB4,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC4]=0x00000032
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000032
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB4,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FB8]{0x00001FF4}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FBC]{0x00007FD0}
+0x00000134:	ret                     	PC=MEM[0x00007FC0]=0x00000210
+0x00000210:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC4,SR=0x00000000
+0x00000214:	l32 r1,[r7+0]           	R1=MEM[0x00007FD0]=0x0000000A
+0x00000218:	movs r2,10              	R2=0x0000000A
+0x0000021C:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x00000220:	s32 [r7+0],r1           	MEM[0x00007FD0]=R1=0x00000001
+0x00000224:	bun -19                 	PC=0x000001DC
+0x000001DC:	l32 r1,[r7+0]           	R1=MEM[0x00007FD0]=0x00000001
+0x000001E0:	cmpi r1,0               	SR=0x00000000
+0x000001E4:	ble 16                  	PC=0x000001E8
+0x000001E8:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x0000007B
+0x000001EC:	l32 r2,[r7+0]           	R2=MEM[0x00007FD0]=0x00000001
+0x000001F0:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x0000007B,SR=0x00000000
+0x000001F4:	movs r2,10              	R2=0x0000000A
+0x000001F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000003,R1=R1/R2=0x0000000C,SR=0x00000001
+0x000001FC:	s32 [r7-2],r4           	MEM[0x00007FC8]=R4=0x00000003
+0x00000200:	l32 r1,[r7-2]           	R1=MEM[0x00007FC8]=0x00000003
+0x00000204:	addi r1,r1,48           	R1=R1+0x00000030=0x00000033,SR=0x00000000
+0x00000208:	push r1                 	MEM[0x00007FC4]{0x00000033}={R1}
+0x0000020C:	call -68                	PC=0x00000100,MEM[0x00007FC0]=0x00000210
+0x00000100:	push r6                 	MEM[0x00007FBC]{0x00007FD0}={R6}
+0x00000104:	push r7                 	MEM[0x00007FB8]{0x00001FF4}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB4,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB4,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FED,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB4,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC4]=0x00000033
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000033
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB4,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FB8]{0x00001FF4}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FBC]{0x00007FD0}
+0x00000134:	ret                     	PC=MEM[0x00007FC0]=0x00000210
+0x00000210:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC4,SR=0x00000000
+0x00000214:	l32 r1,[r7+0]           	R1=MEM[0x00007FD0]=0x00000001
+0x00000218:	movs r2,10              	R2=0x0000000A
+0x0000021C:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x00000220:	s32 [r7+0],r1           	MEM[0x00007FD0]=R1=0x00000000
+0x00000224:	bun -19                 	PC=0x000001DC
+0x000001DC:	l32 r1,[r7+0]           	R1=MEM[0x00007FD0]=0x00000000
+0x000001E0:	cmpi r1,0               	SR=0x00000040
+0x000001E4:	ble 16                  	PC=0x00000228
+0x00000228:	add sp,r6,r0            	SP=R6+R0=0x00007FD0,SR=0x00000000
+0x0000022C:	pop r7                  	{R7}=MEM[0x00007FD4]{0x00001FFA}
+0x00000230:	pop r6                  	{R6}=MEM[0x00007FD8]{0x00007FE8}
+0x00000234:	ret                     	PC=MEM[0x00007FDC]=0x0000026C
+0x0000026C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FE0,SR=0x00000000
+0x00000270:	movs r1,10              	R1=0x0000000A
+0x00000274:	push r1                 	MEM[0x00007FE0]{0x0000000A}={R1}
+0x00000278:	call -95                	PC=0x00000100,MEM[0x00007FDC]=0x0000027C
+0x00000100:	push r6                 	MEM[0x00007FD8]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FD4]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FD0,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FD0,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF4,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FD0,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FE0]=0x0000000A
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000000A
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FD0,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FD4]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FD8]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FDC]=0x0000027C
+0x0000027C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FE0,SR=0x00000000
+0x00000280:	l32 r2,[r7-1]           	R2=MEM[0x00007FE4]=0x00000064
+0x00000284:	add sp,r6,r0            	SP=R6+R0=0x00007FE8,SR=0x00000000
+0x00000288:	pop r7                  	{R7}=MEM[0x00007FEC]{0x00001FFD}
+0x0000028C:	pop r6                  	{R6}=MEM[0x00007FF0]{0x00007FF4}
+0x00000290:	ret                     	PC=MEM[0x00007FF4]=0x00000028
+0x00000028:	call -9                 	PC=0x00000008,MEM[0x00007FF4]=0x0000002C
+0x00000008:	int 0                   	CR=0x00000000,PC=0x00000000
+[TERMINAL]
++123
+
+[END OF SIMULATION]
\ No newline at end of file
diff --git a/examples/out/intep/poxim-simple-if.interp b/examples/out/intep/poxim-simple-if.interp
new file mode 100644
index 00000000..394fa90f
--- /dev/null
+++ b/examples/out/intep/poxim-simple-if.interp
@@ -0,0 +1,42 @@
+[START OF SIMULATION]
+0x00000000:	mov sp,32764            	SP=0x00007FFC
+0x00000004:	bun 1                   	PC=0x0000000C
+0x0000000C:	push r6                 	MEM[0x00007FFC]{0x00000000}={R6}
+0x00000010:	push r7                 	MEM[0x00007FF8]{0x00000000}={R7}
+0x00000014:	add r6,sp,r0            	R6=SP+R0=0x00007FF4,SR=0x00000000
+0x00000018:	add r7,r6,r0            	R7=R6+R0=0x00007FF4,SR=0x00000000
+0x0000001C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFD,SR=0x00000000
+0x00000020:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FF4,SR=0x00000000
+0x00000024:	call 54                 	PC=0x00000100,MEM[0x00007FF4]=0x00000028
+0x00000100:	push r6                 	MEM[0x00007FF0]{0x00007FF4}={R6}
+0x00000104:	push r7                 	MEM[0x00007FEC]{0x00001FFD}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FE8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FE8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFA,SR=0x00000000
+0x00000114:	subi sp,sp,8            	SP=SP-0x00000008=0x00007FE0,SR=0x00000000
+0x00000118:	movs r1,7               	R1=0x00000007
+0x0000011C:	s32 [r7+0],r1           	MEM[0x00007FE8]=R1=0x00000007
+0x00000120:	movs r1,3               	R1=0x00000003
+0x00000124:	s32 [r7-1],r1           	MEM[0x00007FE4]=R1=0x00000003
+0x00000128:	l32 r1,[r7+0]           	R1=MEM[0x00007FE8]=0x00000007
+0x0000012C:	l32 r2,[r7-1]           	R2=MEM[0x00007FE4]=0x00000003
+0x00000130:	cmp r1,r2               	SR=0x00000000
+0x00000134:	ble 4                   	PC=0x00000138
+0x00000138:	movs r1,105             	R1=0x00000069
+0x0000013C:	s32 [r7-1],r1           	MEM[0x00007FE4]=R1=0x00000069
+0x00000140:	movs r1,104             	R1=0x00000068
+0x00000144:	s32 [r7+0],r1           	MEM[0x00007FE8]=R1=0x00000068
+0x00000148:	l32 r1,[r7+0]           	R1=MEM[0x00007FE8]=0x00000068
+0x0000014C:	l32 r2,[r7-1]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000150:	cmp r1,r2               	SR=0x00000011
+0x00000154:	bge 2                   	PC=0x00000158
+0x00000158:	movs r1,7               	R1=0x00000007
+0x0000015C:	s32 [r7-1],r1           	MEM[0x00007FE4]=R1=0x00000007
+0x00000160:	l32 r2,[r7-1]           	R2=MEM[0x00007FE4]=0x00000007
+0x00000164:	add sp,r6,r0            	SP=R6+R0=0x00007FE8,SR=0x00000000
+0x00000168:	pop r7                  	{R7}=MEM[0x00007FEC]{0x00001FFD}
+0x0000016C:	pop r6                  	{R6}=MEM[0x00007FF0]{0x00007FF4}
+0x00000170:	ret                     	PC=MEM[0x00007FF4]=0x00000028
+0x00000028:	call -9                 	PC=0x00000008,MEM[0x00007FF4]=0x0000002C
+0x00000008:	int 0                   	CR=0x00000000,PC=0x00000000
+[END OF SIMULATION]
\ No newline at end of file
diff --git a/examples/out/intep/poxim-sort.interp b/examples/out/intep/poxim-sort.interp
new file mode 100644
index 00000000..0113f83d
--- /dev/null
+++ b/examples/out/intep/poxim-sort.interp
@@ -0,0 +1,1502 @@
+[START OF SIMULATION]
+0x00000000:	mov sp,32764            	SP=0x00007FFC
+0x00000004:	bun 1                   	PC=0x0000000C
+0x0000000C:	push r6                 	MEM[0x00007FFC]{0x00000000}={R6}
+0x00000010:	push r7                 	MEM[0x00007FF8]{0x00000000}={R7}
+0x00000014:	add r6,sp,r0            	R6=SP+R0=0x00007FF4,SR=0x00000000
+0x00000018:	add r7,r6,r0            	R7=R6+R0=0x00007FF4,SR=0x00000000
+0x0000001C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFD,SR=0x00000000
+0x00000020:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FF4,SR=0x00000000
+0x00000024:	call 219                	PC=0x00000394,MEM[0x00007FF4]=0x00000028
+0x00000394:	push r6                 	MEM[0x00007FF0]{0x00007FF4}={R6}
+0x00000398:	push r7                 	MEM[0x00007FEC]{0x00001FFD}={R7}
+0x0000039C:	add r6,sp,r0            	R6=SP+R0=0x00007FE8,SR=0x00000000
+0x000003A0:	add r7,r6,r0            	R7=R6+R0=0x00007FE8,SR=0x00000000
+0x000003A4:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFA,SR=0x00000000
+0x000003A8:	subi sp,sp,32           	SP=SP-0x00000020=0x00007FC8,SR=0x00000000
+0x000003AC:	movs r1,20              	R1=0x00000014
+0x000003B0:	push r1                 	MEM[0x00007FC8]{0x00000014}={R1}
+0x000003B4:	movs r1,0               	R1=0x00000000
+0x000003B8:	push r1                 	MEM[0x00007FC4]{0x00000000}={R1}
+0x000003BC:	addi r1,r7,-4           	R1=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x000003C0:	push r1                 	MEM[0x00007FC0]{0x00001FF6}={R1}
+0x000003C4:	call -227               	PC=0x0000003C,MEM[0x00007FBC]=0x000003C8
+0x0000003C:	push r6                 	MEM[0x00007FB8]{0x00007FE8}={R6}
+0x00000040:	push r7                 	MEM[0x00007FB4]{0x00001FFA}={R7}
+0x00000044:	add r6,sp,r0            	R6=SP+R0=0x00007FB0,SR=0x00000000
+0x00000048:	add r7,r6,r0            	R7=R6+R0=0x00007FB0,SR=0x00000000
+0x0000004C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEC,SR=0x00000000
+0x00000050:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB0,SR=0x00000000
+0x00000054:	add sp,r6,r0            	SP=R6+R0=0x00007FB0,SR=0x00000000
+0x00000058:	pop r7                  	{R7}=MEM[0x00007FB4]{0x00001FFA}
+0x0000005C:	pop r6                  	{R6}=MEM[0x00007FB8]{0x00007FE8}
+0x00000060:	ret                     	PC=MEM[0x00007FBC]=0x000003C8
+0x000003C8:	addi sp,sp,12           	SP=SP+0x0000000C=0x00007FC8,SR=0x00000000
+0x000003CC:	movs r1,-1              	R1=0xFFFFFFFF
+0x000003D0:	s32 [r7-4],r1           	MEM[0x00007FD8]=R1=0xFFFFFFFF
+0x000003D4:	movs r1,-564            	R1=0xFFFFFDCC
+0x000003D8:	s32 [r7-3],r1           	MEM[0x00007FDC]=R1=0xFFFFFDCC
+0x000003DC:	movs r1,420             	R1=0x000001A4
+0x000003E0:	s32 [r7-2],r1           	MEM[0x00007FE0]=R1=0x000001A4
+0x000003E4:	movs r1,69              	R1=0x00000045
+0x000003E8:	s32 [r7-1],r1           	MEM[0x00007FE4]=R1=0x00000045
+0x000003EC:	movs r1,1200            	R1=0x000004B0
+0x000003F0:	s32 [r7+0],r1           	MEM[0x00007FE8]=R1=0x000004B0
+0x000003F4:	movs r1,5               	R1=0x00000005
+0x000003F8:	s32 [r7-5],r1           	MEM[0x00007FD4]=R1=0x00000005
+0x000003FC:	movs r1,0               	R1=0x00000000
+0x00000400:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000000
+0x00000404:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000000
+0x00000408:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x0000040C:	cmp r1,r2               	SR=0x00000011
+0x00000410:	bge 22                  	PC=0x00000414
+0x00000414:	bun 5                   	PC=0x0000042C
+0x0000042C:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000000
+0x00000430:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000000,SR=0x00000051
+0x00000434:	addi r2,r7,-4           	R2=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x00000438:	add r2,r2,r1            	R2=R2+R1=0x00001FF6,SR=0x00000000
+0x0000043C:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x00000440:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x00000444:	s32 [r7-7],r2           	MEM[0x00007FCC]=R2=0xFFFFFFFF
+0x00000448:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0xFFFFFFFF
+0x0000044C:	push r1                 	MEM[0x00007FC8]{0xFFFFFFFF}={R1}
+0x00000450:	call -108               	PC=0x000002A4,MEM[0x00007FC4]=0x00000454
+0x000002A4:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x000002A8:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x000002AC:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x000002B0:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x000002B4:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x000002B8:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
+0x000002BC:	movs r1,1               	R1=0x00000001
+0x000002C0:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x000002C4:	movs r1,0               	R1=0x00000000
+0x000002C8:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
+0x000002CC:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0xFFFFFFFF
+0x000002D0:	cmpi r1,0               	SR=0x00000011
+0x000002D4:	bge 6                   	PC=0x000002D8
+0x000002D8:	movs r1,1               	R1=0x00000001
+0x000002DC:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000001
+0x000002E0:	movs r1,0               	R1=0x00000000
+0x000002E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0xFFFFFFFF
+0x000002E8:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000001
+0x000002EC:	s32 [r7+4],r1           	MEM[0x00007FC8]=R1=0x00000001
+0x000002F0:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x000002F4:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x000002F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x000002FC:	cmpi r1,11              	SR=0x00000011
+0x00000300:	ble 5                   	PC=0x00000318
+0x00000318:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000001
+0x0000031C:	cmpi r1,0               	SR=0x00000000
+0x00000320:	ble 5                   	PC=0x00000324
+0x00000324:	movs r1,45              	R1=0x0000002D
+0x00000328:	push r1                 	MEM[0x00007FAC]{0x0000002D}={R1}
+0x0000032C:	call -140               	PC=0x00000100,MEM[0x00007FA8]=0x00000330
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002D
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002D
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x00000330
+0x00000330:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x00000334:	bun 0                   	PC=0x00000338
+0x00000338:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x0000033C:	cmpi r1,0               	SR=0x00000000
+0x00000340:	ble 16                  	PC=0x00000344
+0x00000344:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x00000348:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x0000034C:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x00000350:	movs r2,10              	R2=0x0000000A
+0x00000354:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x00000358:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000001
+0x0000035C:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000001
+0x00000360:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
+0x00000364:	push r1                 	MEM[0x00007FAC]{0x00000031}={R1}
+0x00000368:	call -155               	PC=0x00000100,MEM[0x00007FA8]=0x0000036C
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000031
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x0000036C
+0x0000036C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x00000370:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x00000374:	movs r2,10              	R2=0x0000000A
+0x00000378:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x0000037C:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
+0x00000380:	bun -19                 	PC=0x00000338
+0x00000338:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
+0x0000033C:	cmpi r1,0               	SR=0x00000040
+0x00000340:	ble 16                  	PC=0x00000384
+0x00000384:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x00000388:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x0000038C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000390:	ret                     	PC=MEM[0x00007FC4]=0x00000454
+0x00000454:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000458:	movs r1,32              	R1=0x00000020
+0x0000045C:	push r1                 	MEM[0x00007FC8]{0x00000020}={R1}
+0x00000460:	call -217               	PC=0x00000100,MEM[0x00007FC4]=0x00000464
+0x00000100:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0x00000020
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FC4]=0x00000464
+0x00000464:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000468:	bun -21                 	PC=0x00000418
+0x00000418:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000000
+0x0000041C:	add r2,r1,r0            	R2=R1+R0=0x00000000,SR=0x00000040
+0x00000420:	addi r1,r1,1            	R1=R1+0x00000001=0x00000001,SR=0x00000000
+0x00000424:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000001
+0x00000428:	bun -10                 	PC=0x00000404
+0x00000404:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000001
+0x00000408:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x0000040C:	cmp r1,r2               	SR=0x00000011
+0x00000410:	bge 22                  	PC=0x00000414
+0x00000414:	bun 5                   	PC=0x0000042C
+0x0000042C:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000001
+0x00000430:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000004,SR=0x00000011
+0x00000434:	addi r2,r7,-4           	R2=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x00000438:	add r2,r2,r1            	R2=R2+R1=0x00001FFA,SR=0x00000000
+0x0000043C:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x00000440:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x00000444:	s32 [r7-7],r2           	MEM[0x00007FCC]=R2=0xFFFFFFFF
+0x00000448:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0xFFFFFFFF
+0x0000044C:	push r1                 	MEM[0x00007FC8]{0xFFFFFFFF}={R1}
+0x00000450:	call -108               	PC=0x000002A4,MEM[0x00007FC4]=0x00000454
+0x000002A4:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x000002A8:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x000002AC:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x000002B0:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x000002B4:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x000002B8:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
+0x000002BC:	movs r1,1               	R1=0x00000001
+0x000002C0:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x000002C4:	movs r1,0               	R1=0x00000000
+0x000002C8:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
+0x000002CC:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0xFFFFFFFF
+0x000002D0:	cmpi r1,0               	SR=0x00000011
+0x000002D4:	bge 6                   	PC=0x000002D8
+0x000002D8:	movs r1,1               	R1=0x00000001
+0x000002DC:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000001
+0x000002E0:	movs r1,0               	R1=0x00000000
+0x000002E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0xFFFFFFFF
+0x000002E8:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000001
+0x000002EC:	s32 [r7+4],r1           	MEM[0x00007FC8]=R1=0x00000001
+0x000002F0:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x000002F4:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x000002F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x000002FC:	cmpi r1,11              	SR=0x00000011
+0x00000300:	ble 5                   	PC=0x00000318
+0x00000318:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000001
+0x0000031C:	cmpi r1,0               	SR=0x00000000
+0x00000320:	ble 5                   	PC=0x00000324
+0x00000324:	movs r1,45              	R1=0x0000002D
+0x00000328:	push r1                 	MEM[0x00007FAC]{0x0000002D}={R1}
+0x0000032C:	call -140               	PC=0x00000100,MEM[0x00007FA8]=0x00000330
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002D
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002D
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x00000330
+0x00000330:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x00000334:	bun 0                   	PC=0x00000338
+0x00000338:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x0000033C:	cmpi r1,0               	SR=0x00000000
+0x00000340:	ble 16                  	PC=0x00000344
+0x00000344:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x00000348:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x0000034C:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x00000350:	movs r2,10              	R2=0x0000000A
+0x00000354:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x00000358:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000001
+0x0000035C:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000001
+0x00000360:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
+0x00000364:	push r1                 	MEM[0x00007FAC]{0x00000031}={R1}
+0x00000368:	call -155               	PC=0x00000100,MEM[0x00007FA8]=0x0000036C
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000031
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x0000036C
+0x0000036C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x00000370:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x00000374:	movs r2,10              	R2=0x0000000A
+0x00000378:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x0000037C:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
+0x00000380:	bun -19                 	PC=0x00000338
+0x00000338:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
+0x0000033C:	cmpi r1,0               	SR=0x00000040
+0x00000340:	ble 16                  	PC=0x00000384
+0x00000384:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x00000388:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x0000038C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000390:	ret                     	PC=MEM[0x00007FC4]=0x00000454
+0x00000454:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000458:	movs r1,32              	R1=0x00000020
+0x0000045C:	push r1                 	MEM[0x00007FC8]{0x00000020}={R1}
+0x00000460:	call -217               	PC=0x00000100,MEM[0x00007FC4]=0x00000464
+0x00000100:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0x00000020
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FC4]=0x00000464
+0x00000464:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000468:	bun -21                 	PC=0x00000418
+0x00000418:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000001
+0x0000041C:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x00000420:	addi r1,r1,1            	R1=R1+0x00000001=0x00000002,SR=0x00000000
+0x00000424:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000002
+0x00000428:	bun -10                 	PC=0x00000404
+0x00000404:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000002
+0x00000408:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x0000040C:	cmp r1,r2               	SR=0x00000011
+0x00000410:	bge 22                  	PC=0x00000414
+0x00000414:	bun 5                   	PC=0x0000042C
+0x0000042C:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000002
+0x00000430:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000008,SR=0x00000011
+0x00000434:	addi r2,r7,-4           	R2=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x00000438:	add r2,r2,r1            	R2=R2+R1=0x00001FFE,SR=0x00000000
+0x0000043C:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x00000440:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x00000444:	s32 [r7-7],r2           	MEM[0x00007FCC]=R2=0xFFFFFFFF
+0x00000448:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0xFFFFFFFF
+0x0000044C:	push r1                 	MEM[0x00007FC8]{0xFFFFFFFF}={R1}
+0x00000450:	call -108               	PC=0x000002A4,MEM[0x00007FC4]=0x00000454
+0x000002A4:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x000002A8:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x000002AC:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x000002B0:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x000002B4:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x000002B8:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
+0x000002BC:	movs r1,1               	R1=0x00000001
+0x000002C0:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x000002C4:	movs r1,0               	R1=0x00000000
+0x000002C8:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
+0x000002CC:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0xFFFFFFFF
+0x000002D0:	cmpi r1,0               	SR=0x00000011
+0x000002D4:	bge 6                   	PC=0x000002D8
+0x000002D8:	movs r1,1               	R1=0x00000001
+0x000002DC:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000001
+0x000002E0:	movs r1,0               	R1=0x00000000
+0x000002E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0xFFFFFFFF
+0x000002E8:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000001
+0x000002EC:	s32 [r7+4],r1           	MEM[0x00007FC8]=R1=0x00000001
+0x000002F0:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x000002F4:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x000002F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x000002FC:	cmpi r1,11              	SR=0x00000011
+0x00000300:	ble 5                   	PC=0x00000318
+0x00000318:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000001
+0x0000031C:	cmpi r1,0               	SR=0x00000000
+0x00000320:	ble 5                   	PC=0x00000324
+0x00000324:	movs r1,45              	R1=0x0000002D
+0x00000328:	push r1                 	MEM[0x00007FAC]{0x0000002D}={R1}
+0x0000032C:	call -140               	PC=0x00000100,MEM[0x00007FA8]=0x00000330
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002D
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002D
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x00000330
+0x00000330:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x00000334:	bun 0                   	PC=0x00000338
+0x00000338:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x0000033C:	cmpi r1,0               	SR=0x00000000
+0x00000340:	ble 16                  	PC=0x00000344
+0x00000344:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x00000348:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x0000034C:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x00000350:	movs r2,10              	R2=0x0000000A
+0x00000354:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x00000358:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000001
+0x0000035C:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000001
+0x00000360:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
+0x00000364:	push r1                 	MEM[0x00007FAC]{0x00000031}={R1}
+0x00000368:	call -155               	PC=0x00000100,MEM[0x00007FA8]=0x0000036C
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000031
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x0000036C
+0x0000036C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x00000370:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x00000374:	movs r2,10              	R2=0x0000000A
+0x00000378:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x0000037C:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
+0x00000380:	bun -19                 	PC=0x00000338
+0x00000338:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
+0x0000033C:	cmpi r1,0               	SR=0x00000040
+0x00000340:	ble 16                  	PC=0x00000384
+0x00000384:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x00000388:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x0000038C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000390:	ret                     	PC=MEM[0x00007FC4]=0x00000454
+0x00000454:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000458:	movs r1,32              	R1=0x00000020
+0x0000045C:	push r1                 	MEM[0x00007FC8]{0x00000020}={R1}
+0x00000460:	call -217               	PC=0x00000100,MEM[0x00007FC4]=0x00000464
+0x00000100:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0x00000020
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FC4]=0x00000464
+0x00000464:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000468:	bun -21                 	PC=0x00000418
+0x00000418:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000002
+0x0000041C:	add r2,r1,r0            	R2=R1+R0=0x00000002,SR=0x00000000
+0x00000420:	addi r1,r1,1            	R1=R1+0x00000001=0x00000003,SR=0x00000000
+0x00000424:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000003
+0x00000428:	bun -10                 	PC=0x00000404
+0x00000404:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000003
+0x00000408:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x0000040C:	cmp r1,r2               	SR=0x00000011
+0x00000410:	bge 22                  	PC=0x00000414
+0x00000414:	bun 5                   	PC=0x0000042C
+0x0000042C:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000003
+0x00000430:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x000000000000000C,SR=0x00000011
+0x00000434:	addi r2,r7,-4           	R2=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x00000438:	add r2,r2,r1            	R2=R2+R1=0x00002002,SR=0x00000000
+0x0000043C:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x00000440:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x00000444:	s32 [r7-7],r2           	MEM[0x00007FCC]=R2=0xFFFFFFFF
+0x00000448:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0xFFFFFFFF
+0x0000044C:	push r1                 	MEM[0x00007FC8]{0xFFFFFFFF}={R1}
+0x00000450:	call -108               	PC=0x000002A4,MEM[0x00007FC4]=0x00000454
+0x000002A4:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x000002A8:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x000002AC:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x000002B0:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x000002B4:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x000002B8:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
+0x000002BC:	movs r1,1               	R1=0x00000001
+0x000002C0:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x000002C4:	movs r1,0               	R1=0x00000000
+0x000002C8:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
+0x000002CC:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0xFFFFFFFF
+0x000002D0:	cmpi r1,0               	SR=0x00000011
+0x000002D4:	bge 6                   	PC=0x000002D8
+0x000002D8:	movs r1,1               	R1=0x00000001
+0x000002DC:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000001
+0x000002E0:	movs r1,0               	R1=0x00000000
+0x000002E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0xFFFFFFFF
+0x000002E8:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000001
+0x000002EC:	s32 [r7+4],r1           	MEM[0x00007FC8]=R1=0x00000001
+0x000002F0:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x000002F4:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x000002F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x000002FC:	cmpi r1,11              	SR=0x00000011
+0x00000300:	ble 5                   	PC=0x00000318
+0x00000318:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000001
+0x0000031C:	cmpi r1,0               	SR=0x00000000
+0x00000320:	ble 5                   	PC=0x00000324
+0x00000324:	movs r1,45              	R1=0x0000002D
+0x00000328:	push r1                 	MEM[0x00007FAC]{0x0000002D}={R1}
+0x0000032C:	call -140               	PC=0x00000100,MEM[0x00007FA8]=0x00000330
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002D
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002D
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x00000330
+0x00000330:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x00000334:	bun 0                   	PC=0x00000338
+0x00000338:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x0000033C:	cmpi r1,0               	SR=0x00000000
+0x00000340:	ble 16                  	PC=0x00000344
+0x00000344:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x00000348:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x0000034C:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x00000350:	movs r2,10              	R2=0x0000000A
+0x00000354:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x00000358:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000001
+0x0000035C:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000001
+0x00000360:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
+0x00000364:	push r1                 	MEM[0x00007FAC]{0x00000031}={R1}
+0x00000368:	call -155               	PC=0x00000100,MEM[0x00007FA8]=0x0000036C
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000031
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x0000036C
+0x0000036C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x00000370:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x00000374:	movs r2,10              	R2=0x0000000A
+0x00000378:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x0000037C:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
+0x00000380:	bun -19                 	PC=0x00000338
+0x00000338:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
+0x0000033C:	cmpi r1,0               	SR=0x00000040
+0x00000340:	ble 16                  	PC=0x00000384
+0x00000384:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x00000388:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x0000038C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000390:	ret                     	PC=MEM[0x00007FC4]=0x00000454
+0x00000454:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000458:	movs r1,32              	R1=0x00000020
+0x0000045C:	push r1                 	MEM[0x00007FC8]{0x00000020}={R1}
+0x00000460:	call -217               	PC=0x00000100,MEM[0x00007FC4]=0x00000464
+0x00000100:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0x00000020
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FC4]=0x00000464
+0x00000464:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000468:	bun -21                 	PC=0x00000418
+0x00000418:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000003
+0x0000041C:	add r2,r1,r0            	R2=R1+R0=0x00000003,SR=0x00000000
+0x00000420:	addi r1,r1,1            	R1=R1+0x00000001=0x00000004,SR=0x00000000
+0x00000424:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000004
+0x00000428:	bun -10                 	PC=0x00000404
+0x00000404:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000004
+0x00000408:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x0000040C:	cmp r1,r2               	SR=0x00000011
+0x00000410:	bge 22                  	PC=0x00000414
+0x00000414:	bun 5                   	PC=0x0000042C
+0x0000042C:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000004
+0x00000430:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000010,SR=0x00000011
+0x00000434:	addi r2,r7,-4           	R2=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x00000438:	add r2,r2,r1            	R2=R2+R1=0x00002006,SR=0x00000000
+0x0000043C:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x00000440:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x00000444:	s32 [r7-7],r2           	MEM[0x00007FCC]=R2=0xFFFFFFFF
+0x00000448:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0xFFFFFFFF
+0x0000044C:	push r1                 	MEM[0x00007FC8]{0xFFFFFFFF}={R1}
+0x00000450:	call -108               	PC=0x000002A4,MEM[0x00007FC4]=0x00000454
+0x000002A4:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x000002A8:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x000002AC:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x000002B0:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x000002B4:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x000002B8:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
+0x000002BC:	movs r1,1               	R1=0x00000001
+0x000002C0:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x000002C4:	movs r1,0               	R1=0x00000000
+0x000002C8:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
+0x000002CC:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0xFFFFFFFF
+0x000002D0:	cmpi r1,0               	SR=0x00000011
+0x000002D4:	bge 6                   	PC=0x000002D8
+0x000002D8:	movs r1,1               	R1=0x00000001
+0x000002DC:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000001
+0x000002E0:	movs r1,0               	R1=0x00000000
+0x000002E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0xFFFFFFFF
+0x000002E8:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000001
+0x000002EC:	s32 [r7+4],r1           	MEM[0x00007FC8]=R1=0x00000001
+0x000002F0:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x000002F4:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x000002F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x000002FC:	cmpi r1,11              	SR=0x00000011
+0x00000300:	ble 5                   	PC=0x00000318
+0x00000318:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000001
+0x0000031C:	cmpi r1,0               	SR=0x00000000
+0x00000320:	ble 5                   	PC=0x00000324
+0x00000324:	movs r1,45              	R1=0x0000002D
+0x00000328:	push r1                 	MEM[0x00007FAC]{0x0000002D}={R1}
+0x0000032C:	call -140               	PC=0x00000100,MEM[0x00007FA8]=0x00000330
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002D
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002D
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x00000330
+0x00000330:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x00000334:	bun 0                   	PC=0x00000338
+0x00000338:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x0000033C:	cmpi r1,0               	SR=0x00000000
+0x00000340:	ble 16                  	PC=0x00000344
+0x00000344:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x00000348:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x0000034C:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x00000350:	movs r2,10              	R2=0x0000000A
+0x00000354:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x00000358:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000001
+0x0000035C:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000001
+0x00000360:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
+0x00000364:	push r1                 	MEM[0x00007FAC]{0x00000031}={R1}
+0x00000368:	call -155               	PC=0x00000100,MEM[0x00007FA8]=0x0000036C
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000031
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x0000036C
+0x0000036C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x00000370:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x00000374:	movs r2,10              	R2=0x0000000A
+0x00000378:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x0000037C:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
+0x00000380:	bun -19                 	PC=0x00000338
+0x00000338:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
+0x0000033C:	cmpi r1,0               	SR=0x00000040
+0x00000340:	ble 16                  	PC=0x00000384
+0x00000384:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x00000388:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x0000038C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000390:	ret                     	PC=MEM[0x00007FC4]=0x00000454
+0x00000454:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000458:	movs r1,32              	R1=0x00000020
+0x0000045C:	push r1                 	MEM[0x00007FC8]{0x00000020}={R1}
+0x00000460:	call -217               	PC=0x00000100,MEM[0x00007FC4]=0x00000464
+0x00000100:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0x00000020
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FC4]=0x00000464
+0x00000464:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000468:	bun -21                 	PC=0x00000418
+0x00000418:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000004
+0x0000041C:	add r2,r1,r0            	R2=R1+R0=0x00000004,SR=0x00000000
+0x00000420:	addi r1,r1,1            	R1=R1+0x00000001=0x00000005,SR=0x00000000
+0x00000424:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000005
+0x00000428:	bun -10                 	PC=0x00000404
+0x00000404:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000005
+0x00000408:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x0000040C:	cmp r1,r2               	SR=0x00000040
+0x00000410:	bge 22                  	PC=0x0000046C
+0x0000046C:	movs r1,10              	R1=0x0000000A
+0x00000470:	push r1                 	MEM[0x00007FC8]{0x0000000A}={R1}
+0x00000474:	call -222               	PC=0x00000100,MEM[0x00007FC4]=0x00000478
+0x00000100:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0x0000000A
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000000A
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FC4]=0x00000478
+0x00000478:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x0000047C:	l32 r1,[r7-5]           	R1=MEM[0x00007FD4]=0x00000005
+0x00000480:	push r1                 	MEM[0x00007FC8]{0x00000005}={R1}
+0x00000484:	addi r1,r7,-4           	R1=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x00000488:	push r1                 	MEM[0x00007FC4]{0x00001FF6}={R1}
+0x0000048C:	call -214               	PC=0x00000138,MEM[0x00007FC0]=0x00000490
+0x00000138:	push r6                 	MEM[0x00007FBC]{0x00007FE8}={R6}
+0x0000013C:	push r7                 	MEM[0x00007FB8]{0x00001FFA}={R7}
+0x00000140:	add r6,sp,r0            	R6=SP+R0=0x00007FB4,SR=0x00000000
+0x00000144:	add r7,r6,r0            	R7=R6+R0=0x00007FB4,SR=0x00000000
+0x00000148:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FED,SR=0x00000000
+0x0000014C:	subi sp,sp,16           	SP=SP-0x00000010=0x00007FA4,SR=0x00000000
+0x00000150:	movs r1,0               	R1=0x00000000
+0x00000154:	s32 [r7-2],r1           	MEM[0x00007FAC]=R1=0x00000000
+0x00000158:	l32 r1,[r7+5]           	R1=MEM[0x00007FC8]=0x00000005
+0x0000015C:	subi r1,r1,1            	R1=R1-0x00000001=0x00000004,SR=0x00000000
+0x00000160:	l32 r2,[r7-2]           	R2=MEM[0x00007FAC]=0x00000000
+0x00000164:	cmp r2,r1               	SR=0x00000011
+0x00000168:	bge 74                  	PC=0x0000016C
+0x0000016C:	bun 5                   	PC=0x00000184
+0x00000184:	movs r1,0               	R1=0x00000000
+0x00000188:	s32 [r7-1],r1           	MEM[0x00007FB0]=R1=0x00000000
+0x0000018C:	movs r1,0               	R1=0x00000000
+0x00000190:	s32 [r7-3],r1           	MEM[0x00007FA8]=R1=0x00000000
+0x00000194:	l32 r1,[r7+5]           	R1=MEM[0x00007FC8]=0x00000005
+0x00000198:	subi r1,r1,1            	R1=R1-0x00000001=0x00000004,SR=0x00000000
+0x0000019C:	l32 r2,[r7-2]           	R2=MEM[0x00007FAC]=0x00000000
+0x000001A0:	sub r1,r1,r2            	R1=R1-R2=0x00000004,SR=0x00000000
+0x000001A4:	l32 r2,[r7-3]           	R2=MEM[0x00007FA8]=0x00000000
+0x000001A8:	cmp r2,r1               	SR=0x00000011
+0x000001AC:	bge 52                  	PC=0x000001B0
+0x000001B0:	bun 5                   	PC=0x000001C8
+0x000001C8:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000000
+0x000001CC:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000000,SR=0x00000051
+0x000001D0:	l32 r2,[r7+4]           	R2=MEM[0x00007FC4]=0x00001FF6
+0x000001D4:	add r2,r2,r1            	R2=R2+R1=0x00001FF6,SR=0x00000000
+0x000001D8:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x000001DC:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000000
+0x000001E0:	addi r1,r1,1            	R1=R1+0x00000001=0x00000001,SR=0x00000000
+0x000001E4:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000004,SR=0x00000000
+0x000001E8:	l32 r3,[r7+4]           	R3=MEM[0x00007FC4]=0x00001FF6
+0x000001EC:	add r3,r3,r1            	R3=R3+R1=0x00001FFA,SR=0x00000000
+0x000001F0:	sub r3,r3,r1            	R3=R3-R1=0x00001FF6,SR=0x00000000
+0x000001F4:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x000001F8:	l32 r3,[r3+0]           	R3=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x000001FC:	cmp r2,r3               	SR=0x00000040
+0x00000200:	ble 30                  	PC=0x0000027C
+0x0000027C:	bun -51                 	PC=0x000001B4
+0x000001B4:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000000
+0x000001B8:	add r2,r1,r0            	R2=R1+R0=0x00000000,SR=0x00000040
+0x000001BC:	addi r1,r1,1            	R1=R1+0x00000001=0x00000001,SR=0x00000000
+0x000001C0:	s32 [r7-3],r1           	MEM[0x00007FA8]=R1=0x00000001
+0x000001C4:	bun -13                 	PC=0x00000194
+0x00000194:	l32 r1,[r7+5]           	R1=MEM[0x00007FC8]=0x00000005
+0x00000198:	subi r1,r1,1            	R1=R1-0x00000001=0x00000004,SR=0x00000000
+0x0000019C:	l32 r2,[r7-2]           	R2=MEM[0x00007FAC]=0x00000000
+0x000001A0:	sub r1,r1,r2            	R1=R1-R2=0x00000004,SR=0x00000000
+0x000001A4:	l32 r2,[r7-3]           	R2=MEM[0x00007FA8]=0x00000001
+0x000001A8:	cmp r2,r1               	SR=0x00000011
+0x000001AC:	bge 52                  	PC=0x000001B0
+0x000001B0:	bun 5                   	PC=0x000001C8
+0x000001C8:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000001
+0x000001CC:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000004,SR=0x00000011
+0x000001D0:	l32 r2,[r7+4]           	R2=MEM[0x00007FC4]=0x00001FF6
+0x000001D4:	add r2,r2,r1            	R2=R2+R1=0x00001FFA,SR=0x00000000
+0x000001D8:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x000001DC:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000001
+0x000001E0:	addi r1,r1,1            	R1=R1+0x00000001=0x00000002,SR=0x00000000
+0x000001E4:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000008,SR=0x00000000
+0x000001E8:	l32 r3,[r7+4]           	R3=MEM[0x00007FC4]=0x00001FF6
+0x000001EC:	add r3,r3,r1            	R3=R3+R1=0x00001FFE,SR=0x00000000
+0x000001F0:	sub r3,r3,r1            	R3=R3-R1=0x00001FF6,SR=0x00000000
+0x000001F4:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x000001F8:	l32 r3,[r3+0]           	R3=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x000001FC:	cmp r2,r3               	SR=0x00000040
+0x00000200:	ble 30                  	PC=0x0000027C
+0x0000027C:	bun -51                 	PC=0x000001B4
+0x000001B4:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000001
+0x000001B8:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x000001BC:	addi r1,r1,1            	R1=R1+0x00000001=0x00000002,SR=0x00000000
+0x000001C0:	s32 [r7-3],r1           	MEM[0x00007FA8]=R1=0x00000002
+0x000001C4:	bun -13                 	PC=0x00000194
+0x00000194:	l32 r1,[r7+5]           	R1=MEM[0x00007FC8]=0x00000005
+0x00000198:	subi r1,r1,1            	R1=R1-0x00000001=0x00000004,SR=0x00000000
+0x0000019C:	l32 r2,[r7-2]           	R2=MEM[0x00007FAC]=0x00000000
+0x000001A0:	sub r1,r1,r2            	R1=R1-R2=0x00000004,SR=0x00000000
+0x000001A4:	l32 r2,[r7-3]           	R2=MEM[0x00007FA8]=0x00000002
+0x000001A8:	cmp r2,r1               	SR=0x00000011
+0x000001AC:	bge 52                  	PC=0x000001B0
+0x000001B0:	bun 5                   	PC=0x000001C8
+0x000001C8:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000002
+0x000001CC:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000008,SR=0x00000011
+0x000001D0:	l32 r2,[r7+4]           	R2=MEM[0x00007FC4]=0x00001FF6
+0x000001D4:	add r2,r2,r1            	R2=R2+R1=0x00001FFE,SR=0x00000000
+0x000001D8:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x000001DC:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000002
+0x000001E0:	addi r1,r1,1            	R1=R1+0x00000001=0x00000003,SR=0x00000000
+0x000001E4:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x000000000000000C,SR=0x00000000
+0x000001E8:	l32 r3,[r7+4]           	R3=MEM[0x00007FC4]=0x00001FF6
+0x000001EC:	add r3,r3,r1            	R3=R3+R1=0x00002002,SR=0x00000000
+0x000001F0:	sub r3,r3,r1            	R3=R3-R1=0x00001FF6,SR=0x00000000
+0x000001F4:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x000001F8:	l32 r3,[r3+0]           	R3=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x000001FC:	cmp r2,r3               	SR=0x00000040
+0x00000200:	ble 30                  	PC=0x0000027C
+0x0000027C:	bun -51                 	PC=0x000001B4
+0x000001B4:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000002
+0x000001B8:	add r2,r1,r0            	R2=R1+R0=0x00000002,SR=0x00000000
+0x000001BC:	addi r1,r1,1            	R1=R1+0x00000001=0x00000003,SR=0x00000000
+0x000001C0:	s32 [r7-3],r1           	MEM[0x00007FA8]=R1=0x00000003
+0x000001C4:	bun -13                 	PC=0x00000194
+0x00000194:	l32 r1,[r7+5]           	R1=MEM[0x00007FC8]=0x00000005
+0x00000198:	subi r1,r1,1            	R1=R1-0x00000001=0x00000004,SR=0x00000000
+0x0000019C:	l32 r2,[r7-2]           	R2=MEM[0x00007FAC]=0x00000000
+0x000001A0:	sub r1,r1,r2            	R1=R1-R2=0x00000004,SR=0x00000000
+0x000001A4:	l32 r2,[r7-3]           	R2=MEM[0x00007FA8]=0x00000003
+0x000001A8:	cmp r2,r1               	SR=0x00000011
+0x000001AC:	bge 52                  	PC=0x000001B0
+0x000001B0:	bun 5                   	PC=0x000001C8
+0x000001C8:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000003
+0x000001CC:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x000000000000000C,SR=0x00000011
+0x000001D0:	l32 r2,[r7+4]           	R2=MEM[0x00007FC4]=0x00001FF6
+0x000001D4:	add r2,r2,r1            	R2=R2+R1=0x00002002,SR=0x00000000
+0x000001D8:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x000001DC:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000003
+0x000001E0:	addi r1,r1,1            	R1=R1+0x00000001=0x00000004,SR=0x00000000
+0x000001E4:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000010,SR=0x00000000
+0x000001E8:	l32 r3,[r7+4]           	R3=MEM[0x00007FC4]=0x00001FF6
+0x000001EC:	add r3,r3,r1            	R3=R3+R1=0x00002006,SR=0x00000000
+0x000001F0:	sub r3,r3,r1            	R3=R3-R1=0x00001FF6,SR=0x00000000
+0x000001F4:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x000001F8:	l32 r3,[r3+0]           	R3=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x000001FC:	cmp r2,r3               	SR=0x00000040
+0x00000200:	ble 30                  	PC=0x0000027C
+0x0000027C:	bun -51                 	PC=0x000001B4
+0x000001B4:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000003
+0x000001B8:	add r2,r1,r0            	R2=R1+R0=0x00000003,SR=0x00000000
+0x000001BC:	addi r1,r1,1            	R1=R1+0x00000001=0x00000004,SR=0x00000000
+0x000001C0:	s32 [r7-3],r1           	MEM[0x00007FA8]=R1=0x00000004
+0x000001C4:	bun -13                 	PC=0x00000194
+0x00000194:	l32 r1,[r7+5]           	R1=MEM[0x00007FC8]=0x00000005
+0x00000198:	subi r1,r1,1            	R1=R1-0x00000001=0x00000004,SR=0x00000000
+0x0000019C:	l32 r2,[r7-2]           	R2=MEM[0x00007FAC]=0x00000000
+0x000001A0:	sub r1,r1,r2            	R1=R1-R2=0x00000004,SR=0x00000000
+0x000001A4:	l32 r2,[r7-3]           	R2=MEM[0x00007FA8]=0x00000004
+0x000001A8:	cmp r2,r1               	SR=0x00000040
+0x000001AC:	bge 52                  	PC=0x00000280
+0x00000280:	l32 r1,[r7-1]           	R1=MEM[0x00007FB0]=0x00000000
+0x00000284:	cmpi r1,0               	SR=0x00000040
+0x00000288:	bne 1                   	PC=0x0000028C
+0x0000028C:	bun 1                   	PC=0x00000294
+0x00000294:	add sp,r6,r0            	SP=R6+R0=0x00007FB4,SR=0x00000000
+0x00000298:	pop r7                  	{R7}=MEM[0x00007FB8]{0x00001FFA}
+0x0000029C:	pop r6                  	{R6}=MEM[0x00007FBC]{0x00007FE8}
+0x000002A0:	ret                     	PC=MEM[0x00007FC0]=0x00000490
+0x00000490:	addi sp,sp,8            	SP=SP+0x00000008=0x00007FC8,SR=0x00000000
+0x00000494:	movs r1,0               	R1=0x00000000
+0x00000498:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000000
+0x0000049C:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000000
+0x000004A0:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x000004A4:	cmp r1,r2               	SR=0x00000011
+0x000004A8:	bge 22                  	PC=0x000004AC
+0x000004AC:	bun 5                   	PC=0x000004C4
+0x000004C4:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000000
+0x000004C8:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000000,SR=0x00000051
+0x000004CC:	addi r2,r7,-4           	R2=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x000004D0:	add r2,r2,r1            	R2=R2+R1=0x00001FF6,SR=0x00000000
+0x000004D4:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x000004D8:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x000004DC:	s32 [r7-7],r2           	MEM[0x00007FCC]=R2=0xFFFFFFFF
+0x000004E0:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0xFFFFFFFF
+0x000004E4:	push r1                 	MEM[0x00007FC8]{0xFFFFFFFF}={R1}
+0x000004E8:	call -146               	PC=0x000002A4,MEM[0x00007FC4]=0x000004EC
+0x000002A4:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x000002A8:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x000002AC:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x000002B0:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x000002B4:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x000002B8:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
+0x000002BC:	movs r1,1               	R1=0x00000001
+0x000002C0:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x000002C4:	movs r1,0               	R1=0x00000000
+0x000002C8:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
+0x000002CC:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0xFFFFFFFF
+0x000002D0:	cmpi r1,0               	SR=0x00000011
+0x000002D4:	bge 6                   	PC=0x000002D8
+0x000002D8:	movs r1,1               	R1=0x00000001
+0x000002DC:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000001
+0x000002E0:	movs r1,0               	R1=0x00000000
+0x000002E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0xFFFFFFFF
+0x000002E8:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000001
+0x000002EC:	s32 [r7+4],r1           	MEM[0x00007FC8]=R1=0x00000001
+0x000002F0:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x000002F4:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x000002F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x000002FC:	cmpi r1,11              	SR=0x00000011
+0x00000300:	ble 5                   	PC=0x00000318
+0x00000318:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000001
+0x0000031C:	cmpi r1,0               	SR=0x00000000
+0x00000320:	ble 5                   	PC=0x00000324
+0x00000324:	movs r1,45              	R1=0x0000002D
+0x00000328:	push r1                 	MEM[0x00007FAC]{0x0000002D}={R1}
+0x0000032C:	call -140               	PC=0x00000100,MEM[0x00007FA8]=0x00000330
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002D
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002D
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x00000330
+0x00000330:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x00000334:	bun 0                   	PC=0x00000338
+0x00000338:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x0000033C:	cmpi r1,0               	SR=0x00000000
+0x00000340:	ble 16                  	PC=0x00000344
+0x00000344:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x00000348:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x0000034C:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x00000350:	movs r2,10              	R2=0x0000000A
+0x00000354:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x00000358:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000001
+0x0000035C:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000001
+0x00000360:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
+0x00000364:	push r1                 	MEM[0x00007FAC]{0x00000031}={R1}
+0x00000368:	call -155               	PC=0x00000100,MEM[0x00007FA8]=0x0000036C
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000031
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x0000036C
+0x0000036C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x00000370:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x00000374:	movs r2,10              	R2=0x0000000A
+0x00000378:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x0000037C:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
+0x00000380:	bun -19                 	PC=0x00000338
+0x00000338:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
+0x0000033C:	cmpi r1,0               	SR=0x00000040
+0x00000340:	ble 16                  	PC=0x00000384
+0x00000384:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x00000388:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x0000038C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000390:	ret                     	PC=MEM[0x00007FC4]=0x000004EC
+0x000004EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x000004F0:	movs r1,32              	R1=0x00000020
+0x000004F4:	push r1                 	MEM[0x00007FC8]{0x00000020}={R1}
+0x000004F8:	call -255               	PC=0x00000100,MEM[0x00007FC4]=0x000004FC
+0x00000100:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0x00000020
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FC4]=0x000004FC
+0x000004FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000500:	bun -21                 	PC=0x000004B0
+0x000004B0:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000000
+0x000004B4:	add r2,r1,r0            	R2=R1+R0=0x00000000,SR=0x00000040
+0x000004B8:	addi r1,r1,1            	R1=R1+0x00000001=0x00000001,SR=0x00000000
+0x000004BC:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000001
+0x000004C0:	bun -10                 	PC=0x0000049C
+0x0000049C:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000001
+0x000004A0:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x000004A4:	cmp r1,r2               	SR=0x00000011
+0x000004A8:	bge 22                  	PC=0x000004AC
+0x000004AC:	bun 5                   	PC=0x000004C4
+0x000004C4:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000001
+0x000004C8:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000004,SR=0x00000011
+0x000004CC:	addi r2,r7,-4           	R2=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x000004D0:	add r2,r2,r1            	R2=R2+R1=0x00001FFA,SR=0x00000000
+0x000004D4:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x000004D8:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x000004DC:	s32 [r7-7],r2           	MEM[0x00007FCC]=R2=0xFFFFFFFF
+0x000004E0:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0xFFFFFFFF
+0x000004E4:	push r1                 	MEM[0x00007FC8]{0xFFFFFFFF}={R1}
+0x000004E8:	call -146               	PC=0x000002A4,MEM[0x00007FC4]=0x000004EC
+0x000002A4:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x000002A8:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x000002AC:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x000002B0:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x000002B4:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x000002B8:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
+0x000002BC:	movs r1,1               	R1=0x00000001
+0x000002C0:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x000002C4:	movs r1,0               	R1=0x00000000
+0x000002C8:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
+0x000002CC:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0xFFFFFFFF
+0x000002D0:	cmpi r1,0               	SR=0x00000011
+0x000002D4:	bge 6                   	PC=0x000002D8
+0x000002D8:	movs r1,1               	R1=0x00000001
+0x000002DC:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000001
+0x000002E0:	movs r1,0               	R1=0x00000000
+0x000002E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0xFFFFFFFF
+0x000002E8:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000001
+0x000002EC:	s32 [r7+4],r1           	MEM[0x00007FC8]=R1=0x00000001
+0x000002F0:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x000002F4:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x000002F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x000002FC:	cmpi r1,11              	SR=0x00000011
+0x00000300:	ble 5                   	PC=0x00000318
+0x00000318:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000001
+0x0000031C:	cmpi r1,0               	SR=0x00000000
+0x00000320:	ble 5                   	PC=0x00000324
+0x00000324:	movs r1,45              	R1=0x0000002D
+0x00000328:	push r1                 	MEM[0x00007FAC]{0x0000002D}={R1}
+0x0000032C:	call -140               	PC=0x00000100,MEM[0x00007FA8]=0x00000330
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002D
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002D
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x00000330
+0x00000330:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x00000334:	bun 0                   	PC=0x00000338
+0x00000338:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x0000033C:	cmpi r1,0               	SR=0x00000000
+0x00000340:	ble 16                  	PC=0x00000344
+0x00000344:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x00000348:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x0000034C:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x00000350:	movs r2,10              	R2=0x0000000A
+0x00000354:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x00000358:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000001
+0x0000035C:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000001
+0x00000360:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
+0x00000364:	push r1                 	MEM[0x00007FAC]{0x00000031}={R1}
+0x00000368:	call -155               	PC=0x00000100,MEM[0x00007FA8]=0x0000036C
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000031
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x0000036C
+0x0000036C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x00000370:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x00000374:	movs r2,10              	R2=0x0000000A
+0x00000378:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x0000037C:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
+0x00000380:	bun -19                 	PC=0x00000338
+0x00000338:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
+0x0000033C:	cmpi r1,0               	SR=0x00000040
+0x00000340:	ble 16                  	PC=0x00000384
+0x00000384:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x00000388:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x0000038C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000390:	ret                     	PC=MEM[0x00007FC4]=0x000004EC
+0x000004EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x000004F0:	movs r1,32              	R1=0x00000020
+0x000004F4:	push r1                 	MEM[0x00007FC8]{0x00000020}={R1}
+0x000004F8:	call -255               	PC=0x00000100,MEM[0x00007FC4]=0x000004FC
+0x00000100:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0x00000020
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FC4]=0x000004FC
+0x000004FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000500:	bun -21                 	PC=0x000004B0
+0x000004B0:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000001
+0x000004B4:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x000004B8:	addi r1,r1,1            	R1=R1+0x00000001=0x00000002,SR=0x00000000
+0x000004BC:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000002
+0x000004C0:	bun -10                 	PC=0x0000049C
+0x0000049C:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000002
+0x000004A0:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x000004A4:	cmp r1,r2               	SR=0x00000011
+0x000004A8:	bge 22                  	PC=0x000004AC
+0x000004AC:	bun 5                   	PC=0x000004C4
+0x000004C4:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000002
+0x000004C8:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000008,SR=0x00000011
+0x000004CC:	addi r2,r7,-4           	R2=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x000004D0:	add r2,r2,r1            	R2=R2+R1=0x00001FFE,SR=0x00000000
+0x000004D4:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x000004D8:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x000004DC:	s32 [r7-7],r2           	MEM[0x00007FCC]=R2=0xFFFFFFFF
+0x000004E0:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0xFFFFFFFF
+0x000004E4:	push r1                 	MEM[0x00007FC8]{0xFFFFFFFF}={R1}
+0x000004E8:	call -146               	PC=0x000002A4,MEM[0x00007FC4]=0x000004EC
+0x000002A4:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x000002A8:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x000002AC:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x000002B0:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x000002B4:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x000002B8:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
+0x000002BC:	movs r1,1               	R1=0x00000001
+0x000002C0:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x000002C4:	movs r1,0               	R1=0x00000000
+0x000002C8:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
+0x000002CC:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0xFFFFFFFF
+0x000002D0:	cmpi r1,0               	SR=0x00000011
+0x000002D4:	bge 6                   	PC=0x000002D8
+0x000002D8:	movs r1,1               	R1=0x00000001
+0x000002DC:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000001
+0x000002E0:	movs r1,0               	R1=0x00000000
+0x000002E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0xFFFFFFFF
+0x000002E8:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000001
+0x000002EC:	s32 [r7+4],r1           	MEM[0x00007FC8]=R1=0x00000001
+0x000002F0:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x000002F4:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x000002F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x000002FC:	cmpi r1,11              	SR=0x00000011
+0x00000300:	ble 5                   	PC=0x00000318
+0x00000318:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000001
+0x0000031C:	cmpi r1,0               	SR=0x00000000
+0x00000320:	ble 5                   	PC=0x00000324
+0x00000324:	movs r1,45              	R1=0x0000002D
+0x00000328:	push r1                 	MEM[0x00007FAC]{0x0000002D}={R1}
+0x0000032C:	call -140               	PC=0x00000100,MEM[0x00007FA8]=0x00000330
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002D
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002D
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x00000330
+0x00000330:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x00000334:	bun 0                   	PC=0x00000338
+0x00000338:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x0000033C:	cmpi r1,0               	SR=0x00000000
+0x00000340:	ble 16                  	PC=0x00000344
+0x00000344:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x00000348:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x0000034C:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x00000350:	movs r2,10              	R2=0x0000000A
+0x00000354:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x00000358:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000001
+0x0000035C:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000001
+0x00000360:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
+0x00000364:	push r1                 	MEM[0x00007FAC]{0x00000031}={R1}
+0x00000368:	call -155               	PC=0x00000100,MEM[0x00007FA8]=0x0000036C
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000031
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x0000036C
+0x0000036C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x00000370:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x00000374:	movs r2,10              	R2=0x0000000A
+0x00000378:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x0000037C:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
+0x00000380:	bun -19                 	PC=0x00000338
+0x00000338:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
+0x0000033C:	cmpi r1,0               	SR=0x00000040
+0x00000340:	ble 16                  	PC=0x00000384
+0x00000384:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x00000388:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x0000038C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000390:	ret                     	PC=MEM[0x00007FC4]=0x000004EC
+0x000004EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x000004F0:	movs r1,32              	R1=0x00000020
+0x000004F4:	push r1                 	MEM[0x00007FC8]{0x00000020}={R1}
+0x000004F8:	call -255               	PC=0x00000100,MEM[0x00007FC4]=0x000004FC
+0x00000100:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0x00000020
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FC4]=0x000004FC
+0x000004FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000500:	bun -21                 	PC=0x000004B0
+0x000004B0:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000002
+0x000004B4:	add r2,r1,r0            	R2=R1+R0=0x00000002,SR=0x00000000
+0x000004B8:	addi r1,r1,1            	R1=R1+0x00000001=0x00000003,SR=0x00000000
+0x000004BC:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000003
+0x000004C0:	bun -10                 	PC=0x0000049C
+0x0000049C:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000003
+0x000004A0:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x000004A4:	cmp r1,r2               	SR=0x00000011
+0x000004A8:	bge 22                  	PC=0x000004AC
+0x000004AC:	bun 5                   	PC=0x000004C4
+0x000004C4:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000003
+0x000004C8:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x000000000000000C,SR=0x00000011
+0x000004CC:	addi r2,r7,-4           	R2=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x000004D0:	add r2,r2,r1            	R2=R2+R1=0x00002002,SR=0x00000000
+0x000004D4:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x000004D8:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x000004DC:	s32 [r7-7],r2           	MEM[0x00007FCC]=R2=0xFFFFFFFF
+0x000004E0:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0xFFFFFFFF
+0x000004E4:	push r1                 	MEM[0x00007FC8]{0xFFFFFFFF}={R1}
+0x000004E8:	call -146               	PC=0x000002A4,MEM[0x00007FC4]=0x000004EC
+0x000002A4:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x000002A8:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x000002AC:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x000002B0:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x000002B4:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x000002B8:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
+0x000002BC:	movs r1,1               	R1=0x00000001
+0x000002C0:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x000002C4:	movs r1,0               	R1=0x00000000
+0x000002C8:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
+0x000002CC:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0xFFFFFFFF
+0x000002D0:	cmpi r1,0               	SR=0x00000011
+0x000002D4:	bge 6                   	PC=0x000002D8
+0x000002D8:	movs r1,1               	R1=0x00000001
+0x000002DC:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000001
+0x000002E0:	movs r1,0               	R1=0x00000000
+0x000002E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0xFFFFFFFF
+0x000002E8:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000001
+0x000002EC:	s32 [r7+4],r1           	MEM[0x00007FC8]=R1=0x00000001
+0x000002F0:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x000002F4:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x000002F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x000002FC:	cmpi r1,11              	SR=0x00000011
+0x00000300:	ble 5                   	PC=0x00000318
+0x00000318:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000001
+0x0000031C:	cmpi r1,0               	SR=0x00000000
+0x00000320:	ble 5                   	PC=0x00000324
+0x00000324:	movs r1,45              	R1=0x0000002D
+0x00000328:	push r1                 	MEM[0x00007FAC]{0x0000002D}={R1}
+0x0000032C:	call -140               	PC=0x00000100,MEM[0x00007FA8]=0x00000330
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002D
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002D
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x00000330
+0x00000330:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x00000334:	bun 0                   	PC=0x00000338
+0x00000338:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x0000033C:	cmpi r1,0               	SR=0x00000000
+0x00000340:	ble 16                  	PC=0x00000344
+0x00000344:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x00000348:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x0000034C:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x00000350:	movs r2,10              	R2=0x0000000A
+0x00000354:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x00000358:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000001
+0x0000035C:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000001
+0x00000360:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
+0x00000364:	push r1                 	MEM[0x00007FAC]{0x00000031}={R1}
+0x00000368:	call -155               	PC=0x00000100,MEM[0x00007FA8]=0x0000036C
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000031
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x0000036C
+0x0000036C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x00000370:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x00000374:	movs r2,10              	R2=0x0000000A
+0x00000378:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x0000037C:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
+0x00000380:	bun -19                 	PC=0x00000338
+0x00000338:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
+0x0000033C:	cmpi r1,0               	SR=0x00000040
+0x00000340:	ble 16                  	PC=0x00000384
+0x00000384:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x00000388:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x0000038C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000390:	ret                     	PC=MEM[0x00007FC4]=0x000004EC
+0x000004EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x000004F0:	movs r1,32              	R1=0x00000020
+0x000004F4:	push r1                 	MEM[0x00007FC8]{0x00000020}={R1}
+0x000004F8:	call -255               	PC=0x00000100,MEM[0x00007FC4]=0x000004FC
+0x00000100:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0x00000020
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FC4]=0x000004FC
+0x000004FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000500:	bun -21                 	PC=0x000004B0
+0x000004B0:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000003
+0x000004B4:	add r2,r1,r0            	R2=R1+R0=0x00000003,SR=0x00000000
+0x000004B8:	addi r1,r1,1            	R1=R1+0x00000001=0x00000004,SR=0x00000000
+0x000004BC:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000004
+0x000004C0:	bun -10                 	PC=0x0000049C
+0x0000049C:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000004
+0x000004A0:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x000004A4:	cmp r1,r2               	SR=0x00000011
+0x000004A8:	bge 22                  	PC=0x000004AC
+0x000004AC:	bun 5                   	PC=0x000004C4
+0x000004C4:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000004
+0x000004C8:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000010,SR=0x00000011
+0x000004CC:	addi r2,r7,-4           	R2=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x000004D0:	add r2,r2,r1            	R2=R2+R1=0x00002006,SR=0x00000000
+0x000004D4:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x000004D8:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x000004DC:	s32 [r7-7],r2           	MEM[0x00007FCC]=R2=0xFFFFFFFF
+0x000004E0:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0xFFFFFFFF
+0x000004E4:	push r1                 	MEM[0x00007FC8]{0xFFFFFFFF}={R1}
+0x000004E8:	call -146               	PC=0x000002A4,MEM[0x00007FC4]=0x000004EC
+0x000002A4:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x000002A8:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x000002AC:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x000002B0:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x000002B4:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x000002B8:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
+0x000002BC:	movs r1,1               	R1=0x00000001
+0x000002C0:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x000002C4:	movs r1,0               	R1=0x00000000
+0x000002C8:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
+0x000002CC:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0xFFFFFFFF
+0x000002D0:	cmpi r1,0               	SR=0x00000011
+0x000002D4:	bge 6                   	PC=0x000002D8
+0x000002D8:	movs r1,1               	R1=0x00000001
+0x000002DC:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000001
+0x000002E0:	movs r1,0               	R1=0x00000000
+0x000002E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0xFFFFFFFF
+0x000002E8:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000001
+0x000002EC:	s32 [r7+4],r1           	MEM[0x00007FC8]=R1=0x00000001
+0x000002F0:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x000002F4:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x000002F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x000002FC:	cmpi r1,11              	SR=0x00000011
+0x00000300:	ble 5                   	PC=0x00000318
+0x00000318:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000001
+0x0000031C:	cmpi r1,0               	SR=0x00000000
+0x00000320:	ble 5                   	PC=0x00000324
+0x00000324:	movs r1,45              	R1=0x0000002D
+0x00000328:	push r1                 	MEM[0x00007FAC]{0x0000002D}={R1}
+0x0000032C:	call -140               	PC=0x00000100,MEM[0x00007FA8]=0x00000330
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002D
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002D
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x00000330
+0x00000330:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x00000334:	bun 0                   	PC=0x00000338
+0x00000338:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x0000033C:	cmpi r1,0               	SR=0x00000000
+0x00000340:	ble 16                  	PC=0x00000344
+0x00000344:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x00000348:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x0000034C:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x00000350:	movs r2,10              	R2=0x0000000A
+0x00000354:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x00000358:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000001
+0x0000035C:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000001
+0x00000360:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
+0x00000364:	push r1                 	MEM[0x00007FAC]{0x00000031}={R1}
+0x00000368:	call -155               	PC=0x00000100,MEM[0x00007FA8]=0x0000036C
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000031
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x0000036C
+0x0000036C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x00000370:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x00000374:	movs r2,10              	R2=0x0000000A
+0x00000378:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x0000037C:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
+0x00000380:	bun -19                 	PC=0x00000338
+0x00000338:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
+0x0000033C:	cmpi r1,0               	SR=0x00000040
+0x00000340:	ble 16                  	PC=0x00000384
+0x00000384:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x00000388:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x0000038C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000390:	ret                     	PC=MEM[0x00007FC4]=0x000004EC
+0x000004EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x000004F0:	movs r1,32              	R1=0x00000020
+0x000004F4:	push r1                 	MEM[0x00007FC8]{0x00000020}={R1}
+0x000004F8:	call -255               	PC=0x00000100,MEM[0x00007FC4]=0x000004FC
+0x00000100:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0x00000020
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FC4]=0x000004FC
+0x000004FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000500:	bun -21                 	PC=0x000004B0
+0x000004B0:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000004
+0x000004B4:	add r2,r1,r0            	R2=R1+R0=0x00000004,SR=0x00000000
+0x000004B8:	addi r1,r1,1            	R1=R1+0x00000001=0x00000005,SR=0x00000000
+0x000004BC:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000005
+0x000004C0:	bun -10                 	PC=0x0000049C
+0x0000049C:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000005
+0x000004A0:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x000004A4:	cmp r1,r2               	SR=0x00000040
+0x000004A8:	bge 22                  	PC=0x00000504
+0x00000504:	l32 r2,[r7-6]           	R2=MEM[0x00007FD0]=0x00000005
+0x00000508:	add sp,r6,r0            	SP=R6+R0=0x00007FE8,SR=0x00000000
+0x0000050C:	pop r7                  	{R7}=MEM[0x00007FEC]{0x00001FFD}
+0x00000510:	pop r6                  	{R6}=MEM[0x00007FF0]{0x00007FF4}
+0x00000514:	ret                     	PC=MEM[0x00007FF4]=0x00000028
+0x00000028:	call -9                 	PC=0x00000008,MEM[0x00007FF4]=0x0000002C
+0x00000008:	int 0                   	CR=0x00000000,PC=0x00000000
+[TERMINAL]
+-1 -1 -1 -1 -1 
+-1 -1 -1 -1 -1 
+[END OF SIMULATION]
\ No newline at end of file
diff --git a/examples/out/intep/poxim-terminal.interp b/examples/out/intep/poxim-terminal.interp
new file mode 100644
index 00000000..9f7f7c84
--- /dev/null
+++ b/examples/out/intep/poxim-terminal.interp
@@ -0,0 +1,66 @@
+[START OF SIMULATION]
+0x00000000:	mov sp,32764            	SP=0x00007FFC
+0x00000004:	bun 1                   	PC=0x0000000C
+0x0000000C:	push r6                 	MEM[0x00007FFC]{0x00000000}={R6}
+0x00000010:	push r7                 	MEM[0x00007FF8]{0x00000000}={R7}
+0x00000014:	add r6,sp,r0            	R6=SP+R0=0x00007FF4,SR=0x00000000
+0x00000018:	add r7,r6,r0            	R7=R6+R0=0x00007FF4,SR=0x00000000
+0x0000001C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFD,SR=0x00000000
+0x00000020:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FF4,SR=0x00000000
+0x00000024:	call 54                 	PC=0x00000100,MEM[0x00007FF4]=0x00000028
+0x00000100:	push r6                 	MEM[0x00007FF0]{0x00007FF4}={R6}
+0x00000104:	push r7                 	MEM[0x00007FEC]{0x00001FFD}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FE8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FE8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFA,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FE8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	movs r2,101             	R2=0x00000065
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000065
+0x00000128:	mov r8,1024             	R8=0x00000400
+0x0000012C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000130:	movs r2,117             	R2=0x00000075
+0x00000134:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000075
+0x00000138:	mov r8,1024             	R8=0x00000400
+0x0000013C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000140:	movs r2,32              	R2=0x00000020
+0x00000144:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
+0x00000148:	mov r8,1024             	R8=0x00000400
+0x0000014C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000150:	movs r2,116             	R2=0x00000074
+0x00000154:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000074
+0x00000158:	mov r8,1024             	R8=0x00000400
+0x0000015C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000160:	movs r2,101             	R2=0x00000065
+0x00000164:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000065
+0x00000168:	mov r8,1024             	R8=0x00000400
+0x0000016C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000170:	movs r2,32              	R2=0x00000020
+0x00000174:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
+0x00000178:	mov r8,1024             	R8=0x00000400
+0x0000017C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000180:	movs r2,97              	R2=0x00000061
+0x00000184:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000061
+0x00000188:	mov r8,1024             	R8=0x00000400
+0x0000018C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000190:	movs r2,109             	R2=0x0000006D
+0x00000194:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000006D
+0x00000198:	mov r8,1024             	R8=0x00000400
+0x0000019C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x000001A0:	movs r2,111             	R2=0x0000006F
+0x000001A4:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000006F
+0x000001A8:	mov r8,1024             	R8=0x00000400
+0x000001AC:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x000001B0:	movs r2,33              	R2=0x00000021
+0x000001B4:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000021
+0x000001B8:	movs r2,0               	R2=0x00000000
+0x000001BC:	add sp,r6,r0            	SP=R6+R0=0x00007FE8,SR=0x00000000
+0x000001C0:	pop r7                  	{R7}=MEM[0x00007FEC]{0x00001FFD}
+0x000001C4:	pop r6                  	{R6}=MEM[0x00007FF0]{0x00007FF4}
+0x000001C8:	ret                     	PC=MEM[0x00007FF4]=0x00000028
+0x00000028:	call -9                 	PC=0x00000008,MEM[0x00007FF4]=0x0000002C
+0x00000008:	int 0                   	CR=0x00000000,PC=0x00000000
+[TERMINAL]
+eu te amo!
+[END OF SIMULATION]
\ No newline at end of file
diff --git a/examples/out/intep/poxim-while.interp b/examples/out/intep/poxim-while.interp
new file mode 100644
index 00000000..250d520d
--- /dev/null
+++ b/examples/out/intep/poxim-while.interp
@@ -0,0 +1,886 @@
+[START OF SIMULATION]
+0x00000000:	mov sp,32764            	SP=0x00007FFC
+0x00000004:	bun 1                   	PC=0x0000000C
+0x0000000C:	push r6                 	MEM[0x00007FFC]{0x00000000}={R6}
+0x00000010:	push r7                 	MEM[0x00007FF8]{0x00000000}={R7}
+0x00000014:	add r6,sp,r0            	R6=SP+R0=0x00007FF4,SR=0x00000000
+0x00000018:	add r7,r6,r0            	R7=R6+R0=0x00007FF4,SR=0x00000000
+0x0000001C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFD,SR=0x00000000
+0x00000020:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FF4,SR=0x00000000
+0x00000024:	call 75                 	PC=0x00000154,MEM[0x00007FF4]=0x00000028
+0x00000154:	push r6                 	MEM[0x00007FF0]{0x00007FF4}={R6}
+0x00000158:	push r7                 	MEM[0x00007FEC]{0x00001FFD}={R7}
+0x0000015C:	add r6,sp,r0            	R6=SP+R0=0x00007FE8,SR=0x00000000
+0x00000160:	add r7,r6,r0            	R7=R6+R0=0x00007FE8,SR=0x00000000
+0x00000164:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFA,SR=0x00000000
+0x00000168:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FE4,SR=0x00000000
+0x0000016C:	movs r1,105             	R1=0x00000069
+0x00000170:	s32 [r7+0],r1           	MEM[0x00007FE8]=R1=0x00000069
+0x00000174:	l32 r1,[r7+0]           	R1=MEM[0x00007FE8]=0x00000069
+0x00000178:	push r1                 	MEM[0x00007FE4]{0x00000069}={R1}
+0x0000017C:	call -32                	PC=0x00000100,MEM[0x00007FE0]=0x00000180
+0x00000100:	push r6                 	MEM[0x00007FDC]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FD8]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FD4,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FD4,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF5,SR=0x00000000
+0x00000114:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FD0,SR=0x00000000
+0x00000118:	movs r1,0               	R1=0x00000000
+0x0000011C:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000000
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000000
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000000
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000001,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000001
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000001
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000001
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000002,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000002
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000002
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000002
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000003,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000003
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000003
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000003
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000004,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000004
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000004
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000004
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000005,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000005
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000005
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000005
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000006,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000006
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000006
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000006
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000007,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000007
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000007
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000007
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000008,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000008
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000008
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000008
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000009,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000009
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000009
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000009
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000A,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000A
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000A
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000A
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000B,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000B
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000B
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000B
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000C,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000C
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000C
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000C
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000D,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000D
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000D
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000D
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000E,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000E
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000E
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000E
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000F,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000F
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000F
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000F
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000010,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000010
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000010
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000010
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000011,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000011
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000011
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000011
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000012,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000012
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000012
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000012
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000013,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000013
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000013
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000013
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000014,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000014
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000014
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000014
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000015,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000015
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000015
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000015
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000016,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000016
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000016
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000016
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000017,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000017
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000017
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000017
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000018,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000018
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000018
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000018
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000019,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000019
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000019
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000019
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000001A,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000001A
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001A
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001A
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000001B,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000001B
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001B
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001B
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000001C,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000001C
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001C
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001C
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000001D,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000001D
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001D
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001D
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000001E,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000001E
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001E
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001E
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000001F,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000001F
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001F
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001F
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000020,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000020
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000020
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000020
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000021,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000021
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000021
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000021
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000022,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000022
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000022
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000022
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000023,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000023
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000023
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000023
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000024,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000024
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000024
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000024
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000025,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000025
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000025
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000025
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000026,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000026
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000026
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000026
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000027,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000027
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000027
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000027
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000028,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000028
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000028
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000028
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000029,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000029
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000029
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000029
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000002A,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000002A
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002A
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002A
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000002B,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000002B
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002B
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002B
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000002C,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000002C
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002C
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002C
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000002D,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000002D
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002D
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002D
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000002E,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000002E
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002E
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002E
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000002F,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000002F
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002F
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002F
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000030,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000030
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000030
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000030
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000031,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000031
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000031
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000031
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000032,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000032
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000032
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000032
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000033,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000033
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000033
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000033
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000034,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000034
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000034
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000034
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000035,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000035
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000035
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000035
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000036,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000036
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000036
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000036
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000037,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000037
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000037
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000037
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000038,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000038
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000038
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000038
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000039,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000039
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000039
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000039
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000003A,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000003A
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003A
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003A
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000003B,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000003B
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003B
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003B
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000003C,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000003C
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003C
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003C
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000003D,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000003D
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003D
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003D
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000003E,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000003E
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003E
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003E
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000003F,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000003F
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003F
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003F
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000040,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000040
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000040
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000040
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000041,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000041
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000041
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000041
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000042,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000042
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000042
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000042
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000043,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000043
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000043
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000043
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000044,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000044
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000044
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000044
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000045,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000045
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000045
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000045
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000046,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000046
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000046
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000046
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000047,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000047
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000047
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000047
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000048,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000048
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000048
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000048
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000049,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000049
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000049
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000049
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000004A,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000004A
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004A
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004A
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000004B,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000004B
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004B
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004B
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000004C,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000004C
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004C
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004C
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000004D,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000004D
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004D
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004D
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000004E,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000004E
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004E
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004E
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000004F,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000004F
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004F
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004F
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000050,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000050
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000050
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000050
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000051,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000051
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000051
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000051
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000052,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000052
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000052
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000052
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000053,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000053
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000053
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000053
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000054,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000054
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000054
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000054
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000055,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000055
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000055
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000055
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000056,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000056
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000056
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000056
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000057,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000057
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000057
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000057
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000058,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000058
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000058
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000058
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000059,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000059
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000059
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000059
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000005A,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000005A
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005A
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005A
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000005B,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000005B
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005B
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005B
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000005C,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000005C
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005C
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005C
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000005D,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000005D
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005D
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005D
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000005E,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000005E
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005E
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005E
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x0000005F,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000005F
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005F
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005F
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000060,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000060
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000060
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000060
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000061,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000061
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000061
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000061
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000062,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000062
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000062
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000062
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000063,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000063
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000063
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000063
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000064,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000064
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000064
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000064
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000065,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000065
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000065
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000065
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000066,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000066
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000066
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000066
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000067,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000067
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000067
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000067
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000068,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000068
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000068
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000011
+0x0000012C:	bge 4                   	PC=0x00000130
+0x00000130:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000068
+0x00000134:	addi r1,r1,1            	R1=R1+0x00000001=0x00000069,SR=0x00000000
+0x00000138:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000069
+0x0000013C:	bun -8                  	PC=0x00000120
+0x00000120:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000069
+0x00000124:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
+0x00000128:	cmp r1,r2               	SR=0x00000040
+0x0000012C:	bge 4                   	PC=0x00000140
+0x00000140:	l32 r2,[r7+0]           	R2=MEM[0x00007FD4]=0x00000069
+0x00000144:	add sp,r6,r0            	SP=R6+R0=0x00007FD4,SR=0x00000000
+0x00000148:	pop r7                  	{R7}=MEM[0x00007FD8]{0x00001FFA}
+0x0000014C:	pop r6                  	{R6}=MEM[0x00007FDC]{0x00007FE8}
+0x00000150:	ret                     	PC=MEM[0x00007FE0]=0x00000180
+0x00000180:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FE4,SR=0x00000000
+0x00000184:	add sp,r6,r0            	SP=R6+R0=0x00007FE8,SR=0x00000000
+0x00000188:	pop r7                  	{R7}=MEM[0x00007FEC]{0x00001FFD}
+0x0000018C:	pop r6                  	{R6}=MEM[0x00007FF0]{0x00007FF4}
+0x00000190:	ret                     	PC=MEM[0x00007FF4]=0x00000028
+0x00000028:	call -9                 	PC=0x00000008,MEM[0x00007FF4]=0x0000002C
+0x00000008:	int 0                   	CR=0x00000000,PC=0x00000000
+[END OF SIMULATION]
\ No newline at end of file
diff --git a/examples/out/poxim-ex1.interp b/examples/out/poxim-ex1.interp
deleted file mode 100644
index fbf7ef6f..00000000
--- a/examples/out/poxim-ex1.interp
+++ /dev/null
@@ -1,63 +0,0 @@
-[START OF SIMULATION]
-0x00000000:	mov sp,32764            	SP=0x00007FFC
-0x00000004:	bun 1                   	PC=0x0000000C
-0x0000000C:	push r6                 	MEM[0x00007FFC]{0x00000000}={R6}
-0x00000010:	push r7                 	MEM[0x00007FF8]{0x00000000}={R7}
-0x00000014:	add r6,sp,r0            	R6=SP+R0=0x00007FF4,SR=0x00000000
-0x00000018:	add r7,r6,r0            	R7=R6+R0=0x00007FF4,SR=0x00000000
-0x0000001C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFD,SR=0x00000000
-0x00000020:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FF4,SR=0x00000000
-0x00000024:	call 58                 	PC=0x00000110,MEM[0x00007FF4]=0x00000028
-0x00000110:	push r6                 	MEM[0x00007FF0]{0x00007FF4}={R6}
-0x00000114:	push r7                 	MEM[0x00007FEC]{0x00001FFD}={R7}
-0x00000118:	add r6,sp,r0            	R6=SP+R0=0x00007FE8,SR=0x00000000
-0x0000011C:	add r7,r6,r0            	R7=R6+R0=0x00007FE8,SR=0x00000000
-0x00000120:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFA,SR=0x00000000
-0x00000124:	subi sp,sp,8            	SP=SP-0x00000008=0x00007FE0,SR=0x00000000
-0x00000128:	mov r1,2                	R1=0x00000002
-0x0000012C:	s32 [r7+0],r1           	MEM[0x00007FE8]=R1=0x00000002
-0x00000130:	mov r1,5                	R1=0x00000005
-0x00000134:	push r1                 	MEM[0x00007FE0]{0x00000005}={R1}
-0x00000138:	mov r1,4                	R1=0x00000004
-0x0000013C:	push r1                 	MEM[0x00007FDC]{0x00000004}={R1}
-0x00000140:	mov r1,3                	R1=0x00000003
-0x00000144:	push r1                 	MEM[0x00007FD8]{0x00000003}={R1}
-0x00000148:	mov r1,2                	R1=0x00000002
-0x0000014C:	push r1                 	MEM[0x00007FD4]{0x00000002}={R1}
-0x00000150:	mov r1,1                	R1=0x00000001
-0x00000154:	push r1                 	MEM[0x00007FD0]{0x00000001}={R1}
-0x00000158:	call -39                	PC=0x000000C0,MEM[0x00007FCC]=0x0000015C
-0x000000C0:	push r6                 	MEM[0x00007FC8]{0x00007FE8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FC4]{0x00001FFA}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FC0,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FC0,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF0,SR=0x00000000
-0x000000D4:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FC0,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FD0]=0x00000001
-0x000000DC:	l32 r2,[r7+5]           	R2=MEM[0x00007FD4]=0x00000002
-0x000000E0:	add r1,r1,r2            	R1=R1+R2=0x00000003,SR=0x00000000
-0x000000E4:	l32 r2,[r7+6]           	R2=MEM[0x00007FD8]=0x00000003
-0x000000E8:	add r1,r1,r2            	R1=R1+R2=0x00000006,SR=0x00000000
-0x000000EC:	l32 r2,[r7+7]           	R2=MEM[0x00007FDC]=0x00000004
-0x000000F0:	add r1,r1,r2            	R1=R1+R2=0x0000000A,SR=0x00000000
-0x000000F4:	l32 r2,[r7+8]           	R2=MEM[0x00007FE0]=0x00000005
-0x000000F8:	sub r1,r1,r2            	R1=R1-R2=0x00000005,SR=0x00000000
-0x000000FC:	add r2,r1,r0            	R2=R1+R0=0x00000005,SR=0x00000000
-0x00000100:	add sp,r6,r0            	SP=R6+R0=0x00007FC0,SR=0x00000000
-0x00000104:	pop r7                  	{R7}=MEM[0x00007FC4]{0x00001FFA}
-0x00000108:	pop r6                  	{R6}=MEM[0x00007FC8]{0x00007FE8}
-0x0000010C:	ret                     	PC=MEM[0x00007FCC]=0x0000015C
-0x0000015C:	addi sp,sp,20           	SP=SP+0x00000014=0x00007FE0,SR=0x00000000
-0x00000160:	subi r2,r2,69           	R2=R2-0x00000045=0xFFFFFFC0,SR=0x00000011
-0x00000164:	s32 [r7-1],r2           	MEM[0x00007FE4]=R2=0xFFFFFFC0
-0x00000168:	l32 r1,[r7+0]           	R1=MEM[0x00007FE8]=0x00000002
-0x0000016C:	l32 r2,[r7-1]           	R2=MEM[0x00007FE4]=0xFFFFFFC0
-0x00000170:	add r1,r1,r2            	R1=R1+R2=0xFFFFFFC2,SR=0x00000010
-0x00000174:	add r2,r1,r0            	R2=R1+R0=0xFFFFFFC2,SR=0x00000010
-0x00000178:	add sp,r6,r0            	SP=R6+R0=0x00007FE8,SR=0x00000000
-0x0000017C:	pop r7                  	{R7}=MEM[0x00007FEC]{0x00001FFD}
-0x00000180:	pop r6                  	{R6}=MEM[0x00007FF0]{0x00007FF4}
-0x00000184:	ret                     	PC=MEM[0x00007FF4]=0x00000028
-0x00000028:	call -9                 	PC=0x00000008,MEM[0x00007FF4]=0x0000002C
-0x00000008:	int 0                   	CR=0x00000000,PC=0x00000000
-[END OF SIMULATION]
\ No newline at end of file
diff --git a/examples/out/poxim-ex1.poximdump b/examples/out/poxim-ex1.poximdump
deleted file mode 100644
index 642de7eb..00000000
--- a/examples/out/poxim-ex1.poximdump
+++ /dev/null
@@ -1,99 +0,0 @@
-   0:    03 c0 7f fc       mov    sp, 32764
-   4:    dc 00 00 01       bun    1        # 0xc
-   8:    fc 00 00 00       int    0
-   c:    28 00 01 80       push   r6
-  10:    28 00 01 c0       push   r7
-  14:    08 de 00 00       mov    r6, sp
-  18:    08 e6 00 00       mov    r7, r6
-  1c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  20:    4f de 00 00       subi   sp, sp, 0
-  24:    e4 00 00 3a       call   58<<2        # 0x110
-  28:    e7 ff ff f7       call   -9<<2        # 0x8
-  2c:    0b c6 00 00       mov    sp, r6
-  30:    2c 00 01 c0       pop    r7
-  34:    2c 00 01 80       pop    r6
-  38:    7c 00 00 00       ret   
-  3c:    28 00 01 80       push   r6
-  40:    28 00 01 c0       push   r7
-  44:    08 de 00 00       mov    r6, sp
-  48:    08 e6 00 00       mov    r7, r6
-  4c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  50:    4f de 00 08       subi   sp, sp, 8
-  54:    68 27 00 04       l32    r1, [r7+4]<<2
-  58:    74 27 00 00       s32    [r7+0]<<2, r1
-  5c:    00 20 00 00       mov    r1, 0
-  60:    74 27 ff ff       s32    [r7-1]<<2, r1
-  64:    68 27 00 18       l32    r1, [r7+24]<<2
-  68:    10 01 0d 01       srl    r0, r1, r1, 1
-  6c:    68 47 ff fc       l32    r2, [r7-4]<<2
-  70:    14 02 08 00       cmp    r2, r1
-  74:    a8 00 00 0d       bae    13        # 0xac
-  78:    dc 00 00 05       bun    5        # 0x90
-  7c:    68 27 ff fc       l32    r1, [r7-4]<<2
-  80:    08 41 00 00       mov    r2, r1
-  84:    48 21 00 01       addi   r1, r1, 1
-  88:    74 27 ff ff       s32    [r7-1]<<2, r1
-  8c:    df ff ff f5       bun    -11        # 0x64
-  90:    68 27 00 00       l32    r1, [r7+0]<<2
-  94:    08 41 00 00       mov    r2, r1
-  98:    48 21 00 01       addi   r1, r1, 1
-  9c:    74 27 00 00       s32    [r7+0]<<2, r1
-  a0:    68 27 00 05       l32    r1, [r7+5]<<2
-  a4:    6c 22 00 00       s8     [r2+0], r1
-  a8:    df ff ff f4       bun    -12        # 0x7c
-  ac:    68 47 00 04       l32    r2, [r7+4]<<2
-  b0:    0b c6 00 00       mov    sp, r6
-  b4:    2c 00 01 c0       pop    r7
-  b8:    2c 00 01 80       pop    r6
-  bc:    7c 00 00 00       ret   
-  c0:    28 00 01 80       push   r6
-  c4:    28 00 01 c0       push   r7
-  c8:    08 de 00 00       mov    r6, sp
-  cc:    08 e6 00 00       mov    r7, r6
-  d0:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  d4:    4f de 00 00       subi   sp, sp, 0
-  d8:    68 27 00 04       l32    r1, [r7+4]<<2
-  dc:    68 47 00 05       l32    r2, [r7+5]<<2
-  e0:    08 21 10 00       add    r1, r1, r2
-  e4:    68 47 00 06       l32    r2, [r7+6]<<2
-  e8:    08 21 10 00       add    r1, r1, r2
-  ec:    68 47 00 07       l32    r2, [r7+7]<<2
-  f0:    08 21 10 00       add    r1, r1, r2
-  f4:    68 47 00 08       l32    r2, [r7+8]<<2
-  f8:    0c 21 10 00       sub    r1, r1, r2
-  fc:    08 41 00 00       mov    r2, r1
- 100:    0b c6 00 00       mov    sp, r6
- 104:    2c 00 01 c0       pop    r7
- 108:    2c 00 01 80       pop    r6
- 10c:    7c 00 00 00       ret   
- 110:    28 00 01 80       push   r6
- 114:    28 00 01 c0       push   r7
- 118:    08 de 00 00       mov    r6, sp
- 11c:    08 e6 00 00       mov    r7, r6
- 120:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
- 124:    4f de 00 08       subi   sp, sp, 8
- 128:    00 20 00 02       mov    r1, 2
- 12c:    74 27 00 00       s32    [r7+0]<<2, r1
- 130:    00 20 00 05       mov    r1, 5
- 134:    28 00 00 40       push   r1
- 138:    00 20 00 04       mov    r1, 4
- 13c:    28 00 00 40       push   r1
- 140:    00 20 00 03       mov    r1, 3
- 144:    28 00 00 40       push   r1
- 148:    00 20 00 02       mov    r1, 2
- 14c:    28 00 00 40       push   r1
- 150:    00 20 00 01       mov    r1, 1
- 154:    28 00 00 40       push   r1
- 158:    e7 ff ff d9       call   -39<<2        # 0xc0
- 15c:    4b de 00 14       addi   sp, sp, 20
- 160:    4c 42 00 45       subi   r2, r2, 69
- 164:    74 47 ff ff       s32    [r7-1]<<2, r2
- 168:    68 27 00 00       l32    r1, [r7+0]<<2
- 16c:    68 47 ff ff       l32    r2, [r7-1]<<2
- 170:    08 21 10 00       add    r1, r1, r2
- 174:    08 41 00 00       mov    r2, r1
- 178:    0b c6 00 00       mov    sp, r6
- 17c:    2c 00 01 c0       pop    r7
- 180:    2c 00 01 80       pop    r6
- 184:    7c 00 00 00       ret   
-  ...
diff --git a/examples/out/poxim-ex2.interp b/examples/out/poxim-ex2.interp
deleted file mode 100644
index 9e992e9e..00000000
--- a/examples/out/poxim-ex2.interp
+++ /dev/null
@@ -1,83 +0,0 @@
-[START OF SIMULATION]
-0x00000000:	mov sp,32764            	SP=0x00007FFC
-0x00000004:	bun 1                   	PC=0x0000000C
-0x0000000C:	push r6                 	MEM[0x00007FFC]{0x00000000}={R6}
-0x00000010:	push r7                 	MEM[0x00007FF8]{0x00000000}={R7}
-0x00000014:	add r6,sp,r0            	R6=SP+R0=0x00007FF4,SR=0x00000000
-0x00000018:	add r7,r6,r0            	R7=R6+R0=0x00007FF4,SR=0x00000000
-0x0000001C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFD,SR=0x00000000
-0x00000020:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FF4,SR=0x00000000
-0x00000024:	call 72                 	PC=0x00000148,MEM[0x00007FF4]=0x00000028
-0x00000148:	push r6                 	MEM[0x00007FF0]{0x00007FF4}={R6}
-0x0000014C:	push r7                 	MEM[0x00007FEC]{0x00001FFD}={R7}
-0x00000150:	add r6,sp,r0            	R6=SP+R0=0x00007FE8,SR=0x00000000
-0x00000154:	add r7,r6,r0            	R7=R6+R0=0x00007FE8,SR=0x00000000
-0x00000158:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFA,SR=0x00000000
-0x0000015C:	subi sp,sp,8            	SP=SP-0x00000008=0x00007FE0,SR=0x00000000
-0x00000160:	mov r1,2                	R1=0x00000002
-0x00000164:	s32 [r7+0],r1           	MEM[0x00007FE8]=R1=0x00000002
-0x00000168:	mov r1,5                	R1=0x00000005
-0x0000016C:	push r1                 	MEM[0x00007FE0]{0x00000005}={R1}
-0x00000170:	mov r1,4                	R1=0x00000004
-0x00000174:	push r1                 	MEM[0x00007FDC]{0x00000004}={R1}
-0x00000178:	mov r1,3                	R1=0x00000003
-0x0000017C:	push r1                 	MEM[0x00007FD8]{0x00000003}={R1}
-0x00000180:	mov r1,2                	R1=0x00000002
-0x00000184:	push r1                 	MEM[0x00007FD4]{0x00000002}={R1}
-0x00000188:	mov r1,1                	R1=0x00000001
-0x0000018C:	push r1                 	MEM[0x00007FD0]{0x00000001}={R1}
-0x00000190:	call -39                	PC=0x000000F8,MEM[0x00007FCC]=0x00000194
-0x000000F8:	push r6                 	MEM[0x00007FC8]{0x00007FE8}={R6}
-0x000000FC:	push r7                 	MEM[0x00007FC4]{0x00001FFA}={R7}
-0x00000100:	add r6,sp,r0            	R6=SP+R0=0x00007FC0,SR=0x00000000
-0x00000104:	add r7,r6,r0            	R7=R6+R0=0x00007FC0,SR=0x00000000
-0x00000108:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF0,SR=0x00000000
-0x0000010C:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FC0,SR=0x00000000
-0x00000110:	l32 r1,[r7+4]           	R1=MEM[0x00007FD0]=0x00000001
-0x00000114:	l32 r2,[r7+5]           	R2=MEM[0x00007FD4]=0x00000002
-0x00000118:	add r1,r1,r2            	R1=R1+R2=0x00000003,SR=0x00000000
-0x0000011C:	l32 r2,[r7+6]           	R2=MEM[0x00007FD8]=0x00000003
-0x00000120:	add r1,r1,r2            	R1=R1+R2=0x00000006,SR=0x00000000
-0x00000124:	l32 r2,[r7+7]           	R2=MEM[0x00007FDC]=0x00000004
-0x00000128:	add r1,r1,r2            	R1=R1+R2=0x0000000A,SR=0x00000000
-0x0000012C:	l32 r2,[r7+8]           	R2=MEM[0x00007FE0]=0x00000005
-0x00000130:	sub r1,r1,r2            	R1=R1-R2=0x00000005,SR=0x00000000
-0x00000134:	add r2,r1,r0            	R2=R1+R0=0x00000005,SR=0x00000000
-0x00000138:	add sp,r6,r0            	SP=R6+R0=0x00007FC0,SR=0x00000000
-0x0000013C:	pop r7                  	{R7}=MEM[0x00007FC4]{0x00001FFA}
-0x00000140:	pop r6                  	{R6}=MEM[0x00007FC8]{0x00007FE8}
-0x00000144:	ret                     	PC=MEM[0x00007FCC]=0x00000194
-0x00000194:	addi sp,sp,20           	SP=SP+0x00000014=0x00007FE0,SR=0x00000000
-0x00000198:	subi r2,r2,69           	R2=R2-0x00000045=0xFFFFFFC0,SR=0x00000011
-0x0000019C:	s32 [r7-1],r2           	MEM[0x00007FE4]=R2=0xFFFFFFC0
-0x000001A0:	l32 r1,[r7-1]           	R1=MEM[0x00007FE4]=0xFFFFFFC0
-0x000001A4:	push r1                 	MEM[0x00007FE0]{0xFFFFFFC0}={R1}
-0x000001A8:	l32 r1,[r7+0]           	R1=MEM[0x00007FE8]=0x00000002
-0x000001AC:	push r1                 	MEM[0x00007FDC]{0x00000002}={R1}
-0x000001B0:	call -61                	PC=0x000000C0,MEM[0x00007FD8]=0x000001B4
-0x000000C0:	push r6                 	MEM[0x00007FD4]{0x00007FE8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FD0]{0x00001FFA}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FCC,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FCC,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF3,SR=0x00000000
-0x000000D4:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FCC,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FDC]=0x00000002
-0x000000DC:	l32 r2,[r7+5]           	R2=MEM[0x00007FE0]=0xFFFFFFC0
-0x000000E0:	sub r1,r1,r2            	R1=R1-R2=0x00000042,SR=0x00000001
-0x000000E4:	add r2,r1,r0            	R2=R1+R0=0x00000042,SR=0x00000000
-0x000000E8:	add sp,r6,r0            	SP=R6+R0=0x00007FCC,SR=0x00000000
-0x000000EC:	pop r7                  	{R7}=MEM[0x00007FD0]{0x00001FFA}
-0x000000F0:	pop r6                  	{R6}=MEM[0x00007FD4]{0x00007FE8}
-0x000000F4:	ret                     	PC=MEM[0x00007FD8]=0x000001B4
-0x000001B4:	addi sp,sp,8            	SP=SP+0x00000008=0x00007FE0,SR=0x00000000
-0x000001B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FE8]=0x00000002
-0x000001BC:	l32 r2,[r7-1]           	R2=MEM[0x00007FE4]=0xFFFFFFC0
-0x000001C0:	add r1,r1,r2            	R1=R1+R2=0xFFFFFFC2,SR=0x00000010
-0x000001C4:	add r2,r1,r0            	R2=R1+R0=0xFFFFFFC2,SR=0x00000010
-0x000001C8:	add sp,r6,r0            	SP=R6+R0=0x00007FE8,SR=0x00000000
-0x000001CC:	pop r7                  	{R7}=MEM[0x00007FEC]{0x00001FFD}
-0x000001D0:	pop r6                  	{R6}=MEM[0x00007FF0]{0x00007FF4}
-0x000001D4:	ret                     	PC=MEM[0x00007FF4]=0x00000028
-0x00000028:	call -9                 	PC=0x00000008,MEM[0x00007FF4]=0x0000002C
-0x00000008:	int 0                   	CR=0x00000000,PC=0x00000000
-[END OF SIMULATION]
\ No newline at end of file
diff --git a/examples/out/poxim-ex2.poximdump b/examples/out/poxim-ex2.poximdump
deleted file mode 100644
index ad55a59a..00000000
--- a/examples/out/poxim-ex2.poximdump
+++ /dev/null
@@ -1,119 +0,0 @@
-   0:    03 c0 7f fc       mov    sp, 32764
-   4:    dc 00 00 01       bun    1        # 0xc
-   8:    fc 00 00 00       int    0
-   c:    28 00 01 80       push   r6
-  10:    28 00 01 c0       push   r7
-  14:    08 de 00 00       mov    r6, sp
-  18:    08 e6 00 00       mov    r7, r6
-  1c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  20:    4f de 00 00       subi   sp, sp, 0
-  24:    e4 00 00 48       call   72<<2        # 0x148
-  28:    e7 ff ff f7       call   -9<<2        # 0x8
-  2c:    0b c6 00 00       mov    sp, r6
-  30:    2c 00 01 c0       pop    r7
-  34:    2c 00 01 80       pop    r6
-  38:    7c 00 00 00       ret   
-  3c:    28 00 01 80       push   r6
-  40:    28 00 01 c0       push   r7
-  44:    08 de 00 00       mov    r6, sp
-  48:    08 e6 00 00       mov    r7, r6
-  4c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  50:    4f de 00 08       subi   sp, sp, 8
-  54:    68 27 00 04       l32    r1, [r7+4]<<2
-  58:    74 27 00 00       s32    [r7+0]<<2, r1
-  5c:    00 20 00 00       mov    r1, 0
-  60:    74 27 ff ff       s32    [r7-1]<<2, r1
-  64:    68 27 00 18       l32    r1, [r7+24]<<2
-  68:    10 01 0d 01       srl    r0, r1, r1, 1
-  6c:    68 47 ff fc       l32    r2, [r7-4]<<2
-  70:    14 02 08 00       cmp    r2, r1
-  74:    a8 00 00 0d       bae    13        # 0xac
-  78:    dc 00 00 05       bun    5        # 0x90
-  7c:    68 27 ff fc       l32    r1, [r7-4]<<2
-  80:    08 41 00 00       mov    r2, r1
-  84:    48 21 00 01       addi   r1, r1, 1
-  88:    74 27 ff ff       s32    [r7-1]<<2, r1
-  8c:    df ff ff f5       bun    -11        # 0x64
-  90:    68 27 00 00       l32    r1, [r7+0]<<2
-  94:    08 41 00 00       mov    r2, r1
-  98:    48 21 00 01       addi   r1, r1, 1
-  9c:    74 27 00 00       s32    [r7+0]<<2, r1
-  a0:    68 27 00 05       l32    r1, [r7+5]<<2
-  a4:    6c 22 00 00       s8     [r2+0], r1
-  a8:    df ff ff f4       bun    -12        # 0x7c
-  ac:    68 47 00 04       l32    r2, [r7+4]<<2
-  b0:    0b c6 00 00       mov    sp, r6
-  b4:    2c 00 01 c0       pop    r7
-  b8:    2c 00 01 80       pop    r6
-  bc:    7c 00 00 00       ret   
-  c0:    28 00 01 80       push   r6
-  c4:    28 00 01 c0       push   r7
-  c8:    08 de 00 00       mov    r6, sp
-  cc:    08 e6 00 00       mov    r7, r6
-  d0:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  d4:    4f de 00 00       subi   sp, sp, 0
-  d8:    68 27 00 04       l32    r1, [r7+4]<<2
-  dc:    68 47 00 05       l32    r2, [r7+5]<<2
-  e0:    0c 21 10 00       sub    r1, r1, r2
-  e4:    08 41 00 00       mov    r2, r1
-  e8:    0b c6 00 00       mov    sp, r6
-  ec:    2c 00 01 c0       pop    r7
-  f0:    2c 00 01 80       pop    r6
-  f4:    7c 00 00 00       ret   
-  f8:    28 00 01 80       push   r6
-  fc:    28 00 01 c0       push   r7
- 100:    08 de 00 00       mov    r6, sp
- 104:    08 e6 00 00       mov    r7, r6
- 108:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
- 10c:    4f de 00 00       subi   sp, sp, 0
- 110:    68 27 00 04       l32    r1, [r7+4]<<2
- 114:    68 47 00 05       l32    r2, [r7+5]<<2
- 118:    08 21 10 00       add    r1, r1, r2
- 11c:    68 47 00 06       l32    r2, [r7+6]<<2
- 120:    08 21 10 00       add    r1, r1, r2
- 124:    68 47 00 07       l32    r2, [r7+7]<<2
- 128:    08 21 10 00       add    r1, r1, r2
- 12c:    68 47 00 08       l32    r2, [r7+8]<<2
- 130:    0c 21 10 00       sub    r1, r1, r2
- 134:    08 41 00 00       mov    r2, r1
- 138:    0b c6 00 00       mov    sp, r6
- 13c:    2c 00 01 c0       pop    r7
- 140:    2c 00 01 80       pop    r6
- 144:    7c 00 00 00       ret   
- 148:    28 00 01 80       push   r6
- 14c:    28 00 01 c0       push   r7
- 150:    08 de 00 00       mov    r6, sp
- 154:    08 e6 00 00       mov    r7, r6
- 158:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
- 15c:    4f de 00 08       subi   sp, sp, 8
- 160:    00 20 00 02       mov    r1, 2
- 164:    74 27 00 00       s32    [r7+0]<<2, r1
- 168:    00 20 00 05       mov    r1, 5
- 16c:    28 00 00 40       push   r1
- 170:    00 20 00 04       mov    r1, 4
- 174:    28 00 00 40       push   r1
- 178:    00 20 00 03       mov    r1, 3
- 17c:    28 00 00 40       push   r1
- 180:    00 20 00 02       mov    r1, 2
- 184:    28 00 00 40       push   r1
- 188:    00 20 00 01       mov    r1, 1
- 18c:    28 00 00 40       push   r1
- 190:    e7 ff ff d9       call   -39<<2        # 0xf8
- 194:    4b de 00 14       addi   sp, sp, 20
- 198:    4c 42 00 45       subi   r2, r2, 69
- 19c:    74 47 ff ff       s32    [r7-1]<<2, r2
- 1a0:    68 27 ff ff       l32    r1, [r7-1]<<2
- 1a4:    28 00 00 40       push   r1
- 1a8:    68 27 00 00       l32    r1, [r7+0]<<2
- 1ac:    28 00 00 40       push   r1
- 1b0:    e7 ff ff c3       call   -61<<2        # 0xc0
- 1b4:    4b de 00 08       addi   sp, sp, 8
- 1b8:    68 27 00 00       l32    r1, [r7+0]<<2
- 1bc:    68 47 ff ff       l32    r2, [r7-1]<<2
- 1c0:    08 21 10 00       add    r1, r1, r2
- 1c4:    08 41 00 00       mov    r2, r1
- 1c8:    0b c6 00 00       mov    sp, r6
- 1cc:    2c 00 01 c0       pop    r7
- 1d0:    2c 00 01 80       pop    r6
- 1d4:    7c 00 00 00       ret   
-  ...
diff --git a/examples/out/poxim-ex3.interp b/examples/out/poxim-ex3.interp
deleted file mode 100644
index c01018b9..00000000
--- a/examples/out/poxim-ex3.interp
+++ /dev/null
@@ -1,97 +0,0 @@
-[START OF SIMULATION]
-0x00000000:	mov sp,32764            	SP=0x00007FFC
-0x00000004:	bun 1                   	PC=0x0000000C
-0x0000000C:	push r6                 	MEM[0x00007FFC]{0x00000000}={R6}
-0x00000010:	push r7                 	MEM[0x00007FF8]{0x00000000}={R7}
-0x00000014:	add r6,sp,r0            	R6=SP+R0=0x00007FF4,SR=0x00000000
-0x00000018:	add r7,r6,r0            	R7=R6+R0=0x00007FF4,SR=0x00000000
-0x0000001C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFD,SR=0x00000000
-0x00000020:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FF4,SR=0x00000000
-0x00000024:	call 85                 	PC=0x0000017C,MEM[0x00007FF4]=0x00000028
-0x0000017C:	push r6                 	MEM[0x00007FF0]{0x00007FF4}={R6}
-0x00000180:	push r7                 	MEM[0x00007FEC]{0x00001FFD}={R7}
-0x00000184:	add r6,sp,r0            	R6=SP+R0=0x00007FE8,SR=0x00000000
-0x00000188:	add r7,r6,r0            	R7=R6+R0=0x00007FE8,SR=0x00000000
-0x0000018C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFA,SR=0x00000000
-0x00000190:	subi sp,sp,8            	SP=SP-0x00000008=0x00007FE0,SR=0x00000000
-0x00000194:	mov r1,2                	R1=0x00000002
-0x00000198:	s32 [r7+0],r1           	MEM[0x00007FE8]=R1=0x00000002
-0x0000019C:	mov r1,18               	R1=0x00000012
-0x000001A0:	s32 [r7-1],r1           	MEM[0x00007FE4]=R1=0x00000012
-0x000001A4:	mov r1,5                	R1=0x00000005
-0x000001A8:	push r1                 	MEM[0x00007FE0]{0x00000005}={R1}
-0x000001AC:	mov r1,16               	R1=0x00000010
-0x000001B0:	push r1                 	MEM[0x00007FDC]{0x00000010}={R1}
-0x000001B4:	mov r1,8                	R1=0x00000008
-0x000001B8:	push r1                 	MEM[0x00007FD8]{0x00000008}={R1}
-0x000001BC:	mov r1,2                	R1=0x00000002
-0x000001C0:	push r1                 	MEM[0x00007FD4]{0x00000002}={R1}
-0x000001C4:	mov r1,1                	R1=0x00000001
-0x000001C8:	push r1                 	MEM[0x00007FD0]{0x00000001}={R1}
-0x000001CC:	call -41                	PC=0x0000012C,MEM[0x00007FCC]=0x000001D0
-0x0000012C:	push r6                 	MEM[0x00007FC8]{0x00007FE8}={R6}
-0x00000130:	push r7                 	MEM[0x00007FC4]{0x00001FFA}={R7}
-0x00000134:	add r6,sp,r0            	R6=SP+R0=0x00007FC0,SR=0x00000000
-0x00000138:	add r7,r6,r0            	R7=R6+R0=0x00007FC0,SR=0x00000000
-0x0000013C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF0,SR=0x00000000
-0x00000140:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FC0,SR=0x00000000
-0x00000144:	l32 r1,[r7+4]           	R1=MEM[0x00007FD0]=0x00000001
-0x00000148:	l32 r2,[r7+5]           	R2=MEM[0x00007FD4]=0x00000002
-0x0000014C:	add r1,r1,r2            	R1=R1+R2=0x00000003,SR=0x00000000
-0x00000150:	l32 r2,[r7+6]           	R2=MEM[0x00007FD8]=0x00000008
-0x00000154:	add r1,r1,r2            	R1=R1+R2=0x0000000B,SR=0x00000000
-0x00000158:	l32 r2,[r7+7]           	R2=MEM[0x00007FDC]=0x00000010
-0x0000015C:	add r1,r1,r2            	R1=R1+R2=0x0000001B,SR=0x00000000
-0x00000160:	l32 r2,[r7+8]           	R2=MEM[0x00007FE0]=0x00000005
-0x00000164:	sub r1,r1,r2            	R1=R1-R2=0x00000016,SR=0x00000000
-0x00000168:	add r2,r1,r0            	R2=R1+R0=0x00000016,SR=0x00000000
-0x0000016C:	add sp,r6,r0            	SP=R6+R0=0x00007FC0,SR=0x00000000
-0x00000170:	pop r7                  	{R7}=MEM[0x00007FC4]{0x00001FFA}
-0x00000174:	pop r6                  	{R6}=MEM[0x00007FC8]{0x00007FE8}
-0x00000178:	ret                     	PC=MEM[0x00007FCC]=0x000001D0
-0x000001D0:	addi sp,sp,20           	SP=SP+0x00000014=0x00007FE0,SR=0x00000000
-0x000001D4:	l32 r1,[r7-1]           	R1=MEM[0x00007FE4]=0x00000012
-0x000001D8:	push r1                 	MEM[0x00007FE0]{0x00000012}={R1}
-0x000001DC:	l32 r1,[r7+0]           	R1=MEM[0x00007FE8]=0x00000002
-0x000001E0:	push r1                 	MEM[0x00007FDC]{0x00000002}={R1}
-0x000001E4:	call -61                	PC=0x000000F4,MEM[0x00007FD8]=0x000001E8
-0x000000F4:	push r6                 	MEM[0x00007FD4]{0x00007FE8}={R6}
-0x000000F8:	push r7                 	MEM[0x00007FD0]{0x00001FFA}={R7}
-0x000000FC:	add r6,sp,r0            	R6=SP+R0=0x00007FCC,SR=0x00000000
-0x00000100:	add r7,r6,r0            	R7=R6+R0=0x00007FCC,SR=0x00000000
-0x00000104:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF3,SR=0x00000000
-0x00000108:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FCC,SR=0x00000000
-0x0000010C:	l32 r1,[r7+4]           	R1=MEM[0x00007FDC]=0x00000002
-0x00000110:	l32 r2,[r7+5]           	R2=MEM[0x00007FE0]=0x00000012
-0x00000114:	sub r1,r1,r2            	R1=R1-R2=0xFFFFFFF0,SR=0x00000011
-0x00000118:	add r2,r1,r0            	R2=R1+R0=0xFFFFFFF0,SR=0x00000010
-0x0000011C:	add sp,r6,r0            	SP=R6+R0=0x00007FCC,SR=0x00000000
-0x00000120:	pop r7                  	{R7}=MEM[0x00007FD0]{0x00001FFA}
-0x00000124:	pop r6                  	{R6}=MEM[0x00007FD4]{0x00007FE8}
-0x00000128:	ret                     	PC=MEM[0x00007FD8]=0x000001E8
-0x000001E8:	addi sp,sp,8            	SP=SP+0x00000008=0x00007FE0,SR=0x00000000
-0x000001EC:	addi r1,r7,0            	R1=R7+0x00000000=0x00001FFA,SR=0x00000000
-0x000001F0:	push r1                 	MEM[0x00007FE0]{0x00001FFA}={R1}
-0x000001F4:	call -78                	PC=0x000000C0,MEM[0x00007FDC]=0x000001F8
-0x000000C0:	push r6                 	MEM[0x00007FD8]{0x00007FE8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FD4]{0x00001FFA}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FD0,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FD0,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF4,SR=0x00000000
-0x000000D4:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FD0,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x00001FFA
-0x000000DC:	mov r2,420              	R2=0x000001A4
-0x000000E0:	s32 [r1+0],r2           	MEM[0x00007FE8]=R2=0x000001A4
-0x000000E4:	add sp,r6,r0            	SP=R6+R0=0x00007FD0,SR=0x00000000
-0x000000E8:	pop r7                  	{R7}=MEM[0x00007FD4]{0x00001FFA}
-0x000000EC:	pop r6                  	{R6}=MEM[0x00007FD8]{0x00007FE8}
-0x000000F0:	ret                     	PC=MEM[0x00007FDC]=0x000001F8
-0x000001F8:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FE0,SR=0x00000000
-0x000001FC:	l32 r2,[r7-1]           	R2=MEM[0x00007FE4]=0x00000012
-0x00000200:	add sp,r6,r0            	SP=R6+R0=0x00007FE8,SR=0x00000000
-0x00000204:	pop r7                  	{R7}=MEM[0x00007FEC]{0x00001FFD}
-0x00000208:	pop r6                  	{R6}=MEM[0x00007FF0]{0x00007FF4}
-0x0000020C:	ret                     	PC=MEM[0x00007FF4]=0x00000028
-0x00000028:	call -9                 	PC=0x00000008,MEM[0x00007FF4]=0x0000002C
-0x00000008:	int 0                   	CR=0x00000000,PC=0x00000000
-[END OF SIMULATION]
\ No newline at end of file
diff --git a/examples/out/poxim-ex3.poximdump b/examples/out/poxim-ex3.poximdump
deleted file mode 100644
index 5656a081..00000000
--- a/examples/out/poxim-ex3.poximdump
+++ /dev/null
@@ -1,133 +0,0 @@
-   0:    03 c0 7f fc       mov    sp, 32764
-   4:    dc 00 00 01       bun    1        # 0xc
-   8:    fc 00 00 00       int    0
-   c:    28 00 01 80       push   r6
-  10:    28 00 01 c0       push   r7
-  14:    08 de 00 00       mov    r6, sp
-  18:    08 e6 00 00       mov    r7, r6
-  1c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  20:    4f de 00 00       subi   sp, sp, 0
-  24:    e4 00 00 55       call   85<<2        # 0x17c
-  28:    e7 ff ff f7       call   -9<<2        # 0x8
-  2c:    0b c6 00 00       mov    sp, r6
-  30:    2c 00 01 c0       pop    r7
-  34:    2c 00 01 80       pop    r6
-  38:    7c 00 00 00       ret   
-  3c:    28 00 01 80       push   r6
-  40:    28 00 01 c0       push   r7
-  44:    08 de 00 00       mov    r6, sp
-  48:    08 e6 00 00       mov    r7, r6
-  4c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  50:    4f de 00 08       subi   sp, sp, 8
-  54:    68 27 00 04       l32    r1, [r7+4]<<2
-  58:    74 27 00 00       s32    [r7+0]<<2, r1
-  5c:    00 20 00 00       mov    r1, 0
-  60:    74 27 ff ff       s32    [r7-1]<<2, r1
-  64:    68 27 00 18       l32    r1, [r7+24]<<2
-  68:    10 01 0d 01       srl    r0, r1, r1, 1
-  6c:    68 47 ff fc       l32    r2, [r7-4]<<2
-  70:    14 02 08 00       cmp    r2, r1
-  74:    a8 00 00 0d       bae    13        # 0xac
-  78:    dc 00 00 05       bun    5        # 0x90
-  7c:    68 27 ff fc       l32    r1, [r7-4]<<2
-  80:    08 41 00 00       mov    r2, r1
-  84:    48 21 00 01       addi   r1, r1, 1
-  88:    74 27 ff ff       s32    [r7-1]<<2, r1
-  8c:    df ff ff f5       bun    -11        # 0x64
-  90:    68 27 00 00       l32    r1, [r7+0]<<2
-  94:    08 41 00 00       mov    r2, r1
-  98:    48 21 00 01       addi   r1, r1, 1
-  9c:    74 27 00 00       s32    [r7+0]<<2, r1
-  a0:    68 27 00 05       l32    r1, [r7+5]<<2
-  a4:    6c 22 00 00       s8     [r2+0], r1
-  a8:    df ff ff f4       bun    -12        # 0x7c
-  ac:    68 47 00 04       l32    r2, [r7+4]<<2
-  b0:    0b c6 00 00       mov    sp, r6
-  b4:    2c 00 01 c0       pop    r7
-  b8:    2c 00 01 80       pop    r6
-  bc:    7c 00 00 00       ret   
-  c0:    28 00 01 80       push   r6
-  c4:    28 00 01 c0       push   r7
-  c8:    08 de 00 00       mov    r6, sp
-  cc:    08 e6 00 00       mov    r7, r6
-  d0:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  d4:    4f de 00 00       subi   sp, sp, 0
-  d8:    68 27 00 04       l32    r1, [r7+4]<<2
-  dc:    00 40 01 a4       mov    r2, 420
-  e0:    74 41 00 00       s32    [r1+0]<<2, r2
-  e4:    0b c6 00 00       mov    sp, r6
-  e8:    2c 00 01 c0       pop    r7
-  ec:    2c 00 01 80       pop    r6
-  f0:    7c 00 00 00       ret   
-  f4:    28 00 01 80       push   r6
-  f8:    28 00 01 c0       push   r7
-  fc:    08 de 00 00       mov    r6, sp
- 100:    08 e6 00 00       mov    r7, r6
- 104:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
- 108:    4f de 00 00       subi   sp, sp, 0
- 10c:    68 27 00 04       l32    r1, [r7+4]<<2
- 110:    68 47 00 05       l32    r2, [r7+5]<<2
- 114:    0c 21 10 00       sub    r1, r1, r2
- 118:    08 41 00 00       mov    r2, r1
- 11c:    0b c6 00 00       mov    sp, r6
- 120:    2c 00 01 c0       pop    r7
- 124:    2c 00 01 80       pop    r6
- 128:    7c 00 00 00       ret   
- 12c:    28 00 01 80       push   r6
- 130:    28 00 01 c0       push   r7
- 134:    08 de 00 00       mov    r6, sp
- 138:    08 e6 00 00       mov    r7, r6
- 13c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
- 140:    4f de 00 00       subi   sp, sp, 0
- 144:    68 27 00 04       l32    r1, [r7+4]<<2
- 148:    68 47 00 05       l32    r2, [r7+5]<<2
- 14c:    08 21 10 00       add    r1, r1, r2
- 150:    68 47 00 06       l32    r2, [r7+6]<<2
- 154:    08 21 10 00       add    r1, r1, r2
- 158:    68 47 00 07       l32    r2, [r7+7]<<2
- 15c:    08 21 10 00       add    r1, r1, r2
- 160:    68 47 00 08       l32    r2, [r7+8]<<2
- 164:    0c 21 10 00       sub    r1, r1, r2
- 168:    08 41 00 00       mov    r2, r1
- 16c:    0b c6 00 00       mov    sp, r6
- 170:    2c 00 01 c0       pop    r7
- 174:    2c 00 01 80       pop    r6
- 178:    7c 00 00 00       ret   
- 17c:    28 00 01 80       push   r6
- 180:    28 00 01 c0       push   r7
- 184:    08 de 00 00       mov    r6, sp
- 188:    08 e6 00 00       mov    r7, r6
- 18c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
- 190:    4f de 00 08       subi   sp, sp, 8
- 194:    00 20 00 02       mov    r1, 2
- 198:    74 27 00 00       s32    [r7+0]<<2, r1
- 19c:    00 20 00 12       mov    r1, 18
- 1a0:    74 27 ff ff       s32    [r7-1]<<2, r1
- 1a4:    00 20 00 05       mov    r1, 5
- 1a8:    28 00 00 40       push   r1
- 1ac:    00 20 00 10       mov    r1, 16
- 1b0:    28 00 00 40       push   r1
- 1b4:    00 20 00 08       mov    r1, 8
- 1b8:    28 00 00 40       push   r1
- 1bc:    00 20 00 02       mov    r1, 2
- 1c0:    28 00 00 40       push   r1
- 1c4:    00 20 00 01       mov    r1, 1
- 1c8:    28 00 00 40       push   r1
- 1cc:    e7 ff ff d7       call   -41<<2        # 0x12c
- 1d0:    4b de 00 14       addi   sp, sp, 20
- 1d4:    68 27 ff ff       l32    r1, [r7-1]<<2
- 1d8:    28 00 00 40       push   r1
- 1dc:    68 27 00 00       l32    r1, [r7+0]<<2
- 1e0:    28 00 00 40       push   r1
- 1e4:    e7 ff ff c3       call   -61<<2        # 0xf4
- 1e8:    4b de 00 08       addi   sp, sp, 8
- 1ec:    48 27 00 00       addi   r1, r7, 0
- 1f0:    28 00 00 40       push   r1
- 1f4:    e7 ff ff b2       call   -78<<2        # 0xc0
- 1f8:    4b de 00 04       addi   sp, sp, 4
- 1fc:    68 47 ff ff       l32    r2, [r7-1]<<2
- 200:    0b c6 00 00       mov    sp, r6
- 204:    2c 00 01 c0       pop    r7
- 208:    2c 00 01 80       pop    r6
- 20c:    7c 00 00 00       ret   
-  ...
diff --git a/examples/out/poxim-fib-recursion.interp b/examples/out/poxim-fib-recursion.interp
deleted file mode 100644
index cccf66b0..00000000
--- a/examples/out/poxim-fib-recursion.interp
+++ /dev/null
@@ -1,865 +0,0 @@
-[START OF SIMULATION]
-0x00000000:	mov sp,32764            	SP=0x00007FFC
-0x00000004:	bun 1                   	PC=0x0000000C
-0x0000000C:	push r6                 	MEM[0x00007FFC]{0x00000000}={R6}
-0x00000010:	push r7                 	MEM[0x00007FF8]{0x00000000}={R7}
-0x00000014:	add r6,sp,r0            	R6=SP+R0=0x00007FF4,SR=0x00000000
-0x00000018:	add r7,r6,r0            	R7=R6+R0=0x00007FF4,SR=0x00000000
-0x0000001C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFD,SR=0x00000000
-0x00000020:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FF4,SR=0x00000000
-0x00000024:	call 67                 	PC=0x00000134,MEM[0x00007FF4]=0x00000028
-0x00000134:	push r6                 	MEM[0x00007FF0]{0x00007FF4}={R6}
-0x00000138:	push r7                 	MEM[0x00007FEC]{0x00001FFD}={R7}
-0x0000013C:	add r6,sp,r0            	R6=SP+R0=0x00007FE8,SR=0x00000000
-0x00000140:	add r7,r6,r0            	R7=R6+R0=0x00007FE8,SR=0x00000000
-0x00000144:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFA,SR=0x00000000
-0x00000148:	subi sp,sp,8            	SP=SP-0x00000008=0x00007FE0,SR=0x00000000
-0x0000014C:	mov r1,6                	R1=0x00000006
-0x00000150:	push r1                 	MEM[0x00007FE0]{0x00000006}={R1}
-0x00000154:	call -38                	PC=0x000000C0,MEM[0x00007FDC]=0x00000158
-0x000000C0:	push r6                 	MEM[0x00007FD8]{0x00007FE8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FD4]{0x00001FFA}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FD0,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FD0,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF4,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FCC,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x00000006
-0x000000DC:	cmpi r1,2               	SR=0x00000000
-0x000000E0:	bge 2                   	PC=0x000000EC
-0x000000EC:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x00000006
-0x000000F0:	subi r1,r1,1            	R1=R1-0x00000001=0x00000005,SR=0x00000000
-0x000000F4:	push r1                 	MEM[0x00007FCC]{0x00000005}={R1}
-0x000000F8:	call -15                	PC=0x000000C0,MEM[0x00007FC8]=0x000000FC
-0x000000C0:	push r6                 	MEM[0x00007FC4]{0x00007FD0}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FC0]{0x00001FF4}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FBC,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FBC,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEF,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FB8,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000005
-0x000000DC:	cmpi r1,2               	SR=0x00000000
-0x000000E0:	bge 2                   	PC=0x000000EC
-0x000000EC:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000005
-0x000000F0:	subi r1,r1,1            	R1=R1-0x00000001=0x00000004,SR=0x00000000
-0x000000F4:	push r1                 	MEM[0x00007FB8]{0x00000004}={R1}
-0x000000F8:	call -15                	PC=0x000000C0,MEM[0x00007FB4]=0x000000FC
-0x000000C0:	push r6                 	MEM[0x00007FB0]{0x00007FBC}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FAC]{0x00001FEF}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FA8,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FA8,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEA,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FA4,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000004
-0x000000DC:	cmpi r1,2               	SR=0x00000000
-0x000000E0:	bge 2                   	PC=0x000000EC
-0x000000EC:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000004
-0x000000F0:	subi r1,r1,1            	R1=R1-0x00000001=0x00000003,SR=0x00000000
-0x000000F4:	push r1                 	MEM[0x00007FA4]{0x00000003}={R1}
-0x000000F8:	call -15                	PC=0x000000C0,MEM[0x00007FA0]=0x000000FC
-0x000000C0:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000003
-0x000000DC:	cmpi r1,2               	SR=0x00000000
-0x000000E0:	bge 2                   	PC=0x000000EC
-0x000000EC:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000003
-0x000000F0:	subi r1,r1,1            	R1=R1-0x00000001=0x00000002,SR=0x00000000
-0x000000F4:	push r1                 	MEM[0x00007F90]{0x00000002}={R1}
-0x000000F8:	call -15                	PC=0x000000C0,MEM[0x00007F8C]=0x000000FC
-0x000000C0:	push r6                 	MEM[0x00007F88]{0x00007F94}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F84]{0x00001FE5}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F80,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F80,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE0,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F7C,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000002
-0x000000DC:	cmpi r1,2               	SR=0x00000040
-0x000000E0:	bge 2                   	PC=0x000000EC
-0x000000EC:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000002
-0x000000F0:	subi r1,r1,1            	R1=R1-0x00000001=0x00000001,SR=0x00000000
-0x000000F4:	push r1                 	MEM[0x00007F7C]{0x00000001}={R1}
-0x000000F8:	call -15                	PC=0x000000C0,MEM[0x00007F78]=0x000000FC
-0x000000C0:	push r6                 	MEM[0x00007F74]{0x00007F80}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F70]{0x00001FE0}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F6C,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F6C,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FDB,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F68,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007F7C]=0x00000001
-0x000000DC:	cmpi r1,2               	SR=0x00000011
-0x000000E0:	bge 2                   	PC=0x000000E4
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007F7C]=0x00000001
-0x000000E8:	bun 14                  	PC=0x00000124
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F6C,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F70]{0x00001FE0}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F74]{0x00007F80}
-0x00000130:	ret                     	PC=MEM[0x00007F78]=0x000000FC
-0x000000FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F7C,SR=0x00000000
-0x00000100:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000002
-0x00000104:	subi r1,r1,2            	R1=R1-0x00000002=0x00000000,SR=0x00000040
-0x00000108:	push r1                 	MEM[0x00007F7C]{0x00000000}={R1}
-0x0000010C:	s32 [r7+0],r2           	MEM[0x00007F80]=R2=0x00000001
-0x00000110:	call -21                	PC=0x000000C0,MEM[0x00007F78]=0x00000114
-0x000000C0:	push r6                 	MEM[0x00007F74]{0x00007F80}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F70]{0x00001FE0}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F6C,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F6C,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FDB,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F68,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007F7C]=0x00000000
-0x000000DC:	cmpi r1,2               	SR=0x00000011
-0x000000E0:	bge 2                   	PC=0x000000E4
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007F7C]=0x00000000
-0x000000E8:	bun 14                  	PC=0x00000124
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F6C,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F70]{0x00001FE0}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F74]{0x00007F80}
-0x00000130:	ret                     	PC=MEM[0x00007F78]=0x00000114
-0x00000114:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F7C,SR=0x00000000
-0x00000118:	l32 r1,[r7+0]           	R1=MEM[0x00007F80]=0x00000001
-0x0000011C:	add r1,r1,r2            	R1=R1+R2=0x00000001,SR=0x00000000
-0x00000120:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F80,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F84]{0x00001FE5}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F88]{0x00007F94}
-0x00000130:	ret                     	PC=MEM[0x00007F8C]=0x000000FC
-0x000000FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F90,SR=0x00000000
-0x00000100:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000003
-0x00000104:	subi r1,r1,2            	R1=R1-0x00000002=0x00000001,SR=0x00000000
-0x00000108:	push r1                 	MEM[0x00007F90]{0x00000001}={R1}
-0x0000010C:	s32 [r7+0],r2           	MEM[0x00007F94]=R2=0x00000001
-0x00000110:	call -21                	PC=0x000000C0,MEM[0x00007F8C]=0x00000114
-0x000000C0:	push r6                 	MEM[0x00007F88]{0x00007F94}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F84]{0x00001FE5}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F80,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F80,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE0,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F7C,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000001
-0x000000DC:	cmpi r1,2               	SR=0x00000011
-0x000000E0:	bge 2                   	PC=0x000000E4
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007F90]=0x00000001
-0x000000E8:	bun 14                  	PC=0x00000124
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F80,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F84]{0x00001FE5}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F88]{0x00007F94}
-0x00000130:	ret                     	PC=MEM[0x00007F8C]=0x00000114
-0x00000114:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F90,SR=0x00000000
-0x00000118:	l32 r1,[r7+0]           	R1=MEM[0x00007F94]=0x00000001
-0x0000011C:	add r1,r1,r2            	R1=R1+R2=0x00000002,SR=0x00000000
-0x00000120:	add r2,r1,r0            	R2=R1+R0=0x00000002,SR=0x00000000
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
-0x00000130:	ret                     	PC=MEM[0x00007FA0]=0x000000FC
-0x000000FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
-0x00000100:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000004
-0x00000104:	subi r1,r1,2            	R1=R1-0x00000002=0x00000002,SR=0x00000000
-0x00000108:	push r1                 	MEM[0x00007FA4]{0x00000002}={R1}
-0x0000010C:	s32 [r7+0],r2           	MEM[0x00007FA8]=R2=0x00000002
-0x00000110:	call -21                	PC=0x000000C0,MEM[0x00007FA0]=0x00000114
-0x000000C0:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
-0x000000DC:	cmpi r1,2               	SR=0x00000040
-0x000000E0:	bge 2                   	PC=0x000000EC
-0x000000EC:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
-0x000000F0:	subi r1,r1,1            	R1=R1-0x00000001=0x00000001,SR=0x00000000
-0x000000F4:	push r1                 	MEM[0x00007F90]{0x00000001}={R1}
-0x000000F8:	call -15                	PC=0x000000C0,MEM[0x00007F8C]=0x000000FC
-0x000000C0:	push r6                 	MEM[0x00007F88]{0x00007F94}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F84]{0x00001FE5}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F80,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F80,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE0,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F7C,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000001
-0x000000DC:	cmpi r1,2               	SR=0x00000011
-0x000000E0:	bge 2                   	PC=0x000000E4
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007F90]=0x00000001
-0x000000E8:	bun 14                  	PC=0x00000124
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F80,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F84]{0x00001FE5}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F88]{0x00007F94}
-0x00000130:	ret                     	PC=MEM[0x00007F8C]=0x000000FC
-0x000000FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F90,SR=0x00000000
-0x00000100:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
-0x00000104:	subi r1,r1,2            	R1=R1-0x00000002=0x00000000,SR=0x00000040
-0x00000108:	push r1                 	MEM[0x00007F90]{0x00000000}={R1}
-0x0000010C:	s32 [r7+0],r2           	MEM[0x00007F94]=R2=0x00000001
-0x00000110:	call -21                	PC=0x000000C0,MEM[0x00007F8C]=0x00000114
-0x000000C0:	push r6                 	MEM[0x00007F88]{0x00007F94}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F84]{0x00001FE5}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F80,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F80,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE0,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F7C,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000000
-0x000000DC:	cmpi r1,2               	SR=0x00000011
-0x000000E0:	bge 2                   	PC=0x000000E4
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007F90]=0x00000000
-0x000000E8:	bun 14                  	PC=0x00000124
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F80,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F84]{0x00001FE5}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F88]{0x00007F94}
-0x00000130:	ret                     	PC=MEM[0x00007F8C]=0x00000114
-0x00000114:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F90,SR=0x00000000
-0x00000118:	l32 r1,[r7+0]           	R1=MEM[0x00007F94]=0x00000001
-0x0000011C:	add r1,r1,r2            	R1=R1+R2=0x00000001,SR=0x00000000
-0x00000120:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
-0x00000130:	ret                     	PC=MEM[0x00007FA0]=0x00000114
-0x00000114:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
-0x00000118:	l32 r1,[r7+0]           	R1=MEM[0x00007FA8]=0x00000002
-0x0000011C:	add r1,r1,r2            	R1=R1+R2=0x00000003,SR=0x00000000
-0x00000120:	add r2,r1,r0            	R2=R1+R0=0x00000003,SR=0x00000000
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007FA8,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007FAC]{0x00001FEF}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007FB0]{0x00007FBC}
-0x00000130:	ret                     	PC=MEM[0x00007FB4]=0x000000FC
-0x000000FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FB8,SR=0x00000000
-0x00000100:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000005
-0x00000104:	subi r1,r1,2            	R1=R1-0x00000002=0x00000003,SR=0x00000000
-0x00000108:	push r1                 	MEM[0x00007FB8]{0x00000003}={R1}
-0x0000010C:	s32 [r7+0],r2           	MEM[0x00007FBC]=R2=0x00000003
-0x00000110:	call -21                	PC=0x000000C0,MEM[0x00007FB4]=0x00000114
-0x000000C0:	push r6                 	MEM[0x00007FB0]{0x00007FBC}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FAC]{0x00001FEF}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FA8,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FA8,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEA,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FA4,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000003
-0x000000DC:	cmpi r1,2               	SR=0x00000000
-0x000000E0:	bge 2                   	PC=0x000000EC
-0x000000EC:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000003
-0x000000F0:	subi r1,r1,1            	R1=R1-0x00000001=0x00000002,SR=0x00000000
-0x000000F4:	push r1                 	MEM[0x00007FA4]{0x00000002}={R1}
-0x000000F8:	call -15                	PC=0x000000C0,MEM[0x00007FA0]=0x000000FC
-0x000000C0:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
-0x000000DC:	cmpi r1,2               	SR=0x00000040
-0x000000E0:	bge 2                   	PC=0x000000EC
-0x000000EC:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
-0x000000F0:	subi r1,r1,1            	R1=R1-0x00000001=0x00000001,SR=0x00000000
-0x000000F4:	push r1                 	MEM[0x00007F90]{0x00000001}={R1}
-0x000000F8:	call -15                	PC=0x000000C0,MEM[0x00007F8C]=0x000000FC
-0x000000C0:	push r6                 	MEM[0x00007F88]{0x00007F94}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F84]{0x00001FE5}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F80,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F80,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE0,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F7C,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000001
-0x000000DC:	cmpi r1,2               	SR=0x00000011
-0x000000E0:	bge 2                   	PC=0x000000E4
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007F90]=0x00000001
-0x000000E8:	bun 14                  	PC=0x00000124
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F80,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F84]{0x00001FE5}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F88]{0x00007F94}
-0x00000130:	ret                     	PC=MEM[0x00007F8C]=0x000000FC
-0x000000FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F90,SR=0x00000000
-0x00000100:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
-0x00000104:	subi r1,r1,2            	R1=R1-0x00000002=0x00000000,SR=0x00000040
-0x00000108:	push r1                 	MEM[0x00007F90]{0x00000000}={R1}
-0x0000010C:	s32 [r7+0],r2           	MEM[0x00007F94]=R2=0x00000001
-0x00000110:	call -21                	PC=0x000000C0,MEM[0x00007F8C]=0x00000114
-0x000000C0:	push r6                 	MEM[0x00007F88]{0x00007F94}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F84]{0x00001FE5}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F80,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F80,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE0,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F7C,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000000
-0x000000DC:	cmpi r1,2               	SR=0x00000011
-0x000000E0:	bge 2                   	PC=0x000000E4
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007F90]=0x00000000
-0x000000E8:	bun 14                  	PC=0x00000124
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F80,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F84]{0x00001FE5}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F88]{0x00007F94}
-0x00000130:	ret                     	PC=MEM[0x00007F8C]=0x00000114
-0x00000114:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F90,SR=0x00000000
-0x00000118:	l32 r1,[r7+0]           	R1=MEM[0x00007F94]=0x00000001
-0x0000011C:	add r1,r1,r2            	R1=R1+R2=0x00000001,SR=0x00000000
-0x00000120:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
-0x00000130:	ret                     	PC=MEM[0x00007FA0]=0x000000FC
-0x000000FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
-0x00000100:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000003
-0x00000104:	subi r1,r1,2            	R1=R1-0x00000002=0x00000001,SR=0x00000000
-0x00000108:	push r1                 	MEM[0x00007FA4]{0x00000001}={R1}
-0x0000010C:	s32 [r7+0],r2           	MEM[0x00007FA8]=R2=0x00000001
-0x00000110:	call -21                	PC=0x000000C0,MEM[0x00007FA0]=0x00000114
-0x000000C0:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000001
-0x000000DC:	cmpi r1,2               	SR=0x00000011
-0x000000E0:	bge 2                   	PC=0x000000E4
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FA4]=0x00000001
-0x000000E8:	bun 14                  	PC=0x00000124
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
-0x00000130:	ret                     	PC=MEM[0x00007FA0]=0x00000114
-0x00000114:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
-0x00000118:	l32 r1,[r7+0]           	R1=MEM[0x00007FA8]=0x00000001
-0x0000011C:	add r1,r1,r2            	R1=R1+R2=0x00000002,SR=0x00000000
-0x00000120:	add r2,r1,r0            	R2=R1+R0=0x00000002,SR=0x00000000
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007FA8,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007FAC]{0x00001FEF}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007FB0]{0x00007FBC}
-0x00000130:	ret                     	PC=MEM[0x00007FB4]=0x00000114
-0x00000114:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FB8,SR=0x00000000
-0x00000118:	l32 r1,[r7+0]           	R1=MEM[0x00007FBC]=0x00000003
-0x0000011C:	add r1,r1,r2            	R1=R1+R2=0x00000005,SR=0x00000000
-0x00000120:	add r2,r1,r0            	R2=R1+R0=0x00000005,SR=0x00000000
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007FBC,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007FC0]{0x00001FF4}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007FC4]{0x00007FD0}
-0x00000130:	ret                     	PC=MEM[0x00007FC8]=0x000000FC
-0x000000FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FCC,SR=0x00000000
-0x00000100:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x00000006
-0x00000104:	subi r1,r1,2            	R1=R1-0x00000002=0x00000004,SR=0x00000000
-0x00000108:	push r1                 	MEM[0x00007FCC]{0x00000004}={R1}
-0x0000010C:	s32 [r7+0],r2           	MEM[0x00007FD0]=R2=0x00000005
-0x00000110:	call -21                	PC=0x000000C0,MEM[0x00007FC8]=0x00000114
-0x000000C0:	push r6                 	MEM[0x00007FC4]{0x00007FD0}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FC0]{0x00001FF4}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FBC,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FBC,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEF,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FB8,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000004
-0x000000DC:	cmpi r1,2               	SR=0x00000000
-0x000000E0:	bge 2                   	PC=0x000000EC
-0x000000EC:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000004
-0x000000F0:	subi r1,r1,1            	R1=R1-0x00000001=0x00000003,SR=0x00000000
-0x000000F4:	push r1                 	MEM[0x00007FB8]{0x00000003}={R1}
-0x000000F8:	call -15                	PC=0x000000C0,MEM[0x00007FB4]=0x000000FC
-0x000000C0:	push r6                 	MEM[0x00007FB0]{0x00007FBC}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FAC]{0x00001FEF}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FA8,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FA8,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEA,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FA4,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000003
-0x000000DC:	cmpi r1,2               	SR=0x00000000
-0x000000E0:	bge 2                   	PC=0x000000EC
-0x000000EC:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000003
-0x000000F0:	subi r1,r1,1            	R1=R1-0x00000001=0x00000002,SR=0x00000000
-0x000000F4:	push r1                 	MEM[0x00007FA4]{0x00000002}={R1}
-0x000000F8:	call -15                	PC=0x000000C0,MEM[0x00007FA0]=0x000000FC
-0x000000C0:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
-0x000000DC:	cmpi r1,2               	SR=0x00000040
-0x000000E0:	bge 2                   	PC=0x000000EC
-0x000000EC:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
-0x000000F0:	subi r1,r1,1            	R1=R1-0x00000001=0x00000001,SR=0x00000000
-0x000000F4:	push r1                 	MEM[0x00007F90]{0x00000001}={R1}
-0x000000F8:	call -15                	PC=0x000000C0,MEM[0x00007F8C]=0x000000FC
-0x000000C0:	push r6                 	MEM[0x00007F88]{0x00007F94}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F84]{0x00001FE5}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F80,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F80,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE0,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F7C,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000001
-0x000000DC:	cmpi r1,2               	SR=0x00000011
-0x000000E0:	bge 2                   	PC=0x000000E4
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007F90]=0x00000001
-0x000000E8:	bun 14                  	PC=0x00000124
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F80,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F84]{0x00001FE5}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F88]{0x00007F94}
-0x00000130:	ret                     	PC=MEM[0x00007F8C]=0x000000FC
-0x000000FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F90,SR=0x00000000
-0x00000100:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
-0x00000104:	subi r1,r1,2            	R1=R1-0x00000002=0x00000000,SR=0x00000040
-0x00000108:	push r1                 	MEM[0x00007F90]{0x00000000}={R1}
-0x0000010C:	s32 [r7+0],r2           	MEM[0x00007F94]=R2=0x00000001
-0x00000110:	call -21                	PC=0x000000C0,MEM[0x00007F8C]=0x00000114
-0x000000C0:	push r6                 	MEM[0x00007F88]{0x00007F94}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F84]{0x00001FE5}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F80,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F80,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE0,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F7C,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000000
-0x000000DC:	cmpi r1,2               	SR=0x00000011
-0x000000E0:	bge 2                   	PC=0x000000E4
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007F90]=0x00000000
-0x000000E8:	bun 14                  	PC=0x00000124
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F80,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F84]{0x00001FE5}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F88]{0x00007F94}
-0x00000130:	ret                     	PC=MEM[0x00007F8C]=0x00000114
-0x00000114:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F90,SR=0x00000000
-0x00000118:	l32 r1,[r7+0]           	R1=MEM[0x00007F94]=0x00000001
-0x0000011C:	add r1,r1,r2            	R1=R1+R2=0x00000001,SR=0x00000000
-0x00000120:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
-0x00000130:	ret                     	PC=MEM[0x00007FA0]=0x000000FC
-0x000000FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
-0x00000100:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000003
-0x00000104:	subi r1,r1,2            	R1=R1-0x00000002=0x00000001,SR=0x00000000
-0x00000108:	push r1                 	MEM[0x00007FA4]{0x00000001}={R1}
-0x0000010C:	s32 [r7+0],r2           	MEM[0x00007FA8]=R2=0x00000001
-0x00000110:	call -21                	PC=0x000000C0,MEM[0x00007FA0]=0x00000114
-0x000000C0:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000001
-0x000000DC:	cmpi r1,2               	SR=0x00000011
-0x000000E0:	bge 2                   	PC=0x000000E4
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FA4]=0x00000001
-0x000000E8:	bun 14                  	PC=0x00000124
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
-0x00000130:	ret                     	PC=MEM[0x00007FA0]=0x00000114
-0x00000114:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
-0x00000118:	l32 r1,[r7+0]           	R1=MEM[0x00007FA8]=0x00000001
-0x0000011C:	add r1,r1,r2            	R1=R1+R2=0x00000002,SR=0x00000000
-0x00000120:	add r2,r1,r0            	R2=R1+R0=0x00000002,SR=0x00000000
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007FA8,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007FAC]{0x00001FEF}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007FB0]{0x00007FBC}
-0x00000130:	ret                     	PC=MEM[0x00007FB4]=0x000000FC
-0x000000FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FB8,SR=0x00000000
-0x00000100:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000004
-0x00000104:	subi r1,r1,2            	R1=R1-0x00000002=0x00000002,SR=0x00000000
-0x00000108:	push r1                 	MEM[0x00007FB8]{0x00000002}={R1}
-0x0000010C:	s32 [r7+0],r2           	MEM[0x00007FBC]=R2=0x00000002
-0x00000110:	call -21                	PC=0x000000C0,MEM[0x00007FB4]=0x00000114
-0x000000C0:	push r6                 	MEM[0x00007FB0]{0x00007FBC}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FAC]{0x00001FEF}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FA8,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FA8,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEA,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FA4,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000002
-0x000000DC:	cmpi r1,2               	SR=0x00000040
-0x000000E0:	bge 2                   	PC=0x000000EC
-0x000000EC:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000002
-0x000000F0:	subi r1,r1,1            	R1=R1-0x00000001=0x00000001,SR=0x00000000
-0x000000F4:	push r1                 	MEM[0x00007FA4]{0x00000001}={R1}
-0x000000F8:	call -15                	PC=0x000000C0,MEM[0x00007FA0]=0x000000FC
-0x000000C0:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000001
-0x000000DC:	cmpi r1,2               	SR=0x00000011
-0x000000E0:	bge 2                   	PC=0x000000E4
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FA4]=0x00000001
-0x000000E8:	bun 14                  	PC=0x00000124
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
-0x00000130:	ret                     	PC=MEM[0x00007FA0]=0x000000FC
-0x000000FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
-0x00000100:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000002
-0x00000104:	subi r1,r1,2            	R1=R1-0x00000002=0x00000000,SR=0x00000040
-0x00000108:	push r1                 	MEM[0x00007FA4]{0x00000000}={R1}
-0x0000010C:	s32 [r7+0],r2           	MEM[0x00007FA8]=R2=0x00000001
-0x00000110:	call -21                	PC=0x000000C0,MEM[0x00007FA0]=0x00000114
-0x000000C0:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000000
-0x000000DC:	cmpi r1,2               	SR=0x00000011
-0x000000E0:	bge 2                   	PC=0x000000E4
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FA4]=0x00000000
-0x000000E8:	bun 14                  	PC=0x00000124
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
-0x00000130:	ret                     	PC=MEM[0x00007FA0]=0x00000114
-0x00000114:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
-0x00000118:	l32 r1,[r7+0]           	R1=MEM[0x00007FA8]=0x00000001
-0x0000011C:	add r1,r1,r2            	R1=R1+R2=0x00000001,SR=0x00000000
-0x00000120:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007FA8,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007FAC]{0x00001FEF}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007FB0]{0x00007FBC}
-0x00000130:	ret                     	PC=MEM[0x00007FB4]=0x00000114
-0x00000114:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FB8,SR=0x00000000
-0x00000118:	l32 r1,[r7+0]           	R1=MEM[0x00007FBC]=0x00000002
-0x0000011C:	add r1,r1,r2            	R1=R1+R2=0x00000003,SR=0x00000000
-0x00000120:	add r2,r1,r0            	R2=R1+R0=0x00000003,SR=0x00000000
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007FBC,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007FC0]{0x00001FF4}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007FC4]{0x00007FD0}
-0x00000130:	ret                     	PC=MEM[0x00007FC8]=0x00000114
-0x00000114:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FCC,SR=0x00000000
-0x00000118:	l32 r1,[r7+0]           	R1=MEM[0x00007FD0]=0x00000005
-0x0000011C:	add r1,r1,r2            	R1=R1+R2=0x00000008,SR=0x00000000
-0x00000120:	add r2,r1,r0            	R2=R1+R0=0x00000008,SR=0x00000000
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007FD0,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007FD4]{0x00001FFA}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007FD8]{0x00007FE8}
-0x00000130:	ret                     	PC=MEM[0x00007FDC]=0x00000158
-0x00000158:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FE0,SR=0x00000000
-0x0000015C:	s32 [r7+0],r2           	MEM[0x00007FE8]=R2=0x00000008
-0x00000160:	mov r1,5                	R1=0x00000005
-0x00000164:	push r1                 	MEM[0x00007FE0]{0x00000005}={R1}
-0x00000168:	call -43                	PC=0x000000C0,MEM[0x00007FDC]=0x0000016C
-0x000000C0:	push r6                 	MEM[0x00007FD8]{0x00007FE8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FD4]{0x00001FFA}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FD0,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FD0,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF4,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FCC,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x00000005
-0x000000DC:	cmpi r1,2               	SR=0x00000000
-0x000000E0:	bge 2                   	PC=0x000000EC
-0x000000EC:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x00000005
-0x000000F0:	subi r1,r1,1            	R1=R1-0x00000001=0x00000004,SR=0x00000000
-0x000000F4:	push r1                 	MEM[0x00007FCC]{0x00000004}={R1}
-0x000000F8:	call -15                	PC=0x000000C0,MEM[0x00007FC8]=0x000000FC
-0x000000C0:	push r6                 	MEM[0x00007FC4]{0x00007FD0}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FC0]{0x00001FF4}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FBC,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FBC,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEF,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FB8,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000004
-0x000000DC:	cmpi r1,2               	SR=0x00000000
-0x000000E0:	bge 2                   	PC=0x000000EC
-0x000000EC:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000004
-0x000000F0:	subi r1,r1,1            	R1=R1-0x00000001=0x00000003,SR=0x00000000
-0x000000F4:	push r1                 	MEM[0x00007FB8]{0x00000003}={R1}
-0x000000F8:	call -15                	PC=0x000000C0,MEM[0x00007FB4]=0x000000FC
-0x000000C0:	push r6                 	MEM[0x00007FB0]{0x00007FBC}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FAC]{0x00001FEF}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FA8,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FA8,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEA,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FA4,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000003
-0x000000DC:	cmpi r1,2               	SR=0x00000000
-0x000000E0:	bge 2                   	PC=0x000000EC
-0x000000EC:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000003
-0x000000F0:	subi r1,r1,1            	R1=R1-0x00000001=0x00000002,SR=0x00000000
-0x000000F4:	push r1                 	MEM[0x00007FA4]{0x00000002}={R1}
-0x000000F8:	call -15                	PC=0x000000C0,MEM[0x00007FA0]=0x000000FC
-0x000000C0:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
-0x000000DC:	cmpi r1,2               	SR=0x00000040
-0x000000E0:	bge 2                   	PC=0x000000EC
-0x000000EC:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
-0x000000F0:	subi r1,r1,1            	R1=R1-0x00000001=0x00000001,SR=0x00000000
-0x000000F4:	push r1                 	MEM[0x00007F90]{0x00000001}={R1}
-0x000000F8:	call -15                	PC=0x000000C0,MEM[0x00007F8C]=0x000000FC
-0x000000C0:	push r6                 	MEM[0x00007F88]{0x00007F94}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F84]{0x00001FE5}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F80,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F80,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE0,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F7C,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000001
-0x000000DC:	cmpi r1,2               	SR=0x00000011
-0x000000E0:	bge 2                   	PC=0x000000E4
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007F90]=0x00000001
-0x000000E8:	bun 14                  	PC=0x00000124
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F80,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F84]{0x00001FE5}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F88]{0x00007F94}
-0x00000130:	ret                     	PC=MEM[0x00007F8C]=0x000000FC
-0x000000FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F90,SR=0x00000000
-0x00000100:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000002
-0x00000104:	subi r1,r1,2            	R1=R1-0x00000002=0x00000000,SR=0x00000040
-0x00000108:	push r1                 	MEM[0x00007F90]{0x00000000}={R1}
-0x0000010C:	s32 [r7+0],r2           	MEM[0x00007F94]=R2=0x00000001
-0x00000110:	call -21                	PC=0x000000C0,MEM[0x00007F8C]=0x00000114
-0x000000C0:	push r6                 	MEM[0x00007F88]{0x00007F94}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F84]{0x00001FE5}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F80,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F80,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE0,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F7C,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007F90]=0x00000000
-0x000000DC:	cmpi r1,2               	SR=0x00000011
-0x000000E0:	bge 2                   	PC=0x000000E4
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007F90]=0x00000000
-0x000000E8:	bun 14                  	PC=0x00000124
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F80,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F84]{0x00001FE5}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F88]{0x00007F94}
-0x00000130:	ret                     	PC=MEM[0x00007F8C]=0x00000114
-0x00000114:	addi sp,sp,4            	SP=SP+0x00000004=0x00007F90,SR=0x00000000
-0x00000118:	l32 r1,[r7+0]           	R1=MEM[0x00007F94]=0x00000001
-0x0000011C:	add r1,r1,r2            	R1=R1+R2=0x00000001,SR=0x00000000
-0x00000120:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
-0x00000130:	ret                     	PC=MEM[0x00007FA0]=0x000000FC
-0x000000FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
-0x00000100:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000003
-0x00000104:	subi r1,r1,2            	R1=R1-0x00000002=0x00000001,SR=0x00000000
-0x00000108:	push r1                 	MEM[0x00007FA4]{0x00000001}={R1}
-0x0000010C:	s32 [r7+0],r2           	MEM[0x00007FA8]=R2=0x00000001
-0x00000110:	call -21                	PC=0x000000C0,MEM[0x00007FA0]=0x00000114
-0x000000C0:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000001
-0x000000DC:	cmpi r1,2               	SR=0x00000011
-0x000000E0:	bge 2                   	PC=0x000000E4
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FA4]=0x00000001
-0x000000E8:	bun 14                  	PC=0x00000124
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
-0x00000130:	ret                     	PC=MEM[0x00007FA0]=0x00000114
-0x00000114:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
-0x00000118:	l32 r1,[r7+0]           	R1=MEM[0x00007FA8]=0x00000001
-0x0000011C:	add r1,r1,r2            	R1=R1+R2=0x00000002,SR=0x00000000
-0x00000120:	add r2,r1,r0            	R2=R1+R0=0x00000002,SR=0x00000000
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007FA8,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007FAC]{0x00001FEF}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007FB0]{0x00007FBC}
-0x00000130:	ret                     	PC=MEM[0x00007FB4]=0x000000FC
-0x000000FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FB8,SR=0x00000000
-0x00000100:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000004
-0x00000104:	subi r1,r1,2            	R1=R1-0x00000002=0x00000002,SR=0x00000000
-0x00000108:	push r1                 	MEM[0x00007FB8]{0x00000002}={R1}
-0x0000010C:	s32 [r7+0],r2           	MEM[0x00007FBC]=R2=0x00000002
-0x00000110:	call -21                	PC=0x000000C0,MEM[0x00007FB4]=0x00000114
-0x000000C0:	push r6                 	MEM[0x00007FB0]{0x00007FBC}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FAC]{0x00001FEF}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FA8,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FA8,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEA,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FA4,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000002
-0x000000DC:	cmpi r1,2               	SR=0x00000040
-0x000000E0:	bge 2                   	PC=0x000000EC
-0x000000EC:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000002
-0x000000F0:	subi r1,r1,1            	R1=R1-0x00000001=0x00000001,SR=0x00000000
-0x000000F4:	push r1                 	MEM[0x00007FA4]{0x00000001}={R1}
-0x000000F8:	call -15                	PC=0x000000C0,MEM[0x00007FA0]=0x000000FC
-0x000000C0:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000001
-0x000000DC:	cmpi r1,2               	SR=0x00000011
-0x000000E0:	bge 2                   	PC=0x000000E4
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FA4]=0x00000001
-0x000000E8:	bun 14                  	PC=0x00000124
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
-0x00000130:	ret                     	PC=MEM[0x00007FA0]=0x000000FC
-0x000000FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
-0x00000100:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000002
-0x00000104:	subi r1,r1,2            	R1=R1-0x00000002=0x00000000,SR=0x00000040
-0x00000108:	push r1                 	MEM[0x00007FA4]{0x00000000}={R1}
-0x0000010C:	s32 [r7+0],r2           	MEM[0x00007FA8]=R2=0x00000001
-0x00000110:	call -21                	PC=0x000000C0,MEM[0x00007FA0]=0x00000114
-0x000000C0:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000000
-0x000000DC:	cmpi r1,2               	SR=0x00000011
-0x000000E0:	bge 2                   	PC=0x000000E4
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FA4]=0x00000000
-0x000000E8:	bun 14                  	PC=0x00000124
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
-0x00000130:	ret                     	PC=MEM[0x00007FA0]=0x00000114
-0x00000114:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
-0x00000118:	l32 r1,[r7+0]           	R1=MEM[0x00007FA8]=0x00000001
-0x0000011C:	add r1,r1,r2            	R1=R1+R2=0x00000001,SR=0x00000000
-0x00000120:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007FA8,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007FAC]{0x00001FEF}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007FB0]{0x00007FBC}
-0x00000130:	ret                     	PC=MEM[0x00007FB4]=0x00000114
-0x00000114:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FB8,SR=0x00000000
-0x00000118:	l32 r1,[r7+0]           	R1=MEM[0x00007FBC]=0x00000002
-0x0000011C:	add r1,r1,r2            	R1=R1+R2=0x00000003,SR=0x00000000
-0x00000120:	add r2,r1,r0            	R2=R1+R0=0x00000003,SR=0x00000000
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007FBC,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007FC0]{0x00001FF4}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007FC4]{0x00007FD0}
-0x00000130:	ret                     	PC=MEM[0x00007FC8]=0x000000FC
-0x000000FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FCC,SR=0x00000000
-0x00000100:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x00000005
-0x00000104:	subi r1,r1,2            	R1=R1-0x00000002=0x00000003,SR=0x00000000
-0x00000108:	push r1                 	MEM[0x00007FCC]{0x00000003}={R1}
-0x0000010C:	s32 [r7+0],r2           	MEM[0x00007FD0]=R2=0x00000003
-0x00000110:	call -21                	PC=0x000000C0,MEM[0x00007FC8]=0x00000114
-0x000000C0:	push r6                 	MEM[0x00007FC4]{0x00007FD0}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FC0]{0x00001FF4}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FBC,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FBC,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEF,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FB8,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000003
-0x000000DC:	cmpi r1,2               	SR=0x00000000
-0x000000E0:	bge 2                   	PC=0x000000EC
-0x000000EC:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000003
-0x000000F0:	subi r1,r1,1            	R1=R1-0x00000001=0x00000002,SR=0x00000000
-0x000000F4:	push r1                 	MEM[0x00007FB8]{0x00000002}={R1}
-0x000000F8:	call -15                	PC=0x000000C0,MEM[0x00007FB4]=0x000000FC
-0x000000C0:	push r6                 	MEM[0x00007FB0]{0x00007FBC}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FAC]{0x00001FEF}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FA8,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FA8,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEA,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FA4,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000002
-0x000000DC:	cmpi r1,2               	SR=0x00000040
-0x000000E0:	bge 2                   	PC=0x000000EC
-0x000000EC:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000002
-0x000000F0:	subi r1,r1,1            	R1=R1-0x00000001=0x00000001,SR=0x00000000
-0x000000F4:	push r1                 	MEM[0x00007FA4]{0x00000001}={R1}
-0x000000F8:	call -15                	PC=0x000000C0,MEM[0x00007FA0]=0x000000FC
-0x000000C0:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000001
-0x000000DC:	cmpi r1,2               	SR=0x00000011
-0x000000E0:	bge 2                   	PC=0x000000E4
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FA4]=0x00000001
-0x000000E8:	bun 14                  	PC=0x00000124
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
-0x00000130:	ret                     	PC=MEM[0x00007FA0]=0x000000FC
-0x000000FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
-0x00000100:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000002
-0x00000104:	subi r1,r1,2            	R1=R1-0x00000002=0x00000000,SR=0x00000040
-0x00000108:	push r1                 	MEM[0x00007FA4]{0x00000000}={R1}
-0x0000010C:	s32 [r7+0],r2           	MEM[0x00007FA8]=R2=0x00000001
-0x00000110:	call -21                	PC=0x000000C0,MEM[0x00007FA0]=0x00000114
-0x000000C0:	push r6                 	MEM[0x00007F9C]{0x00007FA8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007F98]{0x00001FEA}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F94,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F94,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE5,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007F90,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FA4]=0x00000000
-0x000000DC:	cmpi r1,2               	SR=0x00000011
-0x000000E0:	bge 2                   	PC=0x000000E4
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FA4]=0x00000000
-0x000000E8:	bun 14                  	PC=0x00000124
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007F94,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007F98]{0x00001FEA}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007F9C]{0x00007FA8}
-0x00000130:	ret                     	PC=MEM[0x00007FA0]=0x00000114
-0x00000114:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FA4,SR=0x00000000
-0x00000118:	l32 r1,[r7+0]           	R1=MEM[0x00007FA8]=0x00000001
-0x0000011C:	add r1,r1,r2            	R1=R1+R2=0x00000001,SR=0x00000000
-0x00000120:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007FA8,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007FAC]{0x00001FEF}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007FB0]{0x00007FBC}
-0x00000130:	ret                     	PC=MEM[0x00007FB4]=0x000000FC
-0x000000FC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FB8,SR=0x00000000
-0x00000100:	l32 r1,[r7+4]           	R1=MEM[0x00007FCC]=0x00000003
-0x00000104:	subi r1,r1,2            	R1=R1-0x00000002=0x00000001,SR=0x00000000
-0x00000108:	push r1                 	MEM[0x00007FB8]{0x00000001}={R1}
-0x0000010C:	s32 [r7+0],r2           	MEM[0x00007FBC]=R2=0x00000001
-0x00000110:	call -21                	PC=0x000000C0,MEM[0x00007FB4]=0x00000114
-0x000000C0:	push r6                 	MEM[0x00007FB0]{0x00007FBC}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FAC]{0x00001FEF}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FA8,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FA8,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEA,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FA4,SR=0x00000000
-0x000000D8:	l32 r1,[r7+4]           	R1=MEM[0x00007FB8]=0x00000001
-0x000000DC:	cmpi r1,2               	SR=0x00000011
-0x000000E0:	bge 2                   	PC=0x000000E4
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FB8]=0x00000001
-0x000000E8:	bun 14                  	PC=0x00000124
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007FA8,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007FAC]{0x00001FEF}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007FB0]{0x00007FBC}
-0x00000130:	ret                     	PC=MEM[0x00007FB4]=0x00000114
-0x00000114:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FB8,SR=0x00000000
-0x00000118:	l32 r1,[r7+0]           	R1=MEM[0x00007FBC]=0x00000001
-0x0000011C:	add r1,r1,r2            	R1=R1+R2=0x00000002,SR=0x00000000
-0x00000120:	add r2,r1,r0            	R2=R1+R0=0x00000002,SR=0x00000000
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007FBC,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007FC0]{0x00001FF4}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007FC4]{0x00007FD0}
-0x00000130:	ret                     	PC=MEM[0x00007FC8]=0x00000114
-0x00000114:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FCC,SR=0x00000000
-0x00000118:	l32 r1,[r7+0]           	R1=MEM[0x00007FD0]=0x00000003
-0x0000011C:	add r1,r1,r2            	R1=R1+R2=0x00000005,SR=0x00000000
-0x00000120:	add r2,r1,r0            	R2=R1+R0=0x00000005,SR=0x00000000
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007FD0,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007FD4]{0x00001FFA}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007FD8]{0x00007FE8}
-0x00000130:	ret                     	PC=MEM[0x00007FDC]=0x0000016C
-0x0000016C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FE0,SR=0x00000000
-0x00000170:	s32 [r7-1],r2           	MEM[0x00007FE4]=R2=0x00000005
-0x00000174:	l32 r1,[r7+0]           	R1=MEM[0x00007FE8]=0x00000008
-0x00000178:	l32 r2,[r7-1]           	R2=MEM[0x00007FE4]=0x00000005
-0x0000017C:	add r1,r1,r2            	R1=R1+R2=0x0000000D,SR=0x00000000
-0x00000180:	add r2,r1,r0            	R2=R1+R0=0x0000000D,SR=0x00000000
-0x00000184:	add sp,r6,r0            	SP=R6+R0=0x00007FE8,SR=0x00000000
-0x00000188:	pop r7                  	{R7}=MEM[0x00007FEC]{0x00001FFD}
-0x0000018C:	pop r6                  	{R6}=MEM[0x00007FF0]{0x00007FF4}
-0x00000190:	ret                     	PC=MEM[0x00007FF4]=0x00000028
-0x00000028:	call -9                 	PC=0x00000008,MEM[0x00007FF4]=0x0000002C
-0x00000008:	int 0                   	CR=0x00000000,PC=0x00000000
-[END OF SIMULATION]
\ No newline at end of file
diff --git a/examples/out/poxim-fib-recursion.poximdump b/examples/out/poxim-fib-recursion.poximdump
deleted file mode 100644
index edd3c0c3..00000000
--- a/examples/out/poxim-fib-recursion.poximdump
+++ /dev/null
@@ -1,102 +0,0 @@
-   0:    03 c0 7f fc       mov    sp, 32764
-   4:    dc 00 00 01       bun    1        # 0xc
-   8:    fc 00 00 00       int    0
-   c:    28 00 01 80       push   r6
-  10:    28 00 01 c0       push   r7
-  14:    08 de 00 00       mov    r6, sp
-  18:    08 e6 00 00       mov    r7, r6
-  1c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  20:    4f de 00 00       subi   sp, sp, 0
-  24:    e4 00 00 43       call   67<<2        # 0x134
-  28:    e7 ff ff f7       call   -9<<2        # 0x8
-  2c:    0b c6 00 00       mov    sp, r6
-  30:    2c 00 01 c0       pop    r7
-  34:    2c 00 01 80       pop    r6
-  38:    7c 00 00 00       ret   
-  3c:    28 00 01 80       push   r6
-  40:    28 00 01 c0       push   r7
-  44:    08 de 00 00       mov    r6, sp
-  48:    08 e6 00 00       mov    r7, r6
-  4c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  50:    4f de 00 08       subi   sp, sp, 8
-  54:    68 27 00 04       l32    r1, [r7+4]<<2
-  58:    74 27 00 00       s32    [r7+0]<<2, r1
-  5c:    00 20 00 00       mov    r1, 0
-  60:    74 27 ff ff       s32    [r7-1]<<2, r1
-  64:    68 27 00 18       l32    r1, [r7+24]<<2
-  68:    10 01 0d 01       srl    r0, r1, r1, 1
-  6c:    68 47 ff fc       l32    r2, [r7-4]<<2
-  70:    14 02 08 00       cmp    r2, r1
-  74:    a8 00 00 0d       bae    13        # 0xac
-  78:    dc 00 00 05       bun    5        # 0x90
-  7c:    68 27 ff fc       l32    r1, [r7-4]<<2
-  80:    08 41 00 00       mov    r2, r1
-  84:    48 21 00 01       addi   r1, r1, 1
-  88:    74 27 ff ff       s32    [r7-1]<<2, r1
-  8c:    df ff ff f5       bun    -11        # 0x64
-  90:    68 27 00 00       l32    r1, [r7+0]<<2
-  94:    08 41 00 00       mov    r2, r1
-  98:    48 21 00 01       addi   r1, r1, 1
-  9c:    74 27 00 00       s32    [r7+0]<<2, r1
-  a0:    68 27 00 05       l32    r1, [r7+5]<<2
-  a4:    6c 22 00 00       s8     [r2+0], r1
-  a8:    df ff ff f4       bun    -12        # 0x7c
-  ac:    68 47 00 04       l32    r2, [r7+4]<<2
-  b0:    0b c6 00 00       mov    sp, r6
-  b4:    2c 00 01 c0       pop    r7
-  b8:    2c 00 01 80       pop    r6
-  bc:    7c 00 00 00       ret   
-  c0:    28 00 01 80       push   r6
-  c4:    28 00 01 c0       push   r7
-  c8:    08 de 00 00       mov    r6, sp
-  cc:    08 e6 00 00       mov    r7, r6
-  d0:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  d4:    4f de 00 04       subi   sp, sp, 4
-  d8:    68 27 00 04       l32    r1, [r7+4]<<2
-  dc:    5c 01 00 02       cmpi   r1, 2
-  e0:    bc 00 00 02       bge    2        # 0xec
-  e4:    68 47 00 04       l32    r2, [r7+4]<<2
-  e8:    dc 00 00 0e       bun    14        # 0x124
-  ec:    68 27 00 04       l32    r1, [r7+4]<<2
-  f0:    4c 21 00 01       subi   r1, r1, 1
-  f4:    28 00 00 40       push   r1
-  f8:    e7 ff ff f1       call   -15<<2        # 0xc0
-  fc:    4b de 00 04       addi   sp, sp, 4
- 100:    68 27 00 04       l32    r1, [r7+4]<<2
- 104:    4c 21 00 02       subi   r1, r1, 2
- 108:    28 00 00 40       push   r1
- 10c:    74 47 00 00       s32    [r7+0]<<2, r2
- 110:    e7 ff ff eb       call   -21<<2        # 0xc0
- 114:    4b de 00 04       addi   sp, sp, 4
- 118:    68 27 00 00       l32    r1, [r7+0]<<2
- 11c:    08 21 10 00       add    r1, r1, r2
- 120:    08 41 00 00       mov    r2, r1
- 124:    0b c6 00 00       mov    sp, r6
- 128:    2c 00 01 c0       pop    r7
- 12c:    2c 00 01 80       pop    r6
- 130:    7c 00 00 00       ret   
- 134:    28 00 01 80       push   r6
- 138:    28 00 01 c0       push   r7
- 13c:    08 de 00 00       mov    r6, sp
- 140:    08 e6 00 00       mov    r7, r6
- 144:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
- 148:    4f de 00 08       subi   sp, sp, 8
- 14c:    00 20 00 06       mov    r1, 6
- 150:    28 00 00 40       push   r1
- 154:    e7 ff ff da       call   -38<<2        # 0xc0
- 158:    4b de 00 04       addi   sp, sp, 4
- 15c:    74 47 00 00       s32    [r7+0]<<2, r2
- 160:    00 20 00 05       mov    r1, 5
- 164:    28 00 00 40       push   r1
- 168:    e7 ff ff d5       call   -43<<2        # 0xc0
- 16c:    4b de 00 04       addi   sp, sp, 4
- 170:    74 47 ff ff       s32    [r7-1]<<2, r2
- 174:    68 27 00 00       l32    r1, [r7+0]<<2
- 178:    68 47 ff ff       l32    r2, [r7-1]<<2
- 17c:    08 21 10 00       add    r1, r1, r2
- 180:    08 41 00 00       mov    r2, r1
- 184:    0b c6 00 00       mov    sp, r6
- 188:    2c 00 01 c0       pop    r7
- 18c:    2c 00 01 80       pop    r6
- 190:    7c 00 00 00       ret   
-  ...
diff --git a/examples/out/poxim-print-alphabet.interp b/examples/out/poxim-print-alphabet.interp
deleted file mode 100644
index e7d577a1..00000000
--- a/examples/out/poxim-print-alphabet.interp
+++ /dev/null
@@ -1,438 +0,0 @@
-[START OF SIMULATION]
-0x00000000:	mov sp,32764            	SP=0x00007FFC
-0x00000004:	bun 1                   	PC=0x0000000C
-0x0000000C:	push r6                 	MEM[0x00007FFC]{0x00000000}={R6}
-0x00000010:	push r7                 	MEM[0x00007FF8]{0x00000000}={R7}
-0x00000014:	add r6,sp,r0            	R6=SP+R0=0x00007FF4,SR=0x00000000
-0x00000018:	add r7,r6,r0            	R7=R6+R0=0x00007FF4,SR=0x00000000
-0x0000001C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFD,SR=0x00000000
-0x00000020:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FF4,SR=0x00000000
-0x00000024:	call 66                 	PC=0x00000130,MEM[0x00007FF4]=0x00000028
-0x00000130:	push r6                 	MEM[0x00007FF0]{0x00007FF4}={R6}
-0x00000134:	push r7                 	MEM[0x00007FEC]{0x00001FFD}={R7}
-0x00000138:	add r6,sp,r0            	R6=SP+R0=0x00007FE8,SR=0x00000000
-0x0000013C:	add r7,r6,r0            	R7=R6+R0=0x00007FE8,SR=0x00000000
-0x00000140:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFA,SR=0x00000000
-0x00000144:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FE4,SR=0x00000000
-0x00000148:	mov r1,26               	R1=0x0000001A
-0x0000014C:	s32 [r7+0],r1           	MEM[0x00007FE8]=R1=0x0000001A
-0x00000150:	l32 r1,[r7+0]           	R1=MEM[0x00007FE8]=0x0000001A
-0x00000154:	push r1                 	MEM[0x00007FE4]{0x0000001A}={R1}
-0x00000158:	call -39                	PC=0x000000C0,MEM[0x00007FE0]=0x0000015C
-0x000000C0:	push r6                 	MEM[0x00007FDC]{0x00007FE8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FD8]{0x00001FFA}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FD4,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FD4,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF5,SR=0x00000000
-0x000000D4:	subi sp,sp,8            	SP=SP-0x00000008=0x00007FCC,SR=0x00000000
-0x000000D8:	mov r1,0                	R1=0x00000000
-0x000000DC:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000000
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000000
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000000
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x00000061,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000061
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000061
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000061
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000000
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x00000001,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000001
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000001
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000001
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x00000062,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000062
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000062
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000062
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000001
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x00000002,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000002
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000002
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000002
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x00000063,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000063
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000063
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000063
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000002
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x00000003,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000003
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000003
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000003
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x00000064,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000064
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000064
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000064
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000003
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x00000004,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000004
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000004
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000004
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x00000065,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000065
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000065
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000065
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000004
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x00000005,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000005
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000005
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000005
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x00000066,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000066
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000066
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000066
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000005
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x00000006,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000006
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000006
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000006
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x00000067,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000067
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000067
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000067
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000006
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x00000007,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000007
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000007
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000007
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x00000068,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000068
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000068
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000068
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000007
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x00000008,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000008
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000008
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000008
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x00000069,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000069
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000069
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000069
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000008
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x00000009,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000009
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000009
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000009
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x0000006A,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x0000006A
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x0000006A
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000006A
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000009
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000A,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000A
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000A
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000A
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x0000006B,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x0000006B
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x0000006B
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000006B
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000A
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000B,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000B
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000B
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000B
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x0000006C,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x0000006C
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x0000006C
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000006C
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000B
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000C,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000C
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000C
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000C
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x0000006D,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x0000006D
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x0000006D
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000006D
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000C
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000D,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000D
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000D
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000D
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x0000006E,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x0000006E
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x0000006E
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000006E
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000D
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000E,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000E
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000E
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000E
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x0000006F,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x0000006F
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x0000006F
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000006F
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000E
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000F,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000F
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000F
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000F
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x00000070,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000070
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000070
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000070
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000F
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x00000010,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000010
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000010
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000010
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x00000071,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000071
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000071
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000071
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000010
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x00000011,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000011
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000011
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000011
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x00000072,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000072
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000072
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000072
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000011
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x00000012,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000012
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000012
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000012
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x00000073,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000073
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000073
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000073
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000012
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x00000013,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000013
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000013
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000013
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x00000074,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000074
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000074
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000074
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000013
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x00000014,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000014
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000014
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000014
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x00000075,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000075
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000075
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000075
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000014
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x00000015,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000015
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000015
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000015
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x00000076,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000076
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000076
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000076
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000015
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x00000016,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000016
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000016
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000016
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x00000077,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000077
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000077
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000077
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000016
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x00000017,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000017
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000017
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000017
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x00000078,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000078
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000078
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000078
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000017
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x00000018,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000018
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000018
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000018
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x00000079,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x00000079
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x00000079
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000079
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000018
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x00000019,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000019
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000019
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 11                  	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000019
-0x000000F4:	addi r1,r1,97           	R1=R1+0x00000061=0x0000007A,SR=0x00000000
-0x000000F8:	s32 [r7-1],r1           	MEM[0x00007FD0]=R1=0x0000007A
-0x000000FC:	mov r8,1024             	R8=0x00000400
-0x00000100:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000104:	l32 r2,[r7-1]           	R2=MEM[0x00007FD0]=0x0000007A
-0x00000108:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000007A
-0x0000010C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000019
-0x00000110:	addi r1,r1,1            	R1=R1+0x00000001=0x0000001A,SR=0x00000000
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000001A
-0x00000118:	bun -15                 	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001A
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x0000001A
-0x000000E8:	cmp r1,r2               	SR=0x00000040
-0x000000EC:	bge 11                  	PC=0x0000011C
-0x0000011C:	l32 r2,[r7+0]           	R2=MEM[0x00007FD4]=0x0000001A
-0x00000120:	add sp,r6,r0            	SP=R6+R0=0x00007FD4,SR=0x00000000
-0x00000124:	pop r7                  	{R7}=MEM[0x00007FD8]{0x00001FFA}
-0x00000128:	pop r6                  	{R6}=MEM[0x00007FDC]{0x00007FE8}
-0x0000012C:	ret                     	PC=MEM[0x00007FE0]=0x0000015C
-0x0000015C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FE4,SR=0x00000000
-0x00000160:	add sp,r6,r0            	SP=R6+R0=0x00007FE8,SR=0x00000000
-0x00000164:	pop r7                  	{R7}=MEM[0x00007FEC]{0x00001FFD}
-0x00000168:	pop r6                  	{R6}=MEM[0x00007FF0]{0x00007FF4}
-0x0000016C:	ret                     	PC=MEM[0x00007FF4]=0x00000028
-0x00000028:	call -9                 	PC=0x00000008,MEM[0x00007FF4]=0x0000002C
-0x00000008:	int 0                   	CR=0x00000000,PC=0x00000000
-[TERMINAL]
-abcdefghijklmnopqrstuvwxyz
-[END OF SIMULATION]
\ No newline at end of file
diff --git a/examples/out/poxim-print-alphabet.poximdump b/examples/out/poxim-print-alphabet.poximdump
deleted file mode 100644
index f6ef8384..00000000
--- a/examples/out/poxim-print-alphabet.poximdump
+++ /dev/null
@@ -1,95 +0,0 @@
-   0:    03 c0 7f fc       mov    sp, 32764
-   4:    dc 00 00 01       bun    1        # 0xc
-   8:    fc 00 00 00       int    0
-   c:    28 00 01 80       push   r6
-  10:    28 00 01 c0       push   r7
-  14:    08 de 00 00       mov    r6, sp
-  18:    08 e6 00 00       mov    r7, r6
-  1c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  20:    4f de 00 00       subi   sp, sp, 0
-  24:    e4 00 00 42       call   66<<2        # 0x130
-  28:    e7 ff ff f7       call   -9<<2        # 0x8
-  2c:    0b c6 00 00       mov    sp, r6
-  30:    2c 00 01 c0       pop    r7
-  34:    2c 00 01 80       pop    r6
-  38:    7c 00 00 00       ret   
-  3c:    28 00 01 80       push   r6
-  40:    28 00 01 c0       push   r7
-  44:    08 de 00 00       mov    r6, sp
-  48:    08 e6 00 00       mov    r7, r6
-  4c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  50:    4f de 00 08       subi   sp, sp, 8
-  54:    68 27 00 04       l32    r1, [r7+4]<<2
-  58:    74 27 00 00       s32    [r7+0]<<2, r1
-  5c:    00 20 00 00       mov    r1, 0
-  60:    74 27 ff ff       s32    [r7-1]<<2, r1
-  64:    68 27 00 18       l32    r1, [r7+24]<<2
-  68:    10 01 0d 01       srl    r0, r1, r1, 1
-  6c:    68 47 ff fc       l32    r2, [r7-4]<<2
-  70:    14 02 08 00       cmp    r2, r1
-  74:    a8 00 00 0d       bae    13        # 0xac
-  78:    dc 00 00 05       bun    5        # 0x90
-  7c:    68 27 ff fc       l32    r1, [r7-4]<<2
-  80:    08 41 00 00       mov    r2, r1
-  84:    48 21 00 01       addi   r1, r1, 1
-  88:    74 27 ff ff       s32    [r7-1]<<2, r1
-  8c:    df ff ff f5       bun    -11        # 0x64
-  90:    68 27 00 00       l32    r1, [r7+0]<<2
-  94:    08 41 00 00       mov    r2, r1
-  98:    48 21 00 01       addi   r1, r1, 1
-  9c:    74 27 00 00       s32    [r7+0]<<2, r1
-  a0:    68 27 00 05       l32    r1, [r7+5]<<2
-  a4:    6c 22 00 00       s8     [r2+0], r1
-  a8:    df ff ff f4       bun    -12        # 0x7c
-  ac:    68 47 00 04       l32    r2, [r7+4]<<2
-  b0:    0b c6 00 00       mov    sp, r6
-  b4:    2c 00 01 c0       pop    r7
-  b8:    2c 00 01 80       pop    r6
-  bc:    7c 00 00 00       ret   
-  c0:    28 00 01 80       push   r6
-  c4:    28 00 01 c0       push   r7
-  c8:    08 de 00 00       mov    r6, sp
-  cc:    08 e6 00 00       mov    r7, r6
-  d0:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  d4:    4f de 00 08       subi   sp, sp, 8
-  d8:    00 20 00 00       mov    r1, 0
-  dc:    74 27 00 00       s32    [r7+0]<<2, r1
-  e0:    68 27 00 00       l32    r1, [r7+0]<<2
-  e4:    68 47 00 04       l32    r2, [r7+4]<<2
-  e8:    14 01 10 00       cmp    r1, r2
-  ec:    bc 00 00 0b       bge    11        # 0x11c
-  f0:    68 27 00 00       l32    r1, [r7+0]<<2
-  f4:    48 21 00 61       addi   r1, r1, 97
-  f8:    74 27 ff ff       s32    [r7-1]<<2, r1
-  fc:    01 00 04 00       mov    r8, 1024
- 100:    68 28 00 00       l32    r1, [r8+0]<<2
- 104:    68 47 ff ff       l32    r2, [r7-1]<<2
- 108:    74 41 00 00       s32    [r1+0]<<2, r2
- 10c:    68 27 00 00       l32    r1, [r7+0]<<2
- 110:    48 21 00 01       addi   r1, r1, 1
- 114:    74 27 00 00       s32    [r7+0]<<2, r1
- 118:    df ff ff f1       bun    -15        # 0xe0
- 11c:    68 47 00 00       l32    r2, [r7+0]<<2
- 120:    0b c6 00 00       mov    sp, r6
- 124:    2c 00 01 c0       pop    r7
- 128:    2c 00 01 80       pop    r6
- 12c:    7c 00 00 00       ret   
- 130:    28 00 01 80       push   r6
- 134:    28 00 01 c0       push   r7
- 138:    08 de 00 00       mov    r6, sp
- 13c:    08 e6 00 00       mov    r7, r6
- 140:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
- 144:    4f de 00 04       subi   sp, sp, 4
- 148:    00 20 00 1a       mov    r1, 26
- 14c:    74 27 00 00       s32    [r7+0]<<2, r1
- 150:    68 27 00 00       l32    r1, [r7+0]<<2
- 154:    28 00 00 40       push   r1
- 158:    e7 ff ff d9       call   -39<<2        # 0xc0
- 15c:    4b de 00 04       addi   sp, sp, 4
- 160:    0b c6 00 00       mov    sp, r6
- 164:    2c 00 01 c0       pop    r7
- 168:    2c 00 01 80       pop    r6
- 16c:    7c 00 00 00       ret   
-  ...
-1000:    22 22 22 22       not    r17, r2
-  ...
diff --git a/examples/out/poxim-print-num.interp b/examples/out/poxim-print-num.interp
deleted file mode 100644
index b38eb4b7..00000000
--- a/examples/out/poxim-print-num.interp
+++ /dev/null
@@ -1,218 +0,0 @@
-[START OF SIMULATION]
-0x00000000:	mov sp,32764            	SP=0x00007FFC
-0x00000004:	bun 1                   	PC=0x0000000C
-0x0000000C:	push r6                 	MEM[0x00007FFC]{0x00000000}={R6}
-0x00000010:	push r7                 	MEM[0x00007FF8]{0x00000000}={R7}
-0x00000014:	add r6,sp,r0            	R6=SP+R0=0x00007FF4,SR=0x00000000
-0x00000018:	add r7,r6,r0            	R7=R6+R0=0x00007FF4,SR=0x00000000
-0x0000001C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFD,SR=0x00000000
-0x00000020:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FF4,SR=0x00000000
-0x00000024:	call 116                	PC=0x000001F8,MEM[0x00007FF4]=0x00000028
-0x000001F8:	push r6                 	MEM[0x00007FF0]{0x00007FF4}={R6}
-0x000001FC:	push r7                 	MEM[0x00007FEC]{0x00001FFD}={R7}
-0x00000200:	add r6,sp,r0            	R6=SP+R0=0x00007FE8,SR=0x00000000
-0x00000204:	add r7,r6,r0            	R7=R6+R0=0x00007FE8,SR=0x00000000
-0x00000208:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFA,SR=0x00000000
-0x0000020C:	subi sp,sp,8            	SP=SP-0x00000008=0x00007FE0,SR=0x00000000
-0x00000210:	mov r1,123              	R1=0x0000007B
-0x00000214:	s32 [r7+0],r1           	MEM[0x00007FE8]=R1=0x0000007B
-0x00000218:	mov r1,100              	R1=0x00000064
-0x0000021C:	s32 [r7-1],r1           	MEM[0x00007FE4]=R1=0x00000064
-0x00000220:	l32 r1,[r7+0]           	R1=MEM[0x00007FE8]=0x0000007B
-0x00000224:	push r1                 	MEM[0x00007FE0]{0x0000007B}={R1}
-0x00000228:	call -77                	PC=0x000000F8,MEM[0x00007FDC]=0x0000022C
-0x000000F8:	push r6                 	MEM[0x00007FD8]{0x00007FE8}={R6}
-0x000000FC:	push r7                 	MEM[0x00007FD4]{0x00001FFA}={R7}
-0x00000100:	add r6,sp,r0            	R6=SP+R0=0x00007FD0,SR=0x00000000
-0x00000104:	add r7,r6,r0            	R7=R6+R0=0x00007FD0,SR=0x00000000
-0x00000108:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF4,SR=0x00000000
-0x0000010C:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FC4,SR=0x00000000
-0x00000110:	mov r1,1                	R1=0x00000001
-0x00000114:	s32 [r7+0],r1           	MEM[0x00007FD0]=R1=0x00000001
-0x00000118:	mov r1,0                	R1=0x00000000
-0x0000011C:	s32 [r7-1],r1           	MEM[0x00007FCC]=R1=0x00000000
-0x00000120:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x0000007B
-0x00000124:	cmpi r1,0               	SR=0x00000000
-0x00000128:	bge 6                   	PC=0x00000144
-0x00000144:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x0000007B
-0x00000148:	l32 r2,[r7+0]           	R2=MEM[0x00007FD0]=0x00000001
-0x0000014C:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x0000007B,SR=0x00000000
-0x00000150:	cmpi r1,11              	SR=0x00000000
-0x00000154:	ble 5                   	PC=0x00000158
-0x00000158:	l32 r1,[r7+0]           	R1=MEM[0x00007FD0]=0x00000001
-0x0000015C:	mov r2,10               	R2=0x0000000A
-0x00000160:	muls r8,r1,r1,r2        	R8:R1=R1*R2=0x000000000000000A,SR=0x00000000
-0x00000164:	s32 [r7+0],r1           	MEM[0x00007FD0]=R1=0x0000000A
-0x00000168:	bun -10                 	PC=0x00000144
-0x00000144:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x0000007B
-0x00000148:	l32 r2,[r7+0]           	R2=MEM[0x00007FD0]=0x0000000A
-0x0000014C:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000003,R1=R1/R2=0x0000000C,SR=0x00000001
-0x00000150:	cmpi r1,11              	SR=0x00000000
-0x00000154:	ble 5                   	PC=0x00000158
-0x00000158:	l32 r1,[r7+0]           	R1=MEM[0x00007FD0]=0x0000000A
-0x0000015C:	mov r2,10               	R2=0x0000000A
-0x00000160:	muls r8,r1,r1,r2        	R8:R1=R1*R2=0x0000000000000064,SR=0x00000000
-0x00000164:	s32 [r7+0],r1           	MEM[0x00007FD0]=R1=0x00000064
-0x00000168:	bun -10                 	PC=0x00000144
-0x00000144:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x0000007B
-0x00000148:	l32 r2,[r7+0]           	R2=MEM[0x00007FD0]=0x00000064
-0x0000014C:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000017,R1=R1/R2=0x00000001,SR=0x00000001
-0x00000150:	cmpi r1,11              	SR=0x00000011
-0x00000154:	ble 5                   	PC=0x0000016C
-0x0000016C:	l32 r1,[r7-1]           	R1=MEM[0x00007FCC]=0x00000000
-0x00000170:	cmpi r1,0               	SR=0x00000040
-0x00000174:	ble 5                   	PC=0x0000018C
-0x0000018C:	mov r1,43               	R1=0x0000002B
-0x00000190:	push r1                 	MEM[0x00007FC4]{0x0000002B}={R1}
-0x00000194:	call -54                	PC=0x000000C0,MEM[0x00007FC0]=0x00000198
-0x000000C0:	push r6                 	MEM[0x00007FBC]{0x00007FD0}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FB8]{0x00001FF4}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FB4,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FB4,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FED,SR=0x00000000
-0x000000D4:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB4,SR=0x00000000
-0x000000D8:	mov r8,1024             	R8=0x00000400
-0x000000DC:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x000000E0:	l32 r2,[r7+4]           	R2=MEM[0x00007FC4]=0x0000002B
-0x000000E4:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002B
-0x000000E8:	add sp,r6,r0            	SP=R6+R0=0x00007FB4,SR=0x00000000
-0x000000EC:	pop r7                  	{R7}=MEM[0x00007FB8]{0x00001FF4}
-0x000000F0:	pop r6                  	{R6}=MEM[0x00007FBC]{0x00007FD0}
-0x000000F4:	ret                     	PC=MEM[0x00007FC0]=0x00000198
-0x00000198:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC4,SR=0x00000000
-0x0000019C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD0]=0x00000064
-0x000001A0:	cmpi r1,0               	SR=0x00000000
-0x000001A4:	ble 16                  	PC=0x000001A8
-0x000001A8:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x0000007B
-0x000001AC:	l32 r2,[r7+0]           	R2=MEM[0x00007FD0]=0x00000064
-0x000001B0:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000017,R1=R1/R2=0x00000001,SR=0x00000001
-0x000001B4:	mov r2,10               	R2=0x0000000A
-0x000001B8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
-0x000001BC:	s32 [r7-2],r4           	MEM[0x00007FC8]=R4=0x00000001
-0x000001C0:	l32 r1,[r7-2]           	R1=MEM[0x00007FC8]=0x00000001
-0x000001C4:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
-0x000001C8:	push r1                 	MEM[0x00007FC4]{0x00000031}={R1}
-0x000001CC:	call -68                	PC=0x000000C0,MEM[0x00007FC0]=0x000001D0
-0x000000C0:	push r6                 	MEM[0x00007FBC]{0x00007FD0}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FB8]{0x00001FF4}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FB4,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FB4,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FED,SR=0x00000000
-0x000000D4:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB4,SR=0x00000000
-0x000000D8:	mov r8,1024             	R8=0x00000400
-0x000000DC:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x000000E0:	l32 r2,[r7+4]           	R2=MEM[0x00007FC4]=0x00000031
-0x000000E4:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
-0x000000E8:	add sp,r6,r0            	SP=R6+R0=0x00007FB4,SR=0x00000000
-0x000000EC:	pop r7                  	{R7}=MEM[0x00007FB8]{0x00001FF4}
-0x000000F0:	pop r6                  	{R6}=MEM[0x00007FBC]{0x00007FD0}
-0x000000F4:	ret                     	PC=MEM[0x00007FC0]=0x000001D0
-0x000001D0:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC4,SR=0x00000000
-0x000001D4:	l32 r1,[r7+0]           	R1=MEM[0x00007FD0]=0x00000064
-0x000001D8:	mov r2,10               	R2=0x0000000A
-0x000001DC:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x0000000A,SR=0x00000000
-0x000001E0:	s32 [r7+0],r1           	MEM[0x00007FD0]=R1=0x0000000A
-0x000001E4:	bun -19                 	PC=0x0000019C
-0x0000019C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD0]=0x0000000A
-0x000001A0:	cmpi r1,0               	SR=0x00000000
-0x000001A4:	ble 16                  	PC=0x000001A8
-0x000001A8:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x0000007B
-0x000001AC:	l32 r2,[r7+0]           	R2=MEM[0x00007FD0]=0x0000000A
-0x000001B0:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000003,R1=R1/R2=0x0000000C,SR=0x00000001
-0x000001B4:	mov r2,10               	R2=0x0000000A
-0x000001B8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000002,R1=R1/R2=0x00000001,SR=0x00000001
-0x000001BC:	s32 [r7-2],r4           	MEM[0x00007FC8]=R4=0x00000002
-0x000001C0:	l32 r1,[r7-2]           	R1=MEM[0x00007FC8]=0x00000002
-0x000001C4:	addi r1,r1,48           	R1=R1+0x00000030=0x00000032,SR=0x00000000
-0x000001C8:	push r1                 	MEM[0x00007FC4]{0x00000032}={R1}
-0x000001CC:	call -68                	PC=0x000000C0,MEM[0x00007FC0]=0x000001D0
-0x000000C0:	push r6                 	MEM[0x00007FBC]{0x00007FD0}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FB8]{0x00001FF4}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FB4,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FB4,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FED,SR=0x00000000
-0x000000D4:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB4,SR=0x00000000
-0x000000D8:	mov r8,1024             	R8=0x00000400
-0x000000DC:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x000000E0:	l32 r2,[r7+4]           	R2=MEM[0x00007FC4]=0x00000032
-0x000000E4:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000032
-0x000000E8:	add sp,r6,r0            	SP=R6+R0=0x00007FB4,SR=0x00000000
-0x000000EC:	pop r7                  	{R7}=MEM[0x00007FB8]{0x00001FF4}
-0x000000F0:	pop r6                  	{R6}=MEM[0x00007FBC]{0x00007FD0}
-0x000000F4:	ret                     	PC=MEM[0x00007FC0]=0x000001D0
-0x000001D0:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC4,SR=0x00000000
-0x000001D4:	l32 r1,[r7+0]           	R1=MEM[0x00007FD0]=0x0000000A
-0x000001D8:	mov r2,10               	R2=0x0000000A
-0x000001DC:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
-0x000001E0:	s32 [r7+0],r1           	MEM[0x00007FD0]=R1=0x00000001
-0x000001E4:	bun -19                 	PC=0x0000019C
-0x0000019C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD0]=0x00000001
-0x000001A0:	cmpi r1,0               	SR=0x00000000
-0x000001A4:	ble 16                  	PC=0x000001A8
-0x000001A8:	l32 r1,[r7+4]           	R1=MEM[0x00007FE0]=0x0000007B
-0x000001AC:	l32 r2,[r7+0]           	R2=MEM[0x00007FD0]=0x00000001
-0x000001B0:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x0000007B,SR=0x00000000
-0x000001B4:	mov r2,10               	R2=0x0000000A
-0x000001B8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000003,R1=R1/R2=0x0000000C,SR=0x00000001
-0x000001BC:	s32 [r7-2],r4           	MEM[0x00007FC8]=R4=0x00000003
-0x000001C0:	l32 r1,[r7-2]           	R1=MEM[0x00007FC8]=0x00000003
-0x000001C4:	addi r1,r1,48           	R1=R1+0x00000030=0x00000033,SR=0x00000000
-0x000001C8:	push r1                 	MEM[0x00007FC4]{0x00000033}={R1}
-0x000001CC:	call -68                	PC=0x000000C0,MEM[0x00007FC0]=0x000001D0
-0x000000C0:	push r6                 	MEM[0x00007FBC]{0x00007FD0}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FB8]{0x00001FF4}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FB4,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FB4,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FED,SR=0x00000000
-0x000000D4:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB4,SR=0x00000000
-0x000000D8:	mov r8,1024             	R8=0x00000400
-0x000000DC:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x000000E0:	l32 r2,[r7+4]           	R2=MEM[0x00007FC4]=0x00000033
-0x000000E4:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000033
-0x000000E8:	add sp,r6,r0            	SP=R6+R0=0x00007FB4,SR=0x00000000
-0x000000EC:	pop r7                  	{R7}=MEM[0x00007FB8]{0x00001FF4}
-0x000000F0:	pop r6                  	{R6}=MEM[0x00007FBC]{0x00007FD0}
-0x000000F4:	ret                     	PC=MEM[0x00007FC0]=0x000001D0
-0x000001D0:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC4,SR=0x00000000
-0x000001D4:	l32 r1,[r7+0]           	R1=MEM[0x00007FD0]=0x00000001
-0x000001D8:	mov r2,10               	R2=0x0000000A
-0x000001DC:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
-0x000001E0:	s32 [r7+0],r1           	MEM[0x00007FD0]=R1=0x00000000
-0x000001E4:	bun -19                 	PC=0x0000019C
-0x0000019C:	l32 r1,[r7+0]           	R1=MEM[0x00007FD0]=0x00000000
-0x000001A0:	cmpi r1,0               	SR=0x00000040
-0x000001A4:	ble 16                  	PC=0x000001E8
-0x000001E8:	add sp,r6,r0            	SP=R6+R0=0x00007FD0,SR=0x00000000
-0x000001EC:	pop r7                  	{R7}=MEM[0x00007FD4]{0x00001FFA}
-0x000001F0:	pop r6                  	{R6}=MEM[0x00007FD8]{0x00007FE8}
-0x000001F4:	ret                     	PC=MEM[0x00007FDC]=0x0000022C
-0x0000022C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FE0,SR=0x00000000
-0x00000230:	mov r1,10               	R1=0x0000000A
-0x00000234:	push r1                 	MEM[0x00007FE0]{0x0000000A}={R1}
-0x00000238:	call -95                	PC=0x000000C0,MEM[0x00007FDC]=0x0000023C
-0x000000C0:	push r6                 	MEM[0x00007FD8]{0x00007FE8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FD4]{0x00001FFA}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FD0,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FD0,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF4,SR=0x00000000
-0x000000D4:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FD0,SR=0x00000000
-0x000000D8:	mov r8,1024             	R8=0x00000400
-0x000000DC:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x000000E0:	l32 r2,[r7+4]           	R2=MEM[0x00007FE0]=0x0000000A
-0x000000E4:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000000A
-0x000000E8:	add sp,r6,r0            	SP=R6+R0=0x00007FD0,SR=0x00000000
-0x000000EC:	pop r7                  	{R7}=MEM[0x00007FD4]{0x00001FFA}
-0x000000F0:	pop r6                  	{R6}=MEM[0x00007FD8]{0x00007FE8}
-0x000000F4:	ret                     	PC=MEM[0x00007FDC]=0x0000023C
-0x0000023C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FE0,SR=0x00000000
-0x00000240:	l32 r2,[r7-1]           	R2=MEM[0x00007FE4]=0x00000064
-0x00000244:	add sp,r6,r0            	SP=R6+R0=0x00007FE8,SR=0x00000000
-0x00000248:	pop r7                  	{R7}=MEM[0x00007FEC]{0x00001FFD}
-0x0000024C:	pop r6                  	{R6}=MEM[0x00007FF0]{0x00007FF4}
-0x00000250:	ret                     	PC=MEM[0x00007FF4]=0x00000028
-0x00000028:	call -9                 	PC=0x00000008,MEM[0x00007FF4]=0x0000002C
-0x00000008:	int 0                   	CR=0x00000000,PC=0x00000000
-[TERMINAL]
-+123
-
-[END OF SIMULATION]
\ No newline at end of file
diff --git a/examples/out/poxim-print-num.poximdump b/examples/out/poxim-print-num.poximdump
deleted file mode 100644
index d0f6d643..00000000
--- a/examples/out/poxim-print-num.poximdump
+++ /dev/null
@@ -1,152 +0,0 @@
-   0:    03 c0 7f fc       mov    sp, 32764
-   4:    dc 00 00 01       bun    1        # 0xc
-   8:    fc 00 00 00       int    0
-   c:    28 00 01 80       push   r6
-  10:    28 00 01 c0       push   r7
-  14:    08 de 00 00       mov    r6, sp
-  18:    08 e6 00 00       mov    r7, r6
-  1c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  20:    4f de 00 00       subi   sp, sp, 0
-  24:    e4 00 00 74       call   116<<2        # 0x1f8
-  28:    e7 ff ff f7       call   -9<<2        # 0x8
-  2c:    0b c6 00 00       mov    sp, r6
-  30:    2c 00 01 c0       pop    r7
-  34:    2c 00 01 80       pop    r6
-  38:    7c 00 00 00       ret   
-  3c:    28 00 01 80       push   r6
-  40:    28 00 01 c0       push   r7
-  44:    08 de 00 00       mov    r6, sp
-  48:    08 e6 00 00       mov    r7, r6
-  4c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  50:    4f de 00 08       subi   sp, sp, 8
-  54:    68 27 00 04       l32    r1, [r7+4]<<2
-  58:    74 27 00 00       s32    [r7+0]<<2, r1
-  5c:    00 20 00 00       mov    r1, 0
-  60:    74 27 ff ff       s32    [r7-1]<<2, r1
-  64:    68 27 00 18       l32    r1, [r7+24]<<2
-  68:    10 01 0d 01       srl    r0, r1, r1, 1
-  6c:    68 47 ff fc       l32    r2, [r7-4]<<2
-  70:    14 02 08 00       cmp    r2, r1
-  74:    a8 00 00 0d       bae    13        # 0xac
-  78:    dc 00 00 05       bun    5        # 0x90
-  7c:    68 27 ff fc       l32    r1, [r7-4]<<2
-  80:    08 41 00 00       mov    r2, r1
-  84:    48 21 00 01       addi   r1, r1, 1
-  88:    74 27 ff ff       s32    [r7-1]<<2, r1
-  8c:    df ff ff f5       bun    -11        # 0x64
-  90:    68 27 00 00       l32    r1, [r7+0]<<2
-  94:    08 41 00 00       mov    r2, r1
-  98:    48 21 00 01       addi   r1, r1, 1
-  9c:    74 27 00 00       s32    [r7+0]<<2, r1
-  a0:    68 27 00 05       l32    r1, [r7+5]<<2
-  a4:    6c 22 00 00       s8     [r2+0], r1
-  a8:    df ff ff f4       bun    -12        # 0x7c
-  ac:    68 47 00 04       l32    r2, [r7+4]<<2
-  b0:    0b c6 00 00       mov    sp, r6
-  b4:    2c 00 01 c0       pop    r7
-  b8:    2c 00 01 80       pop    r6
-  bc:    7c 00 00 00       ret   
-  c0:    28 00 01 80       push   r6
-  c4:    28 00 01 c0       push   r7
-  c8:    08 de 00 00       mov    r6, sp
-  cc:    08 e6 00 00       mov    r7, r6
-  d0:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  d4:    4f de 00 00       subi   sp, sp, 0
-  d8:    01 00 04 00       mov    r8, 1024
-  dc:    68 28 00 00       l32    r1, [r8+0]<<2
-  e0:    68 47 00 04       l32    r2, [r7+4]<<2
-  e4:    74 41 00 00       s32    [r1+0]<<2, r2
-  e8:    0b c6 00 00       mov    sp, r6
-  ec:    2c 00 01 c0       pop    r7
-  f0:    2c 00 01 80       pop    r6
-  f4:    7c 00 00 00       ret   
-  f8:    28 00 01 80       push   r6
-  fc:    28 00 01 c0       push   r7
- 100:    08 de 00 00       mov    r6, sp
- 104:    08 e6 00 00       mov    r7, r6
- 108:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
- 10c:    4f de 00 0c       subi   sp, sp, 12
- 110:    00 20 00 01       mov    r1, 1
- 114:    74 27 00 00       s32    [r7+0]<<2, r1
- 118:    00 20 00 00       mov    r1, 0
- 11c:    74 27 ff ff       s32    [r7-1]<<2, r1
- 120:    68 27 00 04       l32    r1, [r7+4]<<2
- 124:    5c 01 00 00       cmpi   r1, 0
- 128:    bc 00 00 06       bge    6        # 0x144
- 12c:    00 20 00 01       mov    r1, 1
- 130:    74 27 ff ff       s32    [r7-1]<<2, r1
- 134:    00 20 00 00       mov    r1, 0
- 138:    68 47 00 04       l32    r2, [r7+4]<<2
- 13c:    0c 21 10 00       sub    r1, r1, r2
- 140:    74 27 00 04       s32    [r7+4]<<2, r1
- 144:    68 27 00 04       l32    r1, [r7+4]<<2
- 148:    68 47 00 00       l32    r2, [r7+0]<<2
- 14c:    10 21 16 04       divs   r4, r1, r1, r2
- 150:    5c 01 00 0b       cmpi   r1, 11
- 154:    c8 00 00 05       ble    5        # 0x16c
- 158:    68 27 00 00       l32    r1, [r7+0]<<2
- 15c:    00 40 00 0a       mov    r2, 10
- 160:    10 21 12 08       muls   r8, r1, r1, r2
- 164:    74 27 00 00       s32    [r7+0]<<2, r1
- 168:    df ff ff f6       bun    -10        # 0x144
- 16c:    68 27 ff ff       l32    r1, [r7-1]<<2
- 170:    5c 01 00 00       cmpi   r1, 0
- 174:    c8 00 00 05       ble    5        # 0x18c
- 178:    00 20 00 2d       mov    r1, 45
- 17c:    28 00 00 40       push   r1
- 180:    e7 ff ff cf       call   -49<<2        # 0xc0
- 184:    4b de 00 04       addi   sp, sp, 4
- 188:    dc 00 00 04       bun    4        # 0x19c
- 18c:    00 20 00 2b       mov    r1, 43
- 190:    28 00 00 40       push   r1
- 194:    e7 ff ff ca       call   -54<<2        # 0xc0
- 198:    4b de 00 04       addi   sp, sp, 4
- 19c:    68 27 00 00       l32    r1, [r7+0]<<2
- 1a0:    5c 01 00 00       cmpi   r1, 0
- 1a4:    c8 00 00 10       ble    16        # 0x1e8
- 1a8:    68 27 00 04       l32    r1, [r7+4]<<2
- 1ac:    68 47 00 00       l32    r2, [r7+0]<<2
- 1b0:    10 21 16 04       divs   r4, r1, r1, r2
- 1b4:    00 40 00 0a       mov    r2, 10
- 1b8:    10 21 16 04       divs   r4, r1, r1, r2
- 1bc:    74 87 ff fe       s32    [r7-2]<<2, r4
- 1c0:    68 27 ff fe       l32    r1, [r7-2]<<2
- 1c4:    48 21 00 30       addi   r1, r1, 48
- 1c8:    28 00 00 40       push   r1
- 1cc:    e7 ff ff bc       call   -68<<2        # 0xc0
- 1d0:    4b de 00 04       addi   sp, sp, 4
- 1d4:    68 27 00 00       l32    r1, [r7+0]<<2
- 1d8:    00 40 00 0a       mov    r2, 10
- 1dc:    10 21 16 04       divs   r4, r1, r1, r2
- 1e0:    74 27 00 00       s32    [r7+0]<<2, r1
- 1e4:    df ff ff ed       bun    -19        # 0x19c
- 1e8:    0b c6 00 00       mov    sp, r6
- 1ec:    2c 00 01 c0       pop    r7
- 1f0:    2c 00 01 80       pop    r6
- 1f4:    7c 00 00 00       ret   
- 1f8:    28 00 01 80       push   r6
- 1fc:    28 00 01 c0       push   r7
- 200:    08 de 00 00       mov    r6, sp
- 204:    08 e6 00 00       mov    r7, r6
- 208:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
- 20c:    4f de 00 08       subi   sp, sp, 8
- 210:    00 20 00 7b       mov    r1, 123
- 214:    74 27 00 00       s32    [r7+0]<<2, r1
- 218:    00 20 00 64       mov    r1, 100
- 21c:    74 27 ff ff       s32    [r7-1]<<2, r1
- 220:    68 27 00 00       l32    r1, [r7+0]<<2
- 224:    28 00 00 40       push   r1
- 228:    e7 ff ff b3       call   -77<<2        # 0xf8
- 22c:    4b de 00 04       addi   sp, sp, 4
- 230:    00 20 00 0a       mov    r1, 10
- 234:    28 00 00 40       push   r1
- 238:    e7 ff ff a1       call   -95<<2        # 0xc0
- 23c:    4b de 00 04       addi   sp, sp, 4
- 240:    68 47 ff ff       l32    r2, [r7-1]<<2
- 244:    0b c6 00 00       mov    sp, r6
- 248:    2c 00 01 c0       pop    r7
- 24c:    2c 00 01 80       pop    r6
- 250:    7c 00 00 00       ret   
-  ...
-1000:    22 22 22 22       not    r17, r2
-  ...
diff --git a/examples/out/poxim-simple-if.interp b/examples/out/poxim-simple-if.interp
deleted file mode 100644
index 986580ec..00000000
--- a/examples/out/poxim-simple-if.interp
+++ /dev/null
@@ -1,42 +0,0 @@
-[START OF SIMULATION]
-0x00000000:	mov sp,32764            	SP=0x00007FFC
-0x00000004:	bun 1                   	PC=0x0000000C
-0x0000000C:	push r6                 	MEM[0x00007FFC]{0x00000000}={R6}
-0x00000010:	push r7                 	MEM[0x00007FF8]{0x00000000}={R7}
-0x00000014:	add r6,sp,r0            	R6=SP+R0=0x00007FF4,SR=0x00000000
-0x00000018:	add r7,r6,r0            	R7=R6+R0=0x00007FF4,SR=0x00000000
-0x0000001C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFD,SR=0x00000000
-0x00000020:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FF4,SR=0x00000000
-0x00000024:	call 38                 	PC=0x000000C0,MEM[0x00007FF4]=0x00000028
-0x000000C0:	push r6                 	MEM[0x00007FF0]{0x00007FF4}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FEC]{0x00001FFD}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FE8,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FE8,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFA,SR=0x00000000
-0x000000D4:	subi sp,sp,8            	SP=SP-0x00000008=0x00007FE0,SR=0x00000000
-0x000000D8:	mov r1,7                	R1=0x00000007
-0x000000DC:	s32 [r7+0],r1           	MEM[0x00007FE8]=R1=0x00000007
-0x000000E0:	mov r1,3                	R1=0x00000003
-0x000000E4:	s32 [r7-1],r1           	MEM[0x00007FE4]=R1=0x00000003
-0x000000E8:	l32 r1,[r7+0]           	R1=MEM[0x00007FE8]=0x00000007
-0x000000EC:	l32 r2,[r7-1]           	R2=MEM[0x00007FE4]=0x00000003
-0x000000F0:	cmp r1,r2               	SR=0x00000000
-0x000000F4:	ble 4                   	PC=0x000000F8
-0x000000F8:	mov r1,105              	R1=0x00000069
-0x000000FC:	s32 [r7-1],r1           	MEM[0x00007FE4]=R1=0x00000069
-0x00000100:	mov r1,104              	R1=0x00000068
-0x00000104:	s32 [r7+0],r1           	MEM[0x00007FE8]=R1=0x00000068
-0x00000108:	l32 r1,[r7+0]           	R1=MEM[0x00007FE8]=0x00000068
-0x0000010C:	l32 r2,[r7-1]           	R2=MEM[0x00007FE4]=0x00000069
-0x00000110:	cmp r1,r2               	SR=0x00000011
-0x00000114:	bge 2                   	PC=0x00000118
-0x00000118:	mov r1,7                	R1=0x00000007
-0x0000011C:	s32 [r7-1],r1           	MEM[0x00007FE4]=R1=0x00000007
-0x00000120:	l32 r2,[r7-1]           	R2=MEM[0x00007FE4]=0x00000007
-0x00000124:	add sp,r6,r0            	SP=R6+R0=0x00007FE8,SR=0x00000000
-0x00000128:	pop r7                  	{R7}=MEM[0x00007FEC]{0x00001FFD}
-0x0000012C:	pop r6                  	{R6}=MEM[0x00007FF0]{0x00007FF4}
-0x00000130:	ret                     	PC=MEM[0x00007FF4]=0x00000028
-0x00000028:	call -9                 	PC=0x00000008,MEM[0x00007FF4]=0x0000002C
-0x00000008:	int 0                   	CR=0x00000000,PC=0x00000000
-[END OF SIMULATION]
\ No newline at end of file
diff --git a/examples/out/poxim-simple-if.poximdump b/examples/out/poxim-simple-if.poximdump
deleted file mode 100644
index 49f4c481..00000000
--- a/examples/out/poxim-simple-if.poximdump
+++ /dev/null
@@ -1,78 +0,0 @@
-   0:    03 c0 7f fc       mov    sp, 32764
-   4:    dc 00 00 01       bun    1        # 0xc
-   8:    fc 00 00 00       int    0
-   c:    28 00 01 80       push   r6
-  10:    28 00 01 c0       push   r7
-  14:    08 de 00 00       mov    r6, sp
-  18:    08 e6 00 00       mov    r7, r6
-  1c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  20:    4f de 00 00       subi   sp, sp, 0
-  24:    e4 00 00 26       call   38<<2        # 0xc0
-  28:    e7 ff ff f7       call   -9<<2        # 0x8
-  2c:    0b c6 00 00       mov    sp, r6
-  30:    2c 00 01 c0       pop    r7
-  34:    2c 00 01 80       pop    r6
-  38:    7c 00 00 00       ret   
-  3c:    28 00 01 80       push   r6
-  40:    28 00 01 c0       push   r7
-  44:    08 de 00 00       mov    r6, sp
-  48:    08 e6 00 00       mov    r7, r6
-  4c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  50:    4f de 00 08       subi   sp, sp, 8
-  54:    68 27 00 04       l32    r1, [r7+4]<<2
-  58:    74 27 00 00       s32    [r7+0]<<2, r1
-  5c:    00 20 00 00       mov    r1, 0
-  60:    74 27 ff ff       s32    [r7-1]<<2, r1
-  64:    68 27 00 18       l32    r1, [r7+24]<<2
-  68:    10 01 0d 01       srl    r0, r1, r1, 1
-  6c:    68 47 ff fc       l32    r2, [r7-4]<<2
-  70:    14 02 08 00       cmp    r2, r1
-  74:    a8 00 00 0d       bae    13        # 0xac
-  78:    dc 00 00 05       bun    5        # 0x90
-  7c:    68 27 ff fc       l32    r1, [r7-4]<<2
-  80:    08 41 00 00       mov    r2, r1
-  84:    48 21 00 01       addi   r1, r1, 1
-  88:    74 27 ff ff       s32    [r7-1]<<2, r1
-  8c:    df ff ff f5       bun    -11        # 0x64
-  90:    68 27 00 00       l32    r1, [r7+0]<<2
-  94:    08 41 00 00       mov    r2, r1
-  98:    48 21 00 01       addi   r1, r1, 1
-  9c:    74 27 00 00       s32    [r7+0]<<2, r1
-  a0:    68 27 00 05       l32    r1, [r7+5]<<2
-  a4:    6c 22 00 00       s8     [r2+0], r1
-  a8:    df ff ff f4       bun    -12        # 0x7c
-  ac:    68 47 00 04       l32    r2, [r7+4]<<2
-  b0:    0b c6 00 00       mov    sp, r6
-  b4:    2c 00 01 c0       pop    r7
-  b8:    2c 00 01 80       pop    r6
-  bc:    7c 00 00 00       ret   
-  c0:    28 00 01 80       push   r6
-  c4:    28 00 01 c0       push   r7
-  c8:    08 de 00 00       mov    r6, sp
-  cc:    08 e6 00 00       mov    r7, r6
-  d0:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  d4:    4f de 00 08       subi   sp, sp, 8
-  d8:    00 20 00 07       mov    r1, 7
-  dc:    74 27 00 00       s32    [r7+0]<<2, r1
-  e0:    00 20 00 03       mov    r1, 3
-  e4:    74 27 ff ff       s32    [r7-1]<<2, r1
-  e8:    68 27 00 00       l32    r1, [r7+0]<<2
-  ec:    68 47 ff ff       l32    r2, [r7-1]<<2
-  f0:    14 01 10 00       cmp    r1, r2
-  f4:    c8 00 00 04       ble    4        # 0x108
-  f8:    00 20 00 69       mov    r1, 105
-  fc:    74 27 ff ff       s32    [r7-1]<<2, r1
- 100:    00 20 00 68       mov    r1, 104
- 104:    74 27 00 00       s32    [r7+0]<<2, r1
- 108:    68 27 00 00       l32    r1, [r7+0]<<2
- 10c:    68 47 ff ff       l32    r2, [r7-1]<<2
- 110:    14 01 10 00       cmp    r1, r2
- 114:    bc 00 00 02       bge    2        # 0x120
- 118:    00 20 00 07       mov    r1, 7
- 11c:    74 27 ff ff       s32    [r7-1]<<2, r1
- 120:    68 47 ff ff       l32    r2, [r7-1]<<2
- 124:    0b c6 00 00       mov    sp, r6
- 128:    2c 00 01 c0       pop    r7
- 12c:    2c 00 01 80       pop    r6
- 130:    7c 00 00 00       ret   
-  ...
diff --git a/examples/out/poxim-terminal.interp b/examples/out/poxim-terminal.interp
deleted file mode 100644
index 630baf59..00000000
--- a/examples/out/poxim-terminal.interp
+++ /dev/null
@@ -1,66 +0,0 @@
-[START OF SIMULATION]
-0x00000000:	mov sp,32764            	SP=0x00007FFC
-0x00000004:	bun 1                   	PC=0x0000000C
-0x0000000C:	push r6                 	MEM[0x00007FFC]{0x00000000}={R6}
-0x00000010:	push r7                 	MEM[0x00007FF8]{0x00000000}={R7}
-0x00000014:	add r6,sp,r0            	R6=SP+R0=0x00007FF4,SR=0x00000000
-0x00000018:	add r7,r6,r0            	R7=R6+R0=0x00007FF4,SR=0x00000000
-0x0000001C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFD,SR=0x00000000
-0x00000020:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FF4,SR=0x00000000
-0x00000024:	call 38                 	PC=0x000000C0,MEM[0x00007FF4]=0x00000028
-0x000000C0:	push r6                 	MEM[0x00007FF0]{0x00007FF4}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FEC]{0x00001FFD}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FE8,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FE8,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFA,SR=0x00000000
-0x000000D4:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FE8,SR=0x00000000
-0x000000D8:	mov r8,1024             	R8=0x00000400
-0x000000DC:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x000000E0:	mov r2,101              	R2=0x00000065
-0x000000E4:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000065
-0x000000E8:	mov r8,1024             	R8=0x00000400
-0x000000EC:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x000000F0:	mov r2,117              	R2=0x00000075
-0x000000F4:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000075
-0x000000F8:	mov r8,1024             	R8=0x00000400
-0x000000FC:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000100:	mov r2,32               	R2=0x00000020
-0x00000104:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
-0x00000108:	mov r8,1024             	R8=0x00000400
-0x0000010C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000110:	mov r2,116              	R2=0x00000074
-0x00000114:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000074
-0x00000118:	mov r8,1024             	R8=0x00000400
-0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000120:	mov r2,101              	R2=0x00000065
-0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000065
-0x00000128:	mov r8,1024             	R8=0x00000400
-0x0000012C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000130:	mov r2,32               	R2=0x00000020
-0x00000134:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
-0x00000138:	mov r8,1024             	R8=0x00000400
-0x0000013C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000140:	mov r2,97               	R2=0x00000061
-0x00000144:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000061
-0x00000148:	mov r8,1024             	R8=0x00000400
-0x0000014C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000150:	mov r2,109              	R2=0x0000006D
-0x00000154:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000006D
-0x00000158:	mov r8,1024             	R8=0x00000400
-0x0000015C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000160:	mov r2,111              	R2=0x0000006F
-0x00000164:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000006F
-0x00000168:	mov r8,1024             	R8=0x00000400
-0x0000016C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x00000170:	mov r2,33               	R2=0x00000021
-0x00000174:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000021
-0x00000178:	mov r2,0                	R2=0x00000000
-0x0000017C:	add sp,r6,r0            	SP=R6+R0=0x00007FE8,SR=0x00000000
-0x00000180:	pop r7                  	{R7}=MEM[0x00007FEC]{0x00001FFD}
-0x00000184:	pop r6                  	{R6}=MEM[0x00007FF0]{0x00007FF4}
-0x00000188:	ret                     	PC=MEM[0x00007FF4]=0x00000028
-0x00000028:	call -9                 	PC=0x00000008,MEM[0x00007FF4]=0x0000002C
-0x00000008:	int 0                   	CR=0x00000000,PC=0x00000000
-[TERMINAL]
-eu te amo!
-[END OF SIMULATION]
\ No newline at end of file
diff --git a/examples/out/poxim-terminal.poximdump b/examples/out/poxim-terminal.poximdump
deleted file mode 100644
index 69196c7a..00000000
--- a/examples/out/poxim-terminal.poximdump
+++ /dev/null
@@ -1,102 +0,0 @@
-   0:    03 c0 7f fc       mov    sp, 32764
-   4:    dc 00 00 01       bun    1        # 0xc
-   8:    fc 00 00 00       int    0
-   c:    28 00 01 80       push   r6
-  10:    28 00 01 c0       push   r7
-  14:    08 de 00 00       mov    r6, sp
-  18:    08 e6 00 00       mov    r7, r6
-  1c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  20:    4f de 00 00       subi   sp, sp, 0
-  24:    e4 00 00 26       call   38<<2        # 0xc0
-  28:    e7 ff ff f7       call   -9<<2        # 0x8
-  2c:    0b c6 00 00       mov    sp, r6
-  30:    2c 00 01 c0       pop    r7
-  34:    2c 00 01 80       pop    r6
-  38:    7c 00 00 00       ret   
-  3c:    28 00 01 80       push   r6
-  40:    28 00 01 c0       push   r7
-  44:    08 de 00 00       mov    r6, sp
-  48:    08 e6 00 00       mov    r7, r6
-  4c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  50:    4f de 00 08       subi   sp, sp, 8
-  54:    68 27 00 04       l32    r1, [r7+4]<<2
-  58:    74 27 00 00       s32    [r7+0]<<2, r1
-  5c:    00 20 00 00       mov    r1, 0
-  60:    74 27 ff ff       s32    [r7-1]<<2, r1
-  64:    68 27 00 18       l32    r1, [r7+24]<<2
-  68:    10 01 0d 01       srl    r0, r1, r1, 1
-  6c:    68 47 ff fc       l32    r2, [r7-4]<<2
-  70:    14 02 08 00       cmp    r2, r1
-  74:    a8 00 00 0d       bae    13        # 0xac
-  78:    dc 00 00 05       bun    5        # 0x90
-  7c:    68 27 ff fc       l32    r1, [r7-4]<<2
-  80:    08 41 00 00       mov    r2, r1
-  84:    48 21 00 01       addi   r1, r1, 1
-  88:    74 27 ff ff       s32    [r7-1]<<2, r1
-  8c:    df ff ff f5       bun    -11        # 0x64
-  90:    68 27 00 00       l32    r1, [r7+0]<<2
-  94:    08 41 00 00       mov    r2, r1
-  98:    48 21 00 01       addi   r1, r1, 1
-  9c:    74 27 00 00       s32    [r7+0]<<2, r1
-  a0:    68 27 00 05       l32    r1, [r7+5]<<2
-  a4:    6c 22 00 00       s8     [r2+0], r1
-  a8:    df ff ff f4       bun    -12        # 0x7c
-  ac:    68 47 00 04       l32    r2, [r7+4]<<2
-  b0:    0b c6 00 00       mov    sp, r6
-  b4:    2c 00 01 c0       pop    r7
-  b8:    2c 00 01 80       pop    r6
-  bc:    7c 00 00 00       ret   
-  c0:    28 00 01 80       push   r6
-  c4:    28 00 01 c0       push   r7
-  c8:    08 de 00 00       mov    r6, sp
-  cc:    08 e6 00 00       mov    r7, r6
-  d0:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  d4:    4f de 00 00       subi   sp, sp, 0
-  d8:    01 00 04 00       mov    r8, 1024
-  dc:    68 28 00 00       l32    r1, [r8+0]<<2
-  e0:    00 40 00 65       mov    r2, 101
-  e4:    74 41 00 00       s32    [r1+0]<<2, r2
-  e8:    01 00 04 00       mov    r8, 1024
-  ec:    68 28 00 00       l32    r1, [r8+0]<<2
-  f0:    00 40 00 75       mov    r2, 117
-  f4:    74 41 00 00       s32    [r1+0]<<2, r2
-  f8:    01 00 04 00       mov    r8, 1024
-  fc:    68 28 00 00       l32    r1, [r8+0]<<2
- 100:    00 40 00 20       mov    r2, 32
- 104:    74 41 00 00       s32    [r1+0]<<2, r2
- 108:    01 00 04 00       mov    r8, 1024
- 10c:    68 28 00 00       l32    r1, [r8+0]<<2
- 110:    00 40 00 74       mov    r2, 116
- 114:    74 41 00 00       s32    [r1+0]<<2, r2
- 118:    01 00 04 00       mov    r8, 1024
- 11c:    68 28 00 00       l32    r1, [r8+0]<<2
- 120:    00 40 00 65       mov    r2, 101
- 124:    74 41 00 00       s32    [r1+0]<<2, r2
- 128:    01 00 04 00       mov    r8, 1024
- 12c:    68 28 00 00       l32    r1, [r8+0]<<2
- 130:    00 40 00 20       mov    r2, 32
- 134:    74 41 00 00       s32    [r1+0]<<2, r2
- 138:    01 00 04 00       mov    r8, 1024
- 13c:    68 28 00 00       l32    r1, [r8+0]<<2
- 140:    00 40 00 61       mov    r2, 97
- 144:    74 41 00 00       s32    [r1+0]<<2, r2
- 148:    01 00 04 00       mov    r8, 1024
- 14c:    68 28 00 00       l32    r1, [r8+0]<<2
- 150:    00 40 00 6d       mov    r2, 109
- 154:    74 41 00 00       s32    [r1+0]<<2, r2
- 158:    01 00 04 00       mov    r8, 1024
- 15c:    68 28 00 00       l32    r1, [r8+0]<<2
- 160:    00 40 00 6f       mov    r2, 111
- 164:    74 41 00 00       s32    [r1+0]<<2, r2
- 168:    01 00 04 00       mov    r8, 1024
- 16c:    68 28 00 00       l32    r1, [r8+0]<<2
- 170:    00 40 00 21       mov    r2, 33
- 174:    74 41 00 00       s32    [r1+0]<<2, r2
- 178:    00 40 00 00       mov    r2, 0
- 17c:    0b c6 00 00       mov    sp, r6
- 180:    2c 00 01 c0       pop    r7
- 184:    2c 00 01 80       pop    r6
- 188:    7c 00 00 00       ret   
-  ...
-1000:    22 22 22 22       not    r17, r2
-  ...
diff --git a/examples/out/poxim-while.interp b/examples/out/poxim-while.interp
deleted file mode 100644
index 618de4e4..00000000
--- a/examples/out/poxim-while.interp
+++ /dev/null
@@ -1,886 +0,0 @@
-[START OF SIMULATION]
-0x00000000:	mov sp,32764            	SP=0x00007FFC
-0x00000004:	bun 1                   	PC=0x0000000C
-0x0000000C:	push r6                 	MEM[0x00007FFC]{0x00000000}={R6}
-0x00000010:	push r7                 	MEM[0x00007FF8]{0x00000000}={R7}
-0x00000014:	add r6,sp,r0            	R6=SP+R0=0x00007FF4,SR=0x00000000
-0x00000018:	add r7,r6,r0            	R7=R6+R0=0x00007FF4,SR=0x00000000
-0x0000001C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFD,SR=0x00000000
-0x00000020:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FF4,SR=0x00000000
-0x00000024:	call 59                 	PC=0x00000114,MEM[0x00007FF4]=0x00000028
-0x00000114:	push r6                 	MEM[0x00007FF0]{0x00007FF4}={R6}
-0x00000118:	push r7                 	MEM[0x00007FEC]{0x00001FFD}={R7}
-0x0000011C:	add r6,sp,r0            	R6=SP+R0=0x00007FE8,SR=0x00000000
-0x00000120:	add r7,r6,r0            	R7=R6+R0=0x00007FE8,SR=0x00000000
-0x00000124:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFA,SR=0x00000000
-0x00000128:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FE4,SR=0x00000000
-0x0000012C:	mov r1,105              	R1=0x00000069
-0x00000130:	s32 [r7+0],r1           	MEM[0x00007FE8]=R1=0x00000069
-0x00000134:	l32 r1,[r7+0]           	R1=MEM[0x00007FE8]=0x00000069
-0x00000138:	push r1                 	MEM[0x00007FE4]{0x00000069}={R1}
-0x0000013C:	call -32                	PC=0x000000C0,MEM[0x00007FE0]=0x00000140
-0x000000C0:	push r6                 	MEM[0x00007FDC]{0x00007FE8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FD8]{0x00001FFA}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007FD4,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007FD4,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FF5,SR=0x00000000
-0x000000D4:	subi sp,sp,4            	SP=SP-0x00000004=0x00007FD0,SR=0x00000000
-0x000000D8:	mov r1,0                	R1=0x00000000
-0x000000DC:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000000
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000000
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000000
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000001,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000001
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000001
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000001
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000002,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000002
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000002
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000002
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000003,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000003
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000003
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000003
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000004,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000004
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000004
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000004
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000005,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000005
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000005
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000005
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000006,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000006
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000006
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000006
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000007,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000007
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000007
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000007
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000008,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000008
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000008
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000008
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000009,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000009
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000009
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000009
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000A,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000A
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000A
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000A
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000B,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000B
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000B
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000B
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000C,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000C
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000C
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000C
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000D,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000D
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000D
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000D
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000E,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000E
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000E
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000E
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000000F,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000000F
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000F
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000000F
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000010,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000010
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000010
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000010
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000011,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000011
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000011
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000011
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000012,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000012
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000012
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000012
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000013,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000013
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000013
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000013
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000014,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000014
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000014
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000014
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000015,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000015
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000015
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000015
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000016,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000016
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000016
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000016
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000017,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000017
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000017
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000017
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000018,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000018
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000018
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000018
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000019,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000019
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000019
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000019
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000001A,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000001A
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001A
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001A
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000001B,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000001B
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001B
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001B
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000001C,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000001C
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001C
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001C
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000001D,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000001D
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001D
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001D
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000001E,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000001E
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001E
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001E
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000001F,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000001F
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001F
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000001F
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000020,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000020
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000020
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000020
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000021,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000021
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000021
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000021
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000022,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000022
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000022
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000022
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000023,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000023
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000023
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000023
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000024,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000024
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000024
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000024
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000025,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000025
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000025
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000025
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000026,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000026
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000026
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000026
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000027,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000027
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000027
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000027
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000028,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000028
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000028
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000028
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000029,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000029
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000029
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000029
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000002A,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000002A
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002A
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002A
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000002B,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000002B
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002B
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002B
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000002C,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000002C
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002C
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002C
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000002D,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000002D
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002D
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002D
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000002E,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000002E
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002E
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002E
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000002F,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000002F
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002F
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000002F
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000030,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000030
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000030
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000030
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000031,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000031
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000031
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000031
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000032,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000032
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000032
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000032
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000033,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000033
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000033
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000033
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000034,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000034
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000034
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000034
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000035,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000035
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000035
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000035
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000036,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000036
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000036
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000036
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000037,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000037
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000037
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000037
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000038,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000038
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000038
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000038
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000039,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000039
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000039
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000039
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000003A,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000003A
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003A
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003A
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000003B,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000003B
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003B
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003B
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000003C,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000003C
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003C
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003C
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000003D,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000003D
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003D
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003D
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000003E,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000003E
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003E
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003E
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000003F,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000003F
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003F
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000003F
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000040,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000040
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000040
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000040
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000041,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000041
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000041
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000041
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000042,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000042
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000042
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000042
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000043,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000043
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000043
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000043
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000044,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000044
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000044
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000044
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000045,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000045
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000045
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000045
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000046,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000046
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000046
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000046
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000047,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000047
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000047
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000047
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000048,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000048
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000048
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000048
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000049,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000049
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000049
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000049
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000004A,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000004A
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004A
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004A
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000004B,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000004B
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004B
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004B
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000004C,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000004C
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004C
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004C
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000004D,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000004D
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004D
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004D
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000004E,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000004E
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004E
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004E
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000004F,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000004F
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004F
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000004F
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000050,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000050
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000050
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000050
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000051,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000051
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000051
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000051
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000052,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000052
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000052
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000052
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000053,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000053
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000053
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000053
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000054,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000054
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000054
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000054
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000055,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000055
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000055
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000055
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000056,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000056
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000056
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000056
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000057,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000057
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000057
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000057
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000058,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000058
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000058
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000058
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000059,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000059
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000059
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000059
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000005A,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000005A
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005A
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005A
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000005B,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000005B
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005B
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005B
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000005C,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000005C
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005C
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005C
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000005D,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000005D
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005D
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005D
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000005E,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000005E
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005E
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005E
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x0000005F,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x0000005F
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005F
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x0000005F
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000060,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000060
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000060
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000060
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000061,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000061
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000061
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000061
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000062,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000062
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000062
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000062
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000063,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000063
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000063
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000063
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000064,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000064
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000064
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000064
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000065,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000065
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000065
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000065
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000066,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000066
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000066
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000066
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000067,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000067
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000067
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000067
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000068,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000068
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000068
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000011
-0x000000EC:	bge 4                   	PC=0x000000F0
-0x000000F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000068
-0x000000F4:	addi r1,r1,1            	R1=R1+0x00000001=0x00000069,SR=0x00000000
-0x000000F8:	s32 [r7+0],r1           	MEM[0x00007FD4]=R1=0x00000069
-0x000000FC:	bun -8                  	PC=0x000000E0
-0x000000E0:	l32 r1,[r7+0]           	R1=MEM[0x00007FD4]=0x00000069
-0x000000E4:	l32 r2,[r7+4]           	R2=MEM[0x00007FE4]=0x00000069
-0x000000E8:	cmp r1,r2               	SR=0x00000040
-0x000000EC:	bge 4                   	PC=0x00000100
-0x00000100:	l32 r2,[r7+0]           	R2=MEM[0x00007FD4]=0x00000069
-0x00000104:	add sp,r6,r0            	SP=R6+R0=0x00007FD4,SR=0x00000000
-0x00000108:	pop r7                  	{R7}=MEM[0x00007FD8]{0x00001FFA}
-0x0000010C:	pop r6                  	{R6}=MEM[0x00007FDC]{0x00007FE8}
-0x00000110:	ret                     	PC=MEM[0x00007FE0]=0x00000140
-0x00000140:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FE4,SR=0x00000000
-0x00000144:	add sp,r6,r0            	SP=R6+R0=0x00007FE8,SR=0x00000000
-0x00000148:	pop r7                  	{R7}=MEM[0x00007FEC]{0x00001FFD}
-0x0000014C:	pop r6                  	{R6}=MEM[0x00007FF0]{0x00007FF4}
-0x00000150:	ret                     	PC=MEM[0x00007FF4]=0x00000028
-0x00000028:	call -9                 	PC=0x00000008,MEM[0x00007FF4]=0x0000002C
-0x00000008:	int 0                   	CR=0x00000000,PC=0x00000000
-[END OF SIMULATION]
\ No newline at end of file
diff --git a/examples/out/poxim-while.poximdump b/examples/out/poxim-while.poximdump
deleted file mode 100644
index 88931dd3..00000000
--- a/examples/out/poxim-while.poximdump
+++ /dev/null
@@ -1,86 +0,0 @@
-   0:    03 c0 7f fc       mov    sp, 32764
-   4:    dc 00 00 01       bun    1        # 0xc
-   8:    fc 00 00 00       int    0
-   c:    28 00 01 80       push   r6
-  10:    28 00 01 c0       push   r7
-  14:    08 de 00 00       mov    r6, sp
-  18:    08 e6 00 00       mov    r7, r6
-  1c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  20:    4f de 00 00       subi   sp, sp, 0
-  24:    e4 00 00 3b       call   59<<2        # 0x114
-  28:    e7 ff ff f7       call   -9<<2        # 0x8
-  2c:    0b c6 00 00       mov    sp, r6
-  30:    2c 00 01 c0       pop    r7
-  34:    2c 00 01 80       pop    r6
-  38:    7c 00 00 00       ret   
-  3c:    28 00 01 80       push   r6
-  40:    28 00 01 c0       push   r7
-  44:    08 de 00 00       mov    r6, sp
-  48:    08 e6 00 00       mov    r7, r6
-  4c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  50:    4f de 00 08       subi   sp, sp, 8
-  54:    68 27 00 04       l32    r1, [r7+4]<<2
-  58:    74 27 00 00       s32    [r7+0]<<2, r1
-  5c:    00 20 00 00       mov    r1, 0
-  60:    74 27 ff ff       s32    [r7-1]<<2, r1
-  64:    68 27 00 18       l32    r1, [r7+24]<<2
-  68:    10 01 0d 01       srl    r0, r1, r1, 1
-  6c:    68 47 ff fc       l32    r2, [r7-4]<<2
-  70:    14 02 08 00       cmp    r2, r1
-  74:    a8 00 00 0d       bae    13        # 0xac
-  78:    dc 00 00 05       bun    5        # 0x90
-  7c:    68 27 ff fc       l32    r1, [r7-4]<<2
-  80:    08 41 00 00       mov    r2, r1
-  84:    48 21 00 01       addi   r1, r1, 1
-  88:    74 27 ff ff       s32    [r7-1]<<2, r1
-  8c:    df ff ff f5       bun    -11        # 0x64
-  90:    68 27 00 00       l32    r1, [r7+0]<<2
-  94:    08 41 00 00       mov    r2, r1
-  98:    48 21 00 01       addi   r1, r1, 1
-  9c:    74 27 00 00       s32    [r7+0]<<2, r1
-  a0:    68 27 00 05       l32    r1, [r7+5]<<2
-  a4:    6c 22 00 00       s8     [r2+0], r1
-  a8:    df ff ff f4       bun    -12        # 0x7c
-  ac:    68 47 00 04       l32    r2, [r7+4]<<2
-  b0:    0b c6 00 00       mov    sp, r6
-  b4:    2c 00 01 c0       pop    r7
-  b8:    2c 00 01 80       pop    r6
-  bc:    7c 00 00 00       ret   
-  c0:    28 00 01 80       push   r6
-  c4:    28 00 01 c0       push   r7
-  c8:    08 de 00 00       mov    r6, sp
-  cc:    08 e6 00 00       mov    r7, r6
-  d0:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  d4:    4f de 00 04       subi   sp, sp, 4
-  d8:    00 20 00 00       mov    r1, 0
-  dc:    74 27 00 00       s32    [r7+0]<<2, r1
-  e0:    68 27 00 00       l32    r1, [r7+0]<<2
-  e4:    68 47 00 04       l32    r2, [r7+4]<<2
-  e8:    14 01 10 00       cmp    r1, r2
-  ec:    bc 00 00 04       bge    4        # 0x100
-  f0:    68 27 00 00       l32    r1, [r7+0]<<2
-  f4:    48 21 00 01       addi   r1, r1, 1
-  f8:    74 27 00 00       s32    [r7+0]<<2, r1
-  fc:    df ff ff f8       bun    -8        # 0xe0
- 100:    68 47 00 00       l32    r2, [r7+0]<<2
- 104:    0b c6 00 00       mov    sp, r6
- 108:    2c 00 01 c0       pop    r7
- 10c:    2c 00 01 80       pop    r6
- 110:    7c 00 00 00       ret   
- 114:    28 00 01 80       push   r6
- 118:    28 00 01 c0       push   r7
- 11c:    08 de 00 00       mov    r6, sp
- 120:    08 e6 00 00       mov    r7, r6
- 124:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
- 128:    4f de 00 04       subi   sp, sp, 4
- 12c:    00 20 00 69       mov    r1, 105
- 130:    74 27 00 00       s32    [r7+0]<<2, r1
- 134:    68 27 00 00       l32    r1, [r7+0]<<2
- 138:    28 00 00 40       push   r1
- 13c:    e7 ff ff e0       call   -32<<2        # 0xc0
- 140:    4b de 00 04       addi   sp, sp, 4
- 144:    0b c6 00 00       mov    sp, r6
- 148:    2c 00 01 c0       pop    r7
- 14c:    2c 00 01 80       pop    r6
- 150:    7c 00 00 00       ret   
-  ...
diff --git a/examples/poxim-sort.c b/examples/poxim-sort.c
new file mode 100755
index 00000000..b071a76a
--- /dev/null
+++ b/examples/poxim-sort.c
@@ -0,0 +1,139 @@
+#define DEBUG 0
+
+#if !defined(DEBUG) || DEBUG == 0
+
+#include "_start.h"
+int *terminal32 = (int *)(0x88888888 >> 2);
+void putchar(int c) { *terminal32 = c; }
+
+// // // typedef struct {
+// // //   int x, y;
+// // // } vector2i ;
+// // //
+// // //
+// // //
+// // // int dot(vector2i v1, vector2i v2) {
+// // //   return v1.x * v2.x + v1.y*v2.y;
+// // // }
+// // //
+// // // int struc_play(void) {
+// // //   vector2i v,r;
+// // //   v.x = 0x1;
+// // //   v.y = 0x1;
+// // //
+// // //   r.x = 0x2;
+// // //   r.y = 0x2;
+// // //
+// // //   return dot(v, r);
+// // // }
+// //
+
+void bubble_sort(int arr[], int n) {
+    int temp;
+    int swapped;
+
+    for (int i = 0; i < n - 1; i++) {
+        swapped = 0;
+
+        for (int j = 0; j < n - 1 - i; j++) {
+            // Compare adjacent elements
+            if (arr[j] > arr[j + 1]) {
+                // Swap them if they are in the wrong order
+                temp = arr[j];
+                arr[j] = arr[j + 1];
+                arr[j + 1] = temp;
+                swapped = 1; // Set the swapped flag
+            }
+        }
+
+        // If no two elements were swapped in this pass, the array is sorted
+        if (swapped == 0) {
+            break;
+        }
+    }
+}
+
+// int div10(int n) {
+//     int q, r;
+//     q = (n >> 1) + (n >> 2);
+//     q = q + (q >> 4);
+//     q = q + (q >> 8);
+//     q = q + (q >> 16);
+//     q = q >> 3;
+//     r = n - (((q << 2) + q) << 1);
+//     q = q + (r > 9);
+//     return q;
+// }
+//
+
+void printi(int num) {
+  int divisor = 1;
+  int isNegative = 0;
+
+  // Handle negative numbers
+  if (num < 0) {
+    isNegative = 1;
+    num = -num;
+  }
+
+  // Find the divisor for the largest digit place
+  while (num / divisor > 11) {
+    divisor *= 10;
+  }
+
+  // If the number was negative, print the minus sign
+  if (isNegative > 0) {
+    putchar('-');
+  } else {
+    // putchar('+');
+  }
+  // Extract and print each digit
+  while (divisor > 0) {
+    int digit = (num / divisor) % 10;
+    putchar('0' + digit);
+    divisor /= 10;
+  }
+}
+
+
+int main() {
+  int arr[] = {-1, -564, 420, 69, 1200 };
+  int n = sizeof(arr) / sizeof(arr[0]);
+  int i, a;
+
+  for (i = 0; i < n; i++) {
+    a = arr[i];
+    printi(a);
+    putchar(' ');
+  }
+
+  putchar('\n');
+  bubble_sort(arr, n);
+
+  for (i = 0; i < n; i++) {
+    a = arr[i];
+    printi(a);
+    putchar(' ');
+  }
+  return i;
+}
+
+#else
+
+
+// void memset();
+
+int main(void) {
+  int arr[] = {0xf1, 0xf2, 0xf3, 0xf4, 0xf5};
+  int n = sizeof(arr) / sizeof(arr[0]);
+
+  int i, a;
+  for (i = 0; i < n; i++) {
+    a = arr[i];
+  }
+  return a;
+}
+
+void memset(void* ptr, int val, int size) {}
+
+#endif
diff --git a/out/curr.bin b/out/curr.bin
index f079b3c2..103c7039 100755
Binary files a/out/curr.bin and b/out/curr.bin differ
diff --git a/out/curr.i386.bin b/out/curr.i386.bin
index 5c5cc42c..b10ef0ec 100755
Binary files a/out/curr.i386.bin and b/out/curr.i386.bin differ
diff --git a/out/curr.i386.objdump b/out/curr.i386.objdump
index 293d583b..3e326109 100644
--- a/out/curr.i386.objdump
+++ b/out/curr.i386.objdump
@@ -16,238 +16,454 @@ Disassembly of section .data:
       10:	ec                   	in     al,dx
       11:	00 00                	add    BYTE PTR [eax],al
       13:	00 00                	add    BYTE PTR [eax],al
-      15:	e8 1b 02 00 00       	call   0x235
+      15:	e8 5b 04 00 00       	call   0x475
       1a:	e8 e9 ff ff ff       	call   0x8
       1f:	c9                   	leave
       20:	c3                   	ret
       21:	55                   	push   ebp
       22:	89 e5                	mov    ebp,esp
-      24:	81 ec 08 00 00 00    	sub    esp,0x8
-      2a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
-      2d:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
-      30:	b8 00 00 00 00       	mov    eax,0x0
-      35:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
-      38:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
-      3b:	c1 e8 02             	shr    eax,0x2
-      3e:	8b 4d f8             	mov    ecx,DWORD PTR [ebp-0x8]
-      41:	39 c1                	cmp    ecx,eax
-      43:	0f 83 22 00 00 00    	jae    0x6b
-      49:	e9 0b 00 00 00       	jmp    0x59
-      4e:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
-      51:	89 c1                	mov    ecx,eax
-      53:	40                   	inc    eax
-      54:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
-      57:	eb df                	jmp    0x38
-      59:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
-      5c:	89 c1                	mov    ecx,eax
-      5e:	83 c0 04             	add    eax,0x4
-      61:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
-      64:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
-      67:	89 01                	mov    DWORD PTR [ecx],eax
-      69:	eb e3                	jmp    0x4e
-      6b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
-      6e:	c9                   	leave
-      6f:	c3                   	ret
-      70:	55                   	push   ebp
-      71:	89 e5                	mov    ebp,esp
-      73:	81 ec 00 00 00 00    	sub    esp,0x0
-      79:	8b 05 00 90 04 08    	mov    eax,DWORD PTR ds:0x8049000
-      7f:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
-      82:	89 08                	mov    DWORD PTR [eax],ecx
-      84:	c9                   	leave
-      85:	c3                   	ret
-      86:	55                   	push   ebp
-      87:	89 e5                	mov    ebp,esp
-      89:	81 ec 10 00 00 00    	sub    esp,0x10
-      8f:	b8 00 00 00 00       	mov    eax,0x0
-      94:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
-      97:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
-      9a:	48                   	dec    eax
-      9b:	8b 4d f4             	mov    ecx,DWORD PTR [ebp-0xc]
-      9e:	39 c1                	cmp    ecx,eax
-      a0:	0f 8d c3 00 00 00    	jge    0x169
-      a6:	e9 0b 00 00 00       	jmp    0xb6
-      ab:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
-      ae:	89 c1                	mov    ecx,eax
-      b0:	40                   	inc    eax
-      b1:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
-      b4:	eb e1                	jmp    0x97
-      b6:	b8 00 00 00 00       	mov    eax,0x0
-      bb:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
-      be:	b8 00 00 00 00       	mov    eax,0x0
-      c3:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
-      c6:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
-      c9:	48                   	dec    eax
-      ca:	8b 4d f4             	mov    ecx,DWORD PTR [ebp-0xc]
-      cd:	29 c8                	sub    eax,ecx
-      cf:	8b 4d f0             	mov    ecx,DWORD PTR [ebp-0x10]
-      d2:	39 c1                	cmp    ecx,eax
-      d4:	0f 8d 79 00 00 00    	jge    0x153
-      da:	e9 0b 00 00 00       	jmp    0xea
-      df:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
-      e2:	89 c1                	mov    ecx,eax
-      e4:	40                   	inc    eax
-      e5:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
-      e8:	eb dc                	jmp    0xc6
-      ea:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
-      ed:	c1 e0 02             	shl    eax,0x2
-      f0:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
-      f3:	01 c1                	add    ecx,eax
-      f5:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
-      f8:	40                   	inc    eax
-      f9:	c1 e0 02             	shl    eax,0x2
-      fc:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
-      ff:	01 c2                	add    edx,eax
-     101:	8b 09                	mov    ecx,DWORD PTR [ecx]
-     103:	8b 12                	mov    edx,DWORD PTR [edx]
-     105:	39 d1                	cmp    ecx,edx
-     107:	0f 8e 44 00 00 00    	jle    0x151
-     10d:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
-     110:	c1 e0 02             	shl    eax,0x2
-     113:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
-     116:	01 c1                	add    ecx,eax
-     118:	8b 09                	mov    ecx,DWORD PTR [ecx]
-     11a:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
-     11d:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
-     120:	c1 e0 02             	shl    eax,0x2
-     123:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
-     126:	01 c1                	add    ecx,eax
-     128:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
-     12b:	40                   	inc    eax
-     12c:	c1 e0 02             	shl    eax,0x2
-     12f:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
-     132:	01 c2                	add    edx,eax
-     134:	8b 12                	mov    edx,DWORD PTR [edx]
-     136:	89 11                	mov    DWORD PTR [ecx],edx
-     138:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
-     13b:	40                   	inc    eax
-     13c:	c1 e0 02             	shl    eax,0x2
-     13f:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
-     142:	01 c1                	add    ecx,eax
-     144:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
-     147:	89 01                	mov    DWORD PTR [ecx],eax
-     149:	b8 01 00 00 00       	mov    eax,0x1
-     14e:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
-     151:	eb 8c                	jmp    0xdf
-     153:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
-     156:	83 f8 00             	cmp    eax,0x0
-     159:	0f 85 05 00 00 00    	jne    0x164
-     15f:	e9 05 00 00 00       	jmp    0x169
-     164:	e9 42 ff ff ff       	jmp    0xab
-     169:	c9                   	leave
-     16a:	c3                   	ret
-     16b:	55                   	push   ebp
-     16c:	89 e5                	mov    ebp,esp
-     16e:	81 ec 0c 00 00 00    	sub    esp,0xc
-     174:	b8 01 00 00 00       	mov    eax,0x1
-     179:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
-     17c:	b8 00 00 00 00       	mov    eax,0x0
-     181:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
-     184:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
-     187:	83 f8 00             	cmp    eax,0x0
-     18a:	0f 8d 15 00 00 00    	jge    0x1a5
-     190:	b8 01 00 00 00       	mov    eax,0x1
-     195:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
-     198:	b8 00 00 00 00       	mov    eax,0x0
-     19d:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
-     1a0:	29 c8                	sub    eax,ecx
-     1a2:	89 45 08             	mov    DWORD PTR [ebp+0x8],eax
-     1a5:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
-     1a8:	8b 4d fc             	mov    ecx,DWORD PTR [ebp-0x4]
-     1ab:	99                   	cdq
-     1ac:	f7 f9                	idiv   ecx
-     1ae:	83 f8 0b             	cmp    eax,0xb
-     1b1:	0f 8e 10 00 00 00    	jle    0x1c7
-     1b7:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
-     1ba:	b9 0a 00 00 00       	mov    ecx,0xa
-     1bf:	0f af c1             	imul   eax,ecx
-     1c2:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
-     1c5:	eb de                	jmp    0x1a5
-     1c7:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
+      24:	81 ec 00 00 00 00    	sub    esp,0x0
+      2a:	c9                   	leave
+      2b:	c3                   	ret
+      2c:	55                   	push   ebp
+      2d:	89 e5                	mov    ebp,esp
+      2f:	81 ec 0c 00 00 00    	sub    esp,0xc
+      35:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
+      38:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
+      3b:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
+      3e:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
+      41:	b8 00 00 00 00       	mov    eax,0x0
+      46:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
+      49:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
+      4c:	c1 e8 02             	shr    eax,0x2
+      4f:	8b 4d f4             	mov    ecx,DWORD PTR [ebp-0xc]
+      52:	39 c1                	cmp    ecx,eax
+      54:	0f 83 2c 00 00 00    	jae    0x86
+      5a:	e9 0b 00 00 00       	jmp    0x6a
+      5f:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
+      62:	89 c1                	mov    ecx,eax
+      64:	40                   	inc    eax
+      65:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
+      68:	eb df                	jmp    0x49
+      6a:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
+      6d:	89 c1                	mov    ecx,eax
+      6f:	83 c0 04             	add    eax,0x4
+      72:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
+      75:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
+      78:	89 c2                	mov    edx,eax
+      7a:	83 c0 04             	add    eax,0x4
+      7d:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
+      80:	8b 12                	mov    edx,DWORD PTR [edx]
+      82:	89 11                	mov    DWORD PTR [ecx],edx
+      84:	eb d9                	jmp    0x5f
+      86:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
+      89:	c9                   	leave
+      8a:	c3                   	ret
+      8b:	55                   	push   ebp
+      8c:	89 e5                	mov    ebp,esp
+      8e:	81 ec 00 00 00 00    	sub    esp,0x0
+      94:	8b 05 00 90 04 08    	mov    eax,DWORD PTR ds:0x8049000
+      9a:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
+      9d:	89 08                	mov    DWORD PTR [eax],ecx
+      9f:	c9                   	leave
+      a0:	c3                   	ret
+      a1:	55                   	push   ebp
+      a2:	89 e5                	mov    ebp,esp
+      a4:	81 ec 0c 00 00 00    	sub    esp,0xc
+      aa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
+      ad:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
+      b0:	b8 00 00 00 00       	mov    eax,0x0
+      b5:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
+      b8:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
+      bb:	89 c1                	mov    ecx,eax
+      bd:	83 c0 04             	add    eax,0x4
+      c0:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
+      c3:	8b 09                	mov    ecx,DWORD PTR [ecx]
+      c5:	89 4d f8             	mov    DWORD PTR [ebp-0x8],ecx
+      c8:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
+      cb:	83 c0 04             	add    eax,0x4
+      ce:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
+      d1:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
+      d4:	c1 f8 18             	sar    eax,0x18
+      d7:	81 e0 ff 00 00 00    	and    eax,0xff
+      dd:	83 f8 00             	cmp    eax,0x0
+      e0:	0f 85 05 00 00 00    	jne    0xeb
+      e6:	e9 a1 00 00 00       	jmp    0x18c
+      eb:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
+      ee:	c1 f8 18             	sar    eax,0x18
+      f1:	81 e0 ff 00 00 00    	and    eax,0xff
+      f7:	50                   	push   eax
+      f8:	e8 8e ff ff ff       	call   0x8b
+      fd:	83 c4 04             	add    esp,0x4
+     100:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
+     103:	c1 f8 10             	sar    eax,0x10
+     106:	81 e0 ff 00 00 00    	and    eax,0xff
+     10c:	83 f8 00             	cmp    eax,0x0
+     10f:	0f 85 05 00 00 00    	jne    0x11a
+     115:	e9 72 00 00 00       	jmp    0x18c
+     11a:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
+     11d:	c1 f8 10             	sar    eax,0x10
+     120:	81 e0 ff 00 00 00    	and    eax,0xff
+     126:	50                   	push   eax
+     127:	e8 5f ff ff ff       	call   0x8b
+     12c:	83 c4 04             	add    esp,0x4
+     12f:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
+     132:	c1 f8 08             	sar    eax,0x8
+     135:	81 e0 ff 00 00 00    	and    eax,0xff
+     13b:	83 f8 00             	cmp    eax,0x0
+     13e:	0f 85 05 00 00 00    	jne    0x149
+     144:	e9 43 00 00 00       	jmp    0x18c
+     149:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
+     14c:	c1 f8 08             	sar    eax,0x8
+     14f:	81 e0 ff 00 00 00    	and    eax,0xff
+     155:	50                   	push   eax
+     156:	e8 30 ff ff ff       	call   0x8b
+     15b:	83 c4 04             	add    esp,0x4
+     15e:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
+     161:	81 e0 ff 00 00 00    	and    eax,0xff
+     167:	83 f8 00             	cmp    eax,0x0
+     16a:	0f 85 05 00 00 00    	jne    0x175
+     170:	e9 17 00 00 00       	jmp    0x18c
+     175:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
+     178:	81 e0 ff 00 00 00    	and    eax,0xff
+     17e:	50                   	push   eax
+     17f:	e8 07 ff ff ff       	call   0x8b
+     184:	83 c4 04             	add    esp,0x4
+     187:	e9 2c ff ff ff       	jmp    0xb8
+     18c:	c9                   	leave
+     18d:	c3                   	ret
+     18e:	55                   	push   ebp
+     18f:	89 e5                	mov    ebp,esp
+     191:	81 ec 0c 00 00 00    	sub    esp,0xc
+     197:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
+     19a:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
+     19d:	b8 00 00 00 00       	mov    eax,0x0
+     1a2:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
+     1a5:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
+     1a8:	89 c1                	mov    ecx,eax
+     1aa:	83 c0 04             	add    eax,0x4
+     1ad:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
+     1b0:	8b 09                	mov    ecx,DWORD PTR [ecx]
+     1b2:	89 4d f8             	mov    DWORD PTR [ebp-0x8],ecx
+     1b5:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
+     1b8:	83 c0 04             	add    eax,0x4
+     1bb:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
+     1be:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
+     1c1:	c1 f8 18             	sar    eax,0x18
+     1c4:	81 e0 ff 00 00 00    	and    eax,0xff
      1ca:	83 f8 00             	cmp    eax,0x0
-     1cd:	0f 8e 13 00 00 00    	jle    0x1e6
-     1d3:	b8 2d 00 00 00       	mov    eax,0x2d
-     1d8:	50                   	push   eax
-     1d9:	e8 92 fe ff ff       	call   0x70
-     1de:	83 c4 04             	add    esp,0x4
-     1e1:	e9 0e 00 00 00       	jmp    0x1f4
-     1e6:	b8 2b 00 00 00       	mov    eax,0x2b
-     1eb:	50                   	push   eax
-     1ec:	e8 7f fe ff ff       	call   0x70
-     1f1:	83 c4 04             	add    esp,0x4
-     1f4:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
-     1f7:	83 f8 00             	cmp    eax,0x0
-     1fa:	0f 8e 33 00 00 00    	jle    0x233
-     200:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
-     203:	8b 4d fc             	mov    ecx,DWORD PTR [ebp-0x4]
-     206:	99                   	cdq
-     207:	f7 f9                	idiv   ecx
-     209:	b9 0a 00 00 00       	mov    ecx,0xa
-     20e:	99                   	cdq
-     20f:	f7 f9                	idiv   ecx
-     211:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
-     214:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
-     217:	83 c0 30             	add    eax,0x30
-     21a:	50                   	push   eax
-     21b:	e8 50 fe ff ff       	call   0x70
-     220:	83 c4 04             	add    esp,0x4
-     223:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
-     226:	b9 0a 00 00 00       	mov    ecx,0xa
-     22b:	99                   	cdq
-     22c:	f7 f9                	idiv   ecx
-     22e:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
-     231:	eb c1                	jmp    0x1f4
-     233:	c9                   	leave
-     234:	c3                   	ret
-     235:	55                   	push   ebp
-     236:	89 e5                	mov    ebp,esp
-     238:	81 ec 20 00 00 00    	sub    esp,0x20
-     23e:	b8 14 00 00 00       	mov    eax,0x14
-     243:	50                   	push   eax
-     244:	b8 00 00 00 00       	mov    eax,0x0
-     249:	50                   	push   eax
-     24a:	8d 45 ec             	lea    eax,[ebp-0x14]
-     24d:	50                   	push   eax
-     24e:	e8 ce fd ff ff       	call   0x21
-     253:	83 c4 0c             	add    esp,0xc
-     256:	b8 01 00 00 00       	mov    eax,0x1
-     25b:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
-     25e:	b8 02 00 00 00       	mov    eax,0x2
-     263:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
-     266:	b8 03 00 00 00       	mov    eax,0x3
-     26b:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
-     26e:	b8 04 00 00 00       	mov    eax,0x4
-     273:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
-     276:	b8 05 00 00 00       	mov    eax,0x5
-     27b:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
-     27e:	b8 05 00 00 00       	mov    eax,0x5
-     283:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
-     286:	b8 00 00 00 00       	mov    eax,0x0
-     28b:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
-     28e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
-     291:	8b 4d e8             	mov    ecx,DWORD PTR [ebp-0x18]
-     294:	39 c8                	cmp    eax,ecx
-     296:	0f 8d 2e 00 00 00    	jge    0x2ca
-     29c:	e9 0b 00 00 00       	jmp    0x2ac
-     2a1:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
-     2a4:	89 c1                	mov    ecx,eax
-     2a6:	40                   	inc    eax
-     2a7:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
-     2aa:	eb e2                	jmp    0x28e
-     2ac:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
-     2af:	c1 e0 02             	shl    eax,0x2
-     2b2:	8d 4d ec             	lea    ecx,[ebp-0x14]
-     2b5:	01 c1                	add    ecx,eax
-     2b7:	8b 09                	mov    ecx,DWORD PTR [ecx]
-     2b9:	89 4d e0             	mov    DWORD PTR [ebp-0x20],ecx
-     2bc:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
-     2bf:	50                   	push   eax
-     2c0:	e8 a6 fe ff ff       	call   0x16b
-     2c5:	83 c4 04             	add    esp,0x4
-     2c8:	eb d7                	jmp    0x2a1
-     2ca:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
-     2cd:	c9                   	leave
-     2ce:	c3                   	ret
+     1cd:	0f 85 09 00 00 00    	jne    0x1dc
+     1d3:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
+     1d6:	48                   	dec    eax
+     1d7:	e9 62 00 00 00       	jmp    0x23e
+     1dc:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
+     1df:	c1 f8 10             	sar    eax,0x10
+     1e2:	81 e0 ff 00 00 00    	and    eax,0xff
+     1e8:	83 f8 00             	cmp    eax,0x0
+     1eb:	0f 85 0b 00 00 00    	jne    0x1fc
+     1f1:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
+     1f4:	83 e8 02             	sub    eax,0x2
+     1f7:	e9 42 00 00 00       	jmp    0x23e
+     1fc:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
+     1ff:	c1 f8 08             	sar    eax,0x8
+     202:	81 e0 ff 00 00 00    	and    eax,0xff
+     208:	83 f8 00             	cmp    eax,0x0
+     20b:	0f 85 0b 00 00 00    	jne    0x21c
+     211:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
+     214:	83 e8 03             	sub    eax,0x3
+     217:	e9 22 00 00 00       	jmp    0x23e
+     21c:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
+     21f:	81 e0 ff 00 00 00    	and    eax,0xff
+     225:	83 f8 00             	cmp    eax,0x0
+     228:	0f 85 0b 00 00 00    	jne    0x239
+     22e:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
+     231:	83 e8 04             	sub    eax,0x4
+     234:	e9 05 00 00 00       	jmp    0x23e
+     239:	e9 67 ff ff ff       	jmp    0x1a5
+     23e:	c9                   	leave
+     23f:	c3                   	ret
+     240:	55                   	push   ebp
+     241:	89 e5                	mov    ebp,esp
+     243:	81 ec 00 00 00 00    	sub    esp,0x0
+     249:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
+     24c:	8b 4d 10             	mov    ecx,DWORD PTR [ebp+0x10]
+     24f:	0f af c1             	imul   eax,ecx
+     252:	8b 4d 0c             	mov    ecx,DWORD PTR [ebp+0xc]
+     255:	8b 55 14             	mov    edx,DWORD PTR [ebp+0x14]
+     258:	0f af ca             	imul   ecx,edx
+     25b:	01 c8                	add    eax,ecx
+     25d:	c9                   	leave
+     25e:	c3                   	ret
+     25f:	55                   	push   ebp
+     260:	89 e5                	mov    ebp,esp
+     262:	81 ec 10 00 00 00    	sub    esp,0x10
+     268:	b8 00 00 00 00       	mov    eax,0x0
+     26d:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
+     270:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
+     273:	48                   	dec    eax
+     274:	8b 4d f4             	mov    ecx,DWORD PTR [ebp-0xc]
+     277:	39 c1                	cmp    ecx,eax
+     279:	0f 8d c3 00 00 00    	jge    0x342
+     27f:	e9 0b 00 00 00       	jmp    0x28f
+     284:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
+     287:	89 c1                	mov    ecx,eax
+     289:	40                   	inc    eax
+     28a:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
+     28d:	eb e1                	jmp    0x270
+     28f:	b8 00 00 00 00       	mov    eax,0x0
+     294:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
+     297:	b8 00 00 00 00       	mov    eax,0x0
+     29c:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
+     29f:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
+     2a2:	48                   	dec    eax
+     2a3:	8b 4d f4             	mov    ecx,DWORD PTR [ebp-0xc]
+     2a6:	29 c8                	sub    eax,ecx
+     2a8:	8b 4d f0             	mov    ecx,DWORD PTR [ebp-0x10]
+     2ab:	39 c1                	cmp    ecx,eax
+     2ad:	0f 8d 79 00 00 00    	jge    0x32c
+     2b3:	e9 0b 00 00 00       	jmp    0x2c3
+     2b8:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
+     2bb:	89 c1                	mov    ecx,eax
+     2bd:	40                   	inc    eax
+     2be:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
+     2c1:	eb dc                	jmp    0x29f
+     2c3:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
+     2c6:	c1 e0 02             	shl    eax,0x2
+     2c9:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
+     2cc:	01 c1                	add    ecx,eax
+     2ce:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
+     2d1:	40                   	inc    eax
+     2d2:	c1 e0 02             	shl    eax,0x2
+     2d5:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
+     2d8:	01 c2                	add    edx,eax
+     2da:	8b 09                	mov    ecx,DWORD PTR [ecx]
+     2dc:	8b 12                	mov    edx,DWORD PTR [edx]
+     2de:	39 d1                	cmp    ecx,edx
+     2e0:	0f 8e 44 00 00 00    	jle    0x32a
+     2e6:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
+     2e9:	c1 e0 02             	shl    eax,0x2
+     2ec:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
+     2ef:	01 c1                	add    ecx,eax
+     2f1:	8b 09                	mov    ecx,DWORD PTR [ecx]
+     2f3:	89 4d fc             	mov    DWORD PTR [ebp-0x4],ecx
+     2f6:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
+     2f9:	c1 e0 02             	shl    eax,0x2
+     2fc:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
+     2ff:	01 c1                	add    ecx,eax
+     301:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
+     304:	40                   	inc    eax
+     305:	c1 e0 02             	shl    eax,0x2
+     308:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
+     30b:	01 c2                	add    edx,eax
+     30d:	8b 12                	mov    edx,DWORD PTR [edx]
+     30f:	89 11                	mov    DWORD PTR [ecx],edx
+     311:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
+     314:	40                   	inc    eax
+     315:	c1 e0 02             	shl    eax,0x2
+     318:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
+     31b:	01 c1                	add    ecx,eax
+     31d:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
+     320:	89 01                	mov    DWORD PTR [ecx],eax
+     322:	b8 01 00 00 00       	mov    eax,0x1
+     327:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
+     32a:	eb 8c                	jmp    0x2b8
+     32c:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
+     32f:	83 f8 00             	cmp    eax,0x0
+     332:	0f 85 05 00 00 00    	jne    0x33d
+     338:	e9 05 00 00 00       	jmp    0x342
+     33d:	e9 42 ff ff ff       	jmp    0x284
+     342:	c9                   	leave
+     343:	c3                   	ret
+     344:	55                   	push   ebp
+     345:	89 e5                	mov    ebp,esp
+     347:	81 ec 0c 00 00 00    	sub    esp,0xc
+     34d:	b8 01 00 00 00       	mov    eax,0x1
+     352:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
+     355:	b8 00 00 00 00       	mov    eax,0x0
+     35a:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
+     35d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
+     360:	83 f8 00             	cmp    eax,0x0
+     363:	0f 8d 15 00 00 00    	jge    0x37e
+     369:	b8 01 00 00 00       	mov    eax,0x1
+     36e:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
+     371:	b8 00 00 00 00       	mov    eax,0x0
+     376:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
+     379:	29 c8                	sub    eax,ecx
+     37b:	89 45 08             	mov    DWORD PTR [ebp+0x8],eax
+     37e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
+     381:	8b 4d fc             	mov    ecx,DWORD PTR [ebp-0x4]
+     384:	99                   	cdq
+     385:	f7 f9                	idiv   ecx
+     387:	83 f8 0b             	cmp    eax,0xb
+     38a:	0f 8e 10 00 00 00    	jle    0x3a0
+     390:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
+     393:	b9 0a 00 00 00       	mov    ecx,0xa
+     398:	0f af c1             	imul   eax,ecx
+     39b:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
+     39e:	eb de                	jmp    0x37e
+     3a0:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
+     3a3:	83 f8 00             	cmp    eax,0x0
+     3a6:	0f 8e 13 00 00 00    	jle    0x3bf
+     3ac:	b8 2d 00 00 00       	mov    eax,0x2d
+     3b1:	50                   	push   eax
+     3b2:	e8 d4 fc ff ff       	call   0x8b
+     3b7:	83 c4 04             	add    esp,0x4
+     3ba:	e9 00 00 00 00       	jmp    0x3bf
+     3bf:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
+     3c2:	83 f8 00             	cmp    eax,0x0
+     3c5:	0f 8e 33 00 00 00    	jle    0x3fe
+     3cb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
+     3ce:	8b 4d fc             	mov    ecx,DWORD PTR [ebp-0x4]
+     3d1:	99                   	cdq
+     3d2:	f7 f9                	idiv   ecx
+     3d4:	b9 0a 00 00 00       	mov    ecx,0xa
+     3d9:	99                   	cdq
+     3da:	f7 f9                	idiv   ecx
+     3dc:	89 55 f4             	mov    DWORD PTR [ebp-0xc],edx
+     3df:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
+     3e2:	83 c0 30             	add    eax,0x30
+     3e5:	50                   	push   eax
+     3e6:	e8 a0 fc ff ff       	call   0x8b
+     3eb:	83 c4 04             	add    esp,0x4
+     3ee:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
+     3f1:	b9 0a 00 00 00       	mov    ecx,0xa
+     3f6:	99                   	cdq
+     3f7:	f7 f9                	idiv   ecx
+     3f9:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
+     3fc:	eb c1                	jmp    0x3bf
+     3fe:	c9                   	leave
+     3ff:	c3                   	ret
+     400:	55                   	push   ebp
+     401:	89 e5                	mov    ebp,esp
+     403:	81 ec 18 00 00 00    	sub    esp,0x18
+     409:	b8 01 00 00 00       	mov    eax,0x1
+     40e:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
+     411:	b8 01 00 00 00       	mov    eax,0x1
+     416:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
+     419:	b8 02 00 00 00       	mov    eax,0x2
+     41e:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
+     421:	b8 02 00 00 00       	mov    eax,0x2
+     426:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
+     429:	81 ec 08 00 00 00    	sub    esp,0x8
+     42f:	89 e0                	mov    eax,esp
+     431:	b9 08 00 00 00       	mov    ecx,0x8
+     436:	51                   	push   ecx
+     437:	8d 4d f0             	lea    ecx,[ebp-0x10]
+     43a:	51                   	push   ecx
+     43b:	50                   	push   eax
+     43c:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
+     43f:	e8 e8 fb ff ff       	call   0x2c
+     444:	83 c4 0c             	add    esp,0xc
+     447:	81 ec 08 00 00 00    	sub    esp,0x8
+     44d:	89 e0                	mov    eax,esp
+     44f:	b9 08 00 00 00       	mov    ecx,0x8
+     454:	51                   	push   ecx
+     455:	8d 4d f8             	lea    ecx,[ebp-0x8]
+     458:	51                   	push   ecx
+     459:	50                   	push   eax
+     45a:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
+     45d:	e8 ca fb ff ff       	call   0x2c
+     462:	83 c4 0c             	add    esp,0xc
+     465:	e8 d6 fd ff ff       	call   0x240
+     46a:	83 c4 10             	add    esp,0x10
+     46d:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
+     470:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
+     473:	c9                   	leave
+     474:	c3                   	ret
+     475:	55                   	push   ebp
+     476:	89 e5                	mov    ebp,esp
+     478:	81 ec 20 00 00 00    	sub    esp,0x20
+     47e:	b8 14 00 00 00       	mov    eax,0x14
+     483:	50                   	push   eax
+     484:	b8 00 00 00 00       	mov    eax,0x0
+     489:	50                   	push   eax
+     48a:	8d 45 ec             	lea    eax,[ebp-0x14]
+     48d:	50                   	push   eax
+     48e:	e8 8e fb ff ff       	call   0x21
+     493:	83 c4 0c             	add    esp,0xc
+     496:	b8 ff ff ff ff       	mov    eax,0xffffffff
+     49b:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
+     49e:	b8 cc fd ff ff       	mov    eax,0xfffffdcc
+     4a3:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
+     4a6:	b8 a4 01 00 00       	mov    eax,0x1a4
+     4ab:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
+     4ae:	b8 45 00 00 00       	mov    eax,0x45
+     4b3:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
+     4b6:	b8 b0 04 00 00       	mov    eax,0x4b0
+     4bb:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
+     4be:	b8 05 00 00 00       	mov    eax,0x5
+     4c3:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
+     4c6:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
+     4c9:	50                   	push   eax
+     4ca:	e8 75 fe ff ff       	call   0x344
+     4cf:	83 c4 04             	add    esp,0x4
+     4d2:	b8 00 00 00 00       	mov    eax,0x0
+     4d7:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
+     4da:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
+     4dd:	8b 4d e8             	mov    ecx,DWORD PTR [ebp-0x18]
+     4e0:	39 c8                	cmp    eax,ecx
+     4e2:	0f 8d 3c 00 00 00    	jge    0x524
+     4e8:	e9 0b 00 00 00       	jmp    0x4f8
+     4ed:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
+     4f0:	89 c1                	mov    ecx,eax
+     4f2:	40                   	inc    eax
+     4f3:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
+     4f6:	eb e2                	jmp    0x4da
+     4f8:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
+     4fb:	c1 e0 02             	shl    eax,0x2
+     4fe:	8d 4d ec             	lea    ecx,[ebp-0x14]
+     501:	01 c1                	add    ecx,eax
+     503:	8b 09                	mov    ecx,DWORD PTR [ecx]
+     505:	89 4d e0             	mov    DWORD PTR [ebp-0x20],ecx
+     508:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
+     50b:	50                   	push   eax
+     50c:	e8 33 fe ff ff       	call   0x344
+     511:	83 c4 04             	add    esp,0x4
+     514:	b8 20 00 00 00       	mov    eax,0x20
+     519:	50                   	push   eax
+     51a:	e8 6c fb ff ff       	call   0x8b
+     51f:	83 c4 04             	add    esp,0x4
+     522:	eb c9                	jmp    0x4ed
+     524:	b8 0a 00 00 00       	mov    eax,0xa
+     529:	50                   	push   eax
+     52a:	e8 5c fb ff ff       	call   0x8b
+     52f:	83 c4 04             	add    esp,0x4
+     532:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
+     535:	50                   	push   eax
+     536:	8d 45 ec             	lea    eax,[ebp-0x14]
+     539:	50                   	push   eax
+     53a:	e8 20 fd ff ff       	call   0x25f
+     53f:	83 c4 08             	add    esp,0x8
+     542:	b8 00 00 00 00       	mov    eax,0x0
+     547:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
+     54a:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
+     54d:	8b 4d e8             	mov    ecx,DWORD PTR [ebp-0x18]
+     550:	39 c8                	cmp    eax,ecx
+     552:	0f 8d 3c 00 00 00    	jge    0x594
+     558:	e9 0b 00 00 00       	jmp    0x568
+     55d:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
+     560:	89 c1                	mov    ecx,eax
+     562:	40                   	inc    eax
+     563:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
+     566:	eb e2                	jmp    0x54a
+     568:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
+     56b:	c1 e0 02             	shl    eax,0x2
+     56e:	8d 4d ec             	lea    ecx,[ebp-0x14]
+     571:	01 c1                	add    ecx,eax
+     573:	8b 09                	mov    ecx,DWORD PTR [ecx]
+     575:	89 4d e0             	mov    DWORD PTR [ebp-0x20],ecx
+     578:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
+     57b:	50                   	push   eax
+     57c:	e8 c3 fd ff ff       	call   0x344
+     581:	83 c4 04             	add    esp,0x4
+     584:	b8 20 00 00 00       	mov    eax,0x20
+     589:	50                   	push   eax
+     58a:	e8 fc fa ff ff       	call   0x8b
+     58f:	83 c4 04             	add    esp,0x4
+     592:	eb c9                	jmp    0x55d
+     594:	e8 67 fe ff ff       	call   0x400
+     599:	c9                   	leave
+     59a:	c3                   	ret
 	...
      fff:	00 22                	add    BYTE PTR [edx],ah
     1001:	22 22                	and    ah,BYTE PTR [edx]
diff --git a/out/curr.interp b/out/curr.interp
index 5c4c2af7..0f08e356 100644
--- a/out/curr.interp
+++ b/out/curr.interp
@@ -7,561 +7,1752 @@
 0x00000018:	add r7,r6,r0            	R7=R6+R0=0x00007FF4,SR=0x00000000
 0x0000001C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFD,SR=0x00000000
 0x00000020:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FF4,SR=0x00000000
-0x00000024:	call 195                	PC=0x00000334,MEM[0x00007FF4]=0x00000028
-0x00000334:	push r6                 	MEM[0x00007FF0]{0x00007FF4}={R6}
-0x00000338:	push r7                 	MEM[0x00007FEC]{0x00001FFD}={R7}
-0x0000033C:	add r6,sp,r0            	R6=SP+R0=0x00007FE8,SR=0x00000000
-0x00000340:	add r7,r6,r0            	R7=R6+R0=0x00007FE8,SR=0x00000000
-0x00000344:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFA,SR=0x00000000
-0x00000348:	subi sp,sp,32           	SP=SP-0x00000020=0x00007FC8,SR=0x00000000
-0x0000034C:	mov r1,20               	R1=0x00000014
-0x00000350:	push r1                 	MEM[0x00007FC8]{0x00000014}={R1}
-0x00000354:	mov r1,0                	R1=0x00000000
-0x00000358:	push r1                 	MEM[0x00007FC4]{0x00000000}={R1}
-0x0000035C:	addi r1,r7,-4           	R1=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
-0x00000360:	push r1                 	MEM[0x00007FC0]{0x00001FF6}={R1}
-0x00000364:	call -203               	PC=0x0000003C,MEM[0x00007FBC]=0x00000368
+0x00000024:	call 421                	PC=0x000006BC,MEM[0x00007FF4]=0x00000028
+0x000006BC:	push r6                 	MEM[0x00007FF0]{0x00007FF4}={R6}
+0x000006C0:	push r7                 	MEM[0x00007FEC]{0x00001FFD}={R7}
+0x000006C4:	add r6,sp,r0            	R6=SP+R0=0x00007FE8,SR=0x00000000
+0x000006C8:	add r7,r6,r0            	R7=R6+R0=0x00007FE8,SR=0x00000000
+0x000006CC:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FFA,SR=0x00000000
+0x000006D0:	subi sp,sp,32           	SP=SP-0x00000020=0x00007FC8,SR=0x00000000
+0x000006D4:	movs r1,20              	R1=0x00000014
+0x000006D8:	push r1                 	MEM[0x00007FC8]{0x00000014}={R1}
+0x000006DC:	movs r1,0               	R1=0x00000000
+0x000006E0:	push r1                 	MEM[0x00007FC4]{0x00000000}={R1}
+0x000006E4:	addi r1,r7,-4           	R1=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x000006E8:	push r1                 	MEM[0x00007FC0]{0x00001FF6}={R1}
+0x000006EC:	call -429               	PC=0x0000003C,MEM[0x00007FBC]=0x000006F0
 0x0000003C:	push r6                 	MEM[0x00007FB8]{0x00007FE8}={R6}
 0x00000040:	push r7                 	MEM[0x00007FB4]{0x00001FFA}={R7}
 0x00000044:	add r6,sp,r0            	R6=SP+R0=0x00007FB0,SR=0x00000000
 0x00000048:	add r7,r6,r0            	R7=R6+R0=0x00007FB0,SR=0x00000000
 0x0000004C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEC,SR=0x00000000
-0x00000050:	subi sp,sp,8            	SP=SP-0x00000008=0x00007FA8,SR=0x00000000
-0x00000054:	l32 r1,[r7+4]           	R1=MEM[0x00007FC0]=0x00001FF6
-0x00000058:	s32 [r7+0],r1           	MEM[0x00007FB0]=R1=0x00001FF6
-0x0000005C:	mov r1,0                	R1=0x00000000
-0x00000060:	s32 [r7-1],r1           	MEM[0x00007FAC]=R1=0x00000000
-0x00000064:	l32 r1,[r7+24]          	R1=MEM[0x00008010]=0x00000000
-0x00000068:	srl r0,r1,r1,1          	R0:R1=R0:R1>>2=0x0000000000000000,SR=0x00000040
-0x0000006C:	l32 r2,[r7-4]           	R2=MEM[0x00007FA0]=0x00000000
-0x00000070:	cmp r2,r1               	SR=0x00000040
-0x00000074:	bae 13                  	PC=0x000000AC
-0x000000AC:	l32 r2,[r7+4]           	R2=MEM[0x00007FC0]=0x00001FF6
-0x000000B0:	add sp,r6,r0            	SP=R6+R0=0x00007FB0,SR=0x00000000
-0x000000B4:	pop r7                  	{R7}=MEM[0x00007FB4]{0x00001FFA}
-0x000000B8:	pop r6                  	{R6}=MEM[0x00007FB8]{0x00007FE8}
-0x000000BC:	ret                     	PC=MEM[0x00007FBC]=0x00000368
-0x00000368:	addi sp,sp,12           	SP=SP+0x0000000C=0x00007FC8,SR=0x00000000
-0x0000036C:	mov r1,1                	R1=0x00000001
-0x00000370:	s32 [r7-4],r1           	MEM[0x00007FD8]=R1=0x00000001
-0x00000374:	mov r1,2                	R1=0x00000002
-0x00000378:	s32 [r7-3],r1           	MEM[0x00007FDC]=R1=0x00000002
-0x0000037C:	mov r1,3                	R1=0x00000003
-0x00000380:	s32 [r7-2],r1           	MEM[0x00007FE0]=R1=0x00000003
-0x00000384:	mov r1,4                	R1=0x00000004
-0x00000388:	s32 [r7-1],r1           	MEM[0x00007FE4]=R1=0x00000004
-0x0000038C:	mov r1,5                	R1=0x00000005
-0x00000390:	s32 [r7+0],r1           	MEM[0x00007FE8]=R1=0x00000005
-0x00000394:	mov r1,5                	R1=0x00000005
-0x00000398:	s32 [r7-5],r1           	MEM[0x00007FD4]=R1=0x00000005
-0x0000039C:	mov r1,0                	R1=0x00000000
-0x000003A0:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000000
-0x000003A4:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000000
-0x000003A8:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
-0x000003AC:	cmp r1,r2               	SR=0x00000011
-0x000003B0:	bge 16                  	PC=0x000003B4
-0x000003B4:	bun 5                   	PC=0x000003CC
-0x000003CC:	addi r1,r7,-4           	R1=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
-0x000003D0:	l32 r2,[r7-6]           	R2=MEM[0x00007FD0]=0x00000000
-0x000003D4:	add r1,r1,r2            	R1=R1+R2=0x00001FF6,SR=0x00000000
-0x000003D8:	l32 r1,[r1+0]           	R1=MEM[0x00000004]=0x00000001
-0x000003DC:	s32 [r7-7],r1           	MEM[0x00007FCC]=R1=0x00000001
-0x000003E0:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0x00000001
-0x000003E4:	push r1                 	MEM[0x00007FC8]{0x00000001}={R1}
-0x000003E8:	call -110               	PC=0x00000234,MEM[0x00007FC4]=0x000003EC
-0x00000234:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
-0x00000238:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
-0x0000023C:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
-0x00000240:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
-0x00000244:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
-0x00000248:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
-0x0000024C:	mov r1,1                	R1=0x00000001
-0x00000250:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
-0x00000254:	mov r1,0                	R1=0x00000000
-0x00000258:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
-0x0000025C:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
-0x00000260:	cmpi r1,0               	SR=0x00000000
-0x00000264:	bge 6                   	PC=0x00000280
-0x00000280:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
-0x00000284:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
-0x00000288:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
-0x0000028C:	cmpi r1,11              	SR=0x00000011
-0x00000290:	ble 5                   	PC=0x000002A8
-0x000002A8:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000000
-0x000002AC:	cmpi r1,0               	SR=0x00000040
-0x000002B0:	ble 5                   	PC=0x000002C8
-0x000002C8:	mov r1,43               	R1=0x0000002B
-0x000002CC:	push r1                 	MEM[0x00007FAC]{0x0000002B}={R1}
-0x000002D0:	call -133               	PC=0x000000C0,MEM[0x00007FA8]=0x000002D4
-0x000000C0:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
-0x000000D4:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
-0x000000D8:	mov r8,1024             	R8=0x00000400
-0x000000DC:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x000000E0:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002B
-0x000000E4:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002B
-0x000000E8:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
-0x000000EC:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
-0x000000F0:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
-0x000000F4:	ret                     	PC=MEM[0x00007FA8]=0x000002D4
-0x000002D4:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
-0x000002D8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
-0x000002DC:	cmpi r1,0               	SR=0x00000000
-0x000002E0:	ble 16                  	PC=0x000002E4
-0x000002E4:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
-0x000002E8:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
-0x000002EC:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
-0x000002F0:	mov r2,10               	R2=0x0000000A
-0x000002F4:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
-0x000002F8:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000001
-0x000002FC:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000001
-0x00000300:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
-0x00000304:	push r1                 	MEM[0x00007FAC]{0x00000031}={R1}
-0x00000308:	call -147               	PC=0x000000C0,MEM[0x00007FA8]=0x0000030C
-0x000000C0:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
-0x000000D4:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
-0x000000D8:	mov r8,1024             	R8=0x00000400
-0x000000DC:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x000000E0:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000031
-0x000000E4:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
-0x000000E8:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
-0x000000EC:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
-0x000000F0:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
-0x000000F4:	ret                     	PC=MEM[0x00007FA8]=0x0000030C
-0x0000030C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
-0x00000310:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
-0x00000314:	mov r2,10               	R2=0x0000000A
-0x00000318:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
-0x0000031C:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
-0x00000320:	bun -19                 	PC=0x000002D8
-0x000002D8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
-0x000002DC:	cmpi r1,0               	SR=0x00000040
-0x000002E0:	ble 16                  	PC=0x00000324
-0x00000324:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
-0x00000328:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
-0x0000032C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
-0x00000330:	ret                     	PC=MEM[0x00007FC4]=0x000003EC
-0x000003EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
-0x000003F0:	bun -15                 	PC=0x000003B8
-0x000003B8:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000000
-0x000003BC:	add r2,r1,r0            	R2=R1+R0=0x00000000,SR=0x00000040
-0x000003C0:	addi r1,r1,1            	R1=R1+0x00000001=0x00000001,SR=0x00000000
-0x000003C4:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000001
-0x000003C8:	bun -10                 	PC=0x000003A4
-0x000003A4:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000001
-0x000003A8:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
-0x000003AC:	cmp r1,r2               	SR=0x00000011
-0x000003B0:	bge 16                  	PC=0x000003B4
-0x000003B4:	bun 5                   	PC=0x000003CC
-0x000003CC:	addi r1,r7,-4           	R1=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
-0x000003D0:	l32 r2,[r7-6]           	R2=MEM[0x00007FD0]=0x00000001
-0x000003D4:	add r1,r1,r2            	R1=R1+R2=0x00001FF7,SR=0x00000000
-0x000003D8:	l32 r1,[r1+0]           	R1=MEM[0x00000008]=0x00000002
-0x000003DC:	s32 [r7-7],r1           	MEM[0x00007FCC]=R1=0x00000002
-0x000003E0:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0x00000002
-0x000003E4:	push r1                 	MEM[0x00007FC8]{0x00000002}={R1}
-0x000003E8:	call -110               	PC=0x00000234,MEM[0x00007FC4]=0x000003EC
-0x00000234:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
-0x00000238:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
-0x0000023C:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
-0x00000240:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
-0x00000244:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
-0x00000248:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
-0x0000024C:	mov r1,1                	R1=0x00000001
-0x00000250:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
-0x00000254:	mov r1,0                	R1=0x00000000
-0x00000258:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
-0x0000025C:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000002
-0x00000260:	cmpi r1,0               	SR=0x00000000
-0x00000264:	bge 6                   	PC=0x00000280
-0x00000280:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000002
-0x00000284:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
-0x00000288:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000002,SR=0x00000000
-0x0000028C:	cmpi r1,11              	SR=0x00000011
-0x00000290:	ble 5                   	PC=0x000002A8
-0x000002A8:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000000
-0x000002AC:	cmpi r1,0               	SR=0x00000040
-0x000002B0:	ble 5                   	PC=0x000002C8
-0x000002C8:	mov r1,43               	R1=0x0000002B
-0x000002CC:	push r1                 	MEM[0x00007FAC]{0x0000002B}={R1}
-0x000002D0:	call -133               	PC=0x000000C0,MEM[0x00007FA8]=0x000002D4
-0x000000C0:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
-0x000000D4:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
-0x000000D8:	mov r8,1024             	R8=0x00000400
-0x000000DC:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x000000E0:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002B
-0x000000E4:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002B
-0x000000E8:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
-0x000000EC:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
-0x000000F0:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
-0x000000F4:	ret                     	PC=MEM[0x00007FA8]=0x000002D4
-0x000002D4:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
-0x000002D8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
-0x000002DC:	cmpi r1,0               	SR=0x00000000
-0x000002E0:	ble 16                  	PC=0x000002E4
-0x000002E4:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000002
-0x000002E8:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
-0x000002EC:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000002,SR=0x00000000
-0x000002F0:	mov r2,10               	R2=0x0000000A
-0x000002F4:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000002,R1=R1/R2=0x00000000,SR=0x00000041
-0x000002F8:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000002
-0x000002FC:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000002
-0x00000300:	addi r1,r1,48           	R1=R1+0x00000030=0x00000032,SR=0x00000000
-0x00000304:	push r1                 	MEM[0x00007FAC]{0x00000032}={R1}
-0x00000308:	call -147               	PC=0x000000C0,MEM[0x00007FA8]=0x0000030C
-0x000000C0:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
-0x000000D4:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
-0x000000D8:	mov r8,1024             	R8=0x00000400
-0x000000DC:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x000000E0:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000032
-0x000000E4:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000032
-0x000000E8:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
-0x000000EC:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
-0x000000F0:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
-0x000000F4:	ret                     	PC=MEM[0x00007FA8]=0x0000030C
-0x0000030C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
-0x00000310:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
-0x00000314:	mov r2,10               	R2=0x0000000A
-0x00000318:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
-0x0000031C:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
-0x00000320:	bun -19                 	PC=0x000002D8
-0x000002D8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
-0x000002DC:	cmpi r1,0               	SR=0x00000040
-0x000002E0:	ble 16                  	PC=0x00000324
-0x00000324:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
-0x00000328:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
-0x0000032C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
-0x00000330:	ret                     	PC=MEM[0x00007FC4]=0x000003EC
-0x000003EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
-0x000003F0:	bun -15                 	PC=0x000003B8
-0x000003B8:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000001
-0x000003BC:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
-0x000003C0:	addi r1,r1,1            	R1=R1+0x00000001=0x00000002,SR=0x00000000
-0x000003C4:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000002
-0x000003C8:	bun -10                 	PC=0x000003A4
-0x000003A4:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000002
-0x000003A8:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
-0x000003AC:	cmp r1,r2               	SR=0x00000011
-0x000003B0:	bge 16                  	PC=0x000003B4
-0x000003B4:	bun 5                   	PC=0x000003CC
-0x000003CC:	addi r1,r7,-4           	R1=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
-0x000003D0:	l32 r2,[r7-6]           	R2=MEM[0x00007FD0]=0x00000002
-0x000003D4:	add r1,r1,r2            	R1=R1+R2=0x00001FF8,SR=0x00000000
-0x000003D8:	l32 r1,[r1+0]           	R1=MEM[0x0000000C]=0x00000003
-0x000003DC:	s32 [r7-7],r1           	MEM[0x00007FCC]=R1=0x00000003
-0x000003E0:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0x00000003
-0x000003E4:	push r1                 	MEM[0x00007FC8]{0x00000003}={R1}
-0x000003E8:	call -110               	PC=0x00000234,MEM[0x00007FC4]=0x000003EC
-0x00000234:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
-0x00000238:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
-0x0000023C:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
-0x00000240:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
-0x00000244:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
-0x00000248:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
-0x0000024C:	mov r1,1                	R1=0x00000001
-0x00000250:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
-0x00000254:	mov r1,0                	R1=0x00000000
-0x00000258:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
-0x0000025C:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000003
-0x00000260:	cmpi r1,0               	SR=0x00000000
-0x00000264:	bge 6                   	PC=0x00000280
-0x00000280:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000003
-0x00000284:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
-0x00000288:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000003,SR=0x00000000
-0x0000028C:	cmpi r1,11              	SR=0x00000011
-0x00000290:	ble 5                   	PC=0x000002A8
-0x000002A8:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000000
-0x000002AC:	cmpi r1,0               	SR=0x00000040
-0x000002B0:	ble 5                   	PC=0x000002C8
-0x000002C8:	mov r1,43               	R1=0x0000002B
-0x000002CC:	push r1                 	MEM[0x00007FAC]{0x0000002B}={R1}
-0x000002D0:	call -133               	PC=0x000000C0,MEM[0x00007FA8]=0x000002D4
-0x000000C0:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
-0x000000D4:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
-0x000000D8:	mov r8,1024             	R8=0x00000400
-0x000000DC:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x000000E0:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002B
-0x000000E4:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002B
-0x000000E8:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
-0x000000EC:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
-0x000000F0:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
-0x000000F4:	ret                     	PC=MEM[0x00007FA8]=0x000002D4
-0x000002D4:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
-0x000002D8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
-0x000002DC:	cmpi r1,0               	SR=0x00000000
-0x000002E0:	ble 16                  	PC=0x000002E4
-0x000002E4:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000003
-0x000002E8:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
-0x000002EC:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000003,SR=0x00000000
-0x000002F0:	mov r2,10               	R2=0x0000000A
-0x000002F4:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000003,R1=R1/R2=0x00000000,SR=0x00000041
-0x000002F8:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000003
-0x000002FC:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000003
-0x00000300:	addi r1,r1,48           	R1=R1+0x00000030=0x00000033,SR=0x00000000
-0x00000304:	push r1                 	MEM[0x00007FAC]{0x00000033}={R1}
-0x00000308:	call -147               	PC=0x000000C0,MEM[0x00007FA8]=0x0000030C
-0x000000C0:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
-0x000000D4:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
-0x000000D8:	mov r8,1024             	R8=0x00000400
-0x000000DC:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x000000E0:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000033
-0x000000E4:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000033
-0x000000E8:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
-0x000000EC:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
-0x000000F0:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
-0x000000F4:	ret                     	PC=MEM[0x00007FA8]=0x0000030C
-0x0000030C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
-0x00000310:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
-0x00000314:	mov r2,10               	R2=0x0000000A
-0x00000318:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
-0x0000031C:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
-0x00000320:	bun -19                 	PC=0x000002D8
-0x000002D8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
-0x000002DC:	cmpi r1,0               	SR=0x00000040
-0x000002E0:	ble 16                  	PC=0x00000324
-0x00000324:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
-0x00000328:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
-0x0000032C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
-0x00000330:	ret                     	PC=MEM[0x00007FC4]=0x000003EC
-0x000003EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
-0x000003F0:	bun -15                 	PC=0x000003B8
-0x000003B8:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000002
-0x000003BC:	add r2,r1,r0            	R2=R1+R0=0x00000002,SR=0x00000000
-0x000003C0:	addi r1,r1,1            	R1=R1+0x00000001=0x00000003,SR=0x00000000
-0x000003C4:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000003
-0x000003C8:	bun -10                 	PC=0x000003A4
-0x000003A4:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000003
-0x000003A8:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
-0x000003AC:	cmp r1,r2               	SR=0x00000011
-0x000003B0:	bge 16                  	PC=0x000003B4
-0x000003B4:	bun 5                   	PC=0x000003CC
-0x000003CC:	addi r1,r7,-4           	R1=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
-0x000003D0:	l32 r2,[r7-6]           	R2=MEM[0x00007FD0]=0x00000003
-0x000003D4:	add r1,r1,r2            	R1=R1+R2=0x00001FF9,SR=0x00000000
-0x000003D8:	l32 r1,[r1+0]           	R1=MEM[0x00000010]=0x00000004
-0x000003DC:	s32 [r7-7],r1           	MEM[0x00007FCC]=R1=0x00000004
-0x000003E0:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0x00000004
-0x000003E4:	push r1                 	MEM[0x00007FC8]{0x00000004}={R1}
-0x000003E8:	call -110               	PC=0x00000234,MEM[0x00007FC4]=0x000003EC
-0x00000234:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
-0x00000238:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
-0x0000023C:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
-0x00000240:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
-0x00000244:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
-0x00000248:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
-0x0000024C:	mov r1,1                	R1=0x00000001
-0x00000250:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
-0x00000254:	mov r1,0                	R1=0x00000000
-0x00000258:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
-0x0000025C:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000004
-0x00000260:	cmpi r1,0               	SR=0x00000000
-0x00000264:	bge 6                   	PC=0x00000280
-0x00000280:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000004
-0x00000284:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
-0x00000288:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000004,SR=0x00000000
-0x0000028C:	cmpi r1,11              	SR=0x00000011
-0x00000290:	ble 5                   	PC=0x000002A8
-0x000002A8:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000000
-0x000002AC:	cmpi r1,0               	SR=0x00000040
-0x000002B0:	ble 5                   	PC=0x000002C8
-0x000002C8:	mov r1,43               	R1=0x0000002B
-0x000002CC:	push r1                 	MEM[0x00007FAC]{0x0000002B}={R1}
-0x000002D0:	call -133               	PC=0x000000C0,MEM[0x00007FA8]=0x000002D4
-0x000000C0:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
-0x000000D4:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
-0x000000D8:	mov r8,1024             	R8=0x00000400
-0x000000DC:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x000000E0:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002B
-0x000000E4:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002B
-0x000000E8:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
-0x000000EC:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
-0x000000F0:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
-0x000000F4:	ret                     	PC=MEM[0x00007FA8]=0x000002D4
-0x000002D4:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
-0x000002D8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
-0x000002DC:	cmpi r1,0               	SR=0x00000000
-0x000002E0:	ble 16                  	PC=0x000002E4
-0x000002E4:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000004
-0x000002E8:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
-0x000002EC:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000004,SR=0x00000000
-0x000002F0:	mov r2,10               	R2=0x0000000A
-0x000002F4:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000004,R1=R1/R2=0x00000000,SR=0x00000041
-0x000002F8:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000004
-0x000002FC:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000004
-0x00000300:	addi r1,r1,48           	R1=R1+0x00000030=0x00000034,SR=0x00000000
-0x00000304:	push r1                 	MEM[0x00007FAC]{0x00000034}={R1}
-0x00000308:	call -147               	PC=0x000000C0,MEM[0x00007FA8]=0x0000030C
-0x000000C0:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
-0x000000D4:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
-0x000000D8:	mov r8,1024             	R8=0x00000400
-0x000000DC:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x000000E0:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000034
-0x000000E4:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000034
-0x000000E8:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
-0x000000EC:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
-0x000000F0:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
-0x000000F4:	ret                     	PC=MEM[0x00007FA8]=0x0000030C
-0x0000030C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
-0x00000310:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
-0x00000314:	mov r2,10               	R2=0x0000000A
-0x00000318:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
-0x0000031C:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
-0x00000320:	bun -19                 	PC=0x000002D8
-0x000002D8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
-0x000002DC:	cmpi r1,0               	SR=0x00000040
-0x000002E0:	ble 16                  	PC=0x00000324
-0x00000324:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
-0x00000328:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
-0x0000032C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
-0x00000330:	ret                     	PC=MEM[0x00007FC4]=0x000003EC
-0x000003EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
-0x000003F0:	bun -15                 	PC=0x000003B8
-0x000003B8:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000003
-0x000003BC:	add r2,r1,r0            	R2=R1+R0=0x00000003,SR=0x00000000
-0x000003C0:	addi r1,r1,1            	R1=R1+0x00000001=0x00000004,SR=0x00000000
-0x000003C4:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000004
-0x000003C8:	bun -10                 	PC=0x000003A4
-0x000003A4:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000004
-0x000003A8:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
-0x000003AC:	cmp r1,r2               	SR=0x00000011
-0x000003B0:	bge 16                  	PC=0x000003B4
-0x000003B4:	bun 5                   	PC=0x000003CC
-0x000003CC:	addi r1,r7,-4           	R1=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
-0x000003D0:	l32 r2,[r7-6]           	R2=MEM[0x00007FD0]=0x00000004
-0x000003D4:	add r1,r1,r2            	R1=R1+R2=0x00001FFA,SR=0x00000000
-0x000003D8:	l32 r1,[r1+0]           	R1=MEM[0x00000014]=0x00000005
-0x000003DC:	s32 [r7-7],r1           	MEM[0x00007FCC]=R1=0x00000005
-0x000003E0:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0x00000005
-0x000003E4:	push r1                 	MEM[0x00007FC8]{0x00000005}={R1}
-0x000003E8:	call -110               	PC=0x00000234,MEM[0x00007FC4]=0x000003EC
-0x00000234:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
-0x00000238:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
-0x0000023C:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
-0x00000240:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
-0x00000244:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
-0x00000248:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
-0x0000024C:	mov r1,1                	R1=0x00000001
-0x00000250:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
-0x00000254:	mov r1,0                	R1=0x00000000
-0x00000258:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
-0x0000025C:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000005
-0x00000260:	cmpi r1,0               	SR=0x00000000
-0x00000264:	bge 6                   	PC=0x00000280
-0x00000280:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000005
-0x00000284:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
-0x00000288:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000005,SR=0x00000000
-0x0000028C:	cmpi r1,11              	SR=0x00000011
-0x00000290:	ble 5                   	PC=0x000002A8
-0x000002A8:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000000
-0x000002AC:	cmpi r1,0               	SR=0x00000040
-0x000002B0:	ble 5                   	PC=0x000002C8
-0x000002C8:	mov r1,43               	R1=0x0000002B
-0x000002CC:	push r1                 	MEM[0x00007FAC]{0x0000002B}={R1}
-0x000002D0:	call -133               	PC=0x000000C0,MEM[0x00007FA8]=0x000002D4
-0x000000C0:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
-0x000000D4:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
-0x000000D8:	mov r8,1024             	R8=0x00000400
-0x000000DC:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x000000E0:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002B
-0x000000E4:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002B
-0x000000E8:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
-0x000000EC:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
-0x000000F0:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
-0x000000F4:	ret                     	PC=MEM[0x00007FA8]=0x000002D4
-0x000002D4:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
-0x000002D8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
-0x000002DC:	cmpi r1,0               	SR=0x00000000
-0x000002E0:	ble 16                  	PC=0x000002E4
-0x000002E4:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000005
-0x000002E8:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
-0x000002EC:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000005,SR=0x00000000
-0x000002F0:	mov r2,10               	R2=0x0000000A
-0x000002F4:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000005,R1=R1/R2=0x00000000,SR=0x00000041
-0x000002F8:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000005
-0x000002FC:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000005
-0x00000300:	addi r1,r1,48           	R1=R1+0x00000030=0x00000035,SR=0x00000000
-0x00000304:	push r1                 	MEM[0x00007FAC]{0x00000035}={R1}
-0x00000308:	call -147               	PC=0x000000C0,MEM[0x00007FA8]=0x0000030C
-0x000000C0:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
-0x000000C4:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
-0x000000C8:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
-0x000000CC:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
-0x000000D0:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
-0x000000D4:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
-0x000000D8:	mov r8,1024             	R8=0x00000400
-0x000000DC:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
-0x000000E0:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000035
-0x000000E4:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000035
-0x000000E8:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
-0x000000EC:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
-0x000000F0:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
-0x000000F4:	ret                     	PC=MEM[0x00007FA8]=0x0000030C
-0x0000030C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
-0x00000310:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
-0x00000314:	mov r2,10               	R2=0x0000000A
-0x00000318:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
-0x0000031C:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
-0x00000320:	bun -19                 	PC=0x000002D8
-0x000002D8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
-0x000002DC:	cmpi r1,0               	SR=0x00000040
-0x000002E0:	ble 16                  	PC=0x00000324
-0x00000324:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
-0x00000328:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
-0x0000032C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
-0x00000330:	ret                     	PC=MEM[0x00007FC4]=0x000003EC
-0x000003EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
-0x000003F0:	bun -15                 	PC=0x000003B8
-0x000003B8:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000004
-0x000003BC:	add r2,r1,r0            	R2=R1+R0=0x00000004,SR=0x00000000
-0x000003C0:	addi r1,r1,1            	R1=R1+0x00000001=0x00000005,SR=0x00000000
-0x000003C4:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000005
-0x000003C8:	bun -10                 	PC=0x000003A4
-0x000003A4:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000005
-0x000003A8:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
-0x000003AC:	cmp r1,r2               	SR=0x00000040
-0x000003B0:	bge 16                  	PC=0x000003F4
-0x000003F4:	l32 r2,[r7-6]           	R2=MEM[0x00007FD0]=0x00000005
-0x000003F8:	add sp,r6,r0            	SP=R6+R0=0x00007FE8,SR=0x00000000
-0x000003FC:	pop r7                  	{R7}=MEM[0x00007FEC]{0x00001FFD}
-0x00000400:	pop r6                  	{R6}=MEM[0x00007FF0]{0x00007FF4}
-0x00000404:	ret                     	PC=MEM[0x00007FF4]=0x00000028
+0x00000050:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB0,SR=0x00000000
+0x00000054:	add sp,r6,r0            	SP=R6+R0=0x00007FB0,SR=0x00000000
+0x00000058:	pop r7                  	{R7}=MEM[0x00007FB4]{0x00001FFA}
+0x0000005C:	pop r6                  	{R6}=MEM[0x00007FB8]{0x00007FE8}
+0x00000060:	ret                     	PC=MEM[0x00007FBC]=0x000006F0
+0x000006F0:	addi sp,sp,12           	SP=SP+0x0000000C=0x00007FC8,SR=0x00000000
+0x000006F4:	movs r1,-1              	R1=0xFFFFFFFF
+0x000006F8:	s32 [r7-4],r1           	MEM[0x00007FD8]=R1=0xFFFFFFFF
+0x000006FC:	movs r1,-564            	R1=0xFFFFFDCC
+0x00000700:	s32 [r7-3],r1           	MEM[0x00007FDC]=R1=0xFFFFFDCC
+0x00000704:	movs r1,420             	R1=0x000001A4
+0x00000708:	s32 [r7-2],r1           	MEM[0x00007FE0]=R1=0x000001A4
+0x0000070C:	movs r1,69              	R1=0x00000045
+0x00000710:	s32 [r7-1],r1           	MEM[0x00007FE4]=R1=0x00000045
+0x00000714:	movs r1,1200            	R1=0x000004B0
+0x00000718:	s32 [r7+0],r1           	MEM[0x00007FE8]=R1=0x000004B0
+0x0000071C:	movs r1,5               	R1=0x00000005
+0x00000720:	s32 [r7-5],r1           	MEM[0x00007FD4]=R1=0x00000005
+0x00000724:	l32 r1,[r7-2]           	R1=MEM[0x00007FE0]=0x000001A4
+0x00000728:	push r1                 	MEM[0x00007FC8]{0x000001A4}={R1}
+0x0000072C:	call -131               	PC=0x00000524,MEM[0x00007FC4]=0x00000730
+0x00000524:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000528:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x0000052C:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x00000530:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000534:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000538:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
+0x0000053C:	movs r1,1               	R1=0x00000001
+0x00000540:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x00000544:	movs r1,0               	R1=0x00000000
+0x00000548:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
+0x0000054C:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x000001A4
+0x00000550:	cmpi r1,0               	SR=0x00000000
+0x00000554:	bge 6                   	PC=0x00000570
+0x00000570:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x000001A4
+0x00000574:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x00000578:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x000001A4,SR=0x00000000
+0x0000057C:	cmpi r1,11              	SR=0x00000000
+0x00000580:	ble 5                   	PC=0x00000584
+0x00000584:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x00000588:	movs r2,10              	R2=0x0000000A
+0x0000058C:	muls r8,r1,r1,r2        	R8:R1=R1*R2=0x000000000000000A,SR=0x00000000
+0x00000590:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x0000000A
+0x00000594:	bun -10                 	PC=0x00000570
+0x00000570:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x000001A4
+0x00000574:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x0000000A
+0x00000578:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x0000002A,SR=0x00000000
+0x0000057C:	cmpi r1,11              	SR=0x00000000
+0x00000580:	ble 5                   	PC=0x00000584
+0x00000584:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x0000000A
+0x00000588:	movs r2,10              	R2=0x0000000A
+0x0000058C:	muls r8,r1,r1,r2        	R8:R1=R1*R2=0x0000000000000064,SR=0x00000000
+0x00000590:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000064
+0x00000594:	bun -10                 	PC=0x00000570
+0x00000570:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x000001A4
+0x00000574:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000064
+0x00000578:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000014,R1=R1/R2=0x00000004,SR=0x00000001
+0x0000057C:	cmpi r1,11              	SR=0x00000011
+0x00000580:	ble 5                   	PC=0x00000598
+0x00000598:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000000
+0x0000059C:	cmpi r1,0               	SR=0x00000040
+0x000005A0:	ble 5                   	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000064
+0x000005BC:	cmpi r1,0               	SR=0x00000000
+0x000005C0:	ble 16                  	PC=0x000005C4
+0x000005C4:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x000001A4
+0x000005C8:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000064
+0x000005CC:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000014,R1=R1/R2=0x00000004,SR=0x00000001
+0x000005D0:	movs r2,10              	R2=0x0000000A
+0x000005D4:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000004,R1=R1/R2=0x00000000,SR=0x00000041
+0x000005D8:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000004
+0x000005DC:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000004
+0x000005E0:	addi r1,r1,48           	R1=R1+0x00000030=0x00000034,SR=0x00000000
+0x000005E4:	push r1                 	MEM[0x00007FAC]{0x00000034}={R1}
+0x000005E8:	call -315               	PC=0x00000100,MEM[0x00007FA8]=0x000005EC
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000034
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000034
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005EC
+0x000005EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000064
+0x000005F4:	movs r2,10              	R2=0x0000000A
+0x000005F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x0000000A,SR=0x00000000
+0x000005FC:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x0000000A
+0x00000600:	bun -19                 	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x0000000A
+0x000005BC:	cmpi r1,0               	SR=0x00000000
+0x000005C0:	ble 16                  	PC=0x000005C4
+0x000005C4:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x000001A4
+0x000005C8:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x0000000A
+0x000005CC:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x0000002A,SR=0x00000000
+0x000005D0:	movs r2,10              	R2=0x0000000A
+0x000005D4:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000002,R1=R1/R2=0x00000004,SR=0x00000001
+0x000005D8:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000002
+0x000005DC:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000002
+0x000005E0:	addi r1,r1,48           	R1=R1+0x00000030=0x00000032,SR=0x00000000
+0x000005E4:	push r1                 	MEM[0x00007FAC]{0x00000032}={R1}
+0x000005E8:	call -315               	PC=0x00000100,MEM[0x00007FA8]=0x000005EC
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000032
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000032
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005EC
+0x000005EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x0000000A
+0x000005F4:	movs r2,10              	R2=0x0000000A
+0x000005F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x000005FC:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x00000600:	bun -19                 	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x000005BC:	cmpi r1,0               	SR=0x00000000
+0x000005C0:	ble 16                  	PC=0x000005C4
+0x000005C4:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x000001A4
+0x000005C8:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x000005CC:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x000001A4,SR=0x00000000
+0x000005D0:	movs r2,10              	R2=0x0000000A
+0x000005D4:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x0000002A,SR=0x00000000
+0x000005D8:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000000
+0x000005DC:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000000
+0x000005E0:	addi r1,r1,48           	R1=R1+0x00000030=0x00000030,SR=0x00000000
+0x000005E4:	push r1                 	MEM[0x00007FAC]{0x00000030}={R1}
+0x000005E8:	call -315               	PC=0x00000100,MEM[0x00007FA8]=0x000005EC
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000030
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000030
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005EC
+0x000005EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x000005F4:	movs r2,10              	R2=0x0000000A
+0x000005F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x000005FC:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
+0x00000600:	bun -19                 	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
+0x000005BC:	cmpi r1,0               	SR=0x00000040
+0x000005C0:	ble 16                  	PC=0x00000604
+0x00000604:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x00000608:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x0000060C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000610:	ret                     	PC=MEM[0x00007FC4]=0x00000730
+0x00000730:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000734:	movs r1,0               	R1=0x00000000
+0x00000738:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000000
+0x0000073C:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000000
+0x00000740:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x00000744:	cmp r1,r2               	SR=0x00000011
+0x00000748:	bge 22                  	PC=0x0000074C
+0x0000074C:	bun 5                   	PC=0x00000764
+0x00000764:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000000
+0x00000768:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000000,SR=0x00000051
+0x0000076C:	addi r2,r7,-4           	R2=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x00000770:	add r2,r2,r1            	R2=R2+R1=0x00001FF6,SR=0x00000000
+0x00000774:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x00000778:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x0000077C:	s32 [r7-7],r2           	MEM[0x00007FCC]=R2=0xFFFFFFFF
+0x00000780:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0xFFFFFFFF
+0x00000784:	push r1                 	MEM[0x00007FC8]{0xFFFFFFFF}={R1}
+0x00000788:	call -154               	PC=0x00000524,MEM[0x00007FC4]=0x0000078C
+0x00000524:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000528:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x0000052C:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x00000530:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000534:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000538:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
+0x0000053C:	movs r1,1               	R1=0x00000001
+0x00000540:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x00000544:	movs r1,0               	R1=0x00000000
+0x00000548:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
+0x0000054C:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0xFFFFFFFF
+0x00000550:	cmpi r1,0               	SR=0x00000011
+0x00000554:	bge 6                   	PC=0x00000558
+0x00000558:	movs r1,1               	R1=0x00000001
+0x0000055C:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000001
+0x00000560:	movs r1,0               	R1=0x00000000
+0x00000564:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0xFFFFFFFF
+0x00000568:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000001
+0x0000056C:	s32 [r7+4],r1           	MEM[0x00007FC8]=R1=0x00000001
+0x00000570:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x00000574:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x00000578:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x0000057C:	cmpi r1,11              	SR=0x00000011
+0x00000580:	ble 5                   	PC=0x00000598
+0x00000598:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000001
+0x0000059C:	cmpi r1,0               	SR=0x00000000
+0x000005A0:	ble 5                   	PC=0x000005A4
+0x000005A4:	movs r1,45              	R1=0x0000002D
+0x000005A8:	push r1                 	MEM[0x00007FAC]{0x0000002D}={R1}
+0x000005AC:	call -300               	PC=0x00000100,MEM[0x00007FA8]=0x000005B0
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002D
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002D
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005B0
+0x000005B0:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005B4:	bun 0                   	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x000005BC:	cmpi r1,0               	SR=0x00000000
+0x000005C0:	ble 16                  	PC=0x000005C4
+0x000005C4:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x000005C8:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x000005CC:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x000005D0:	movs r2,10              	R2=0x0000000A
+0x000005D4:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x000005D8:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000001
+0x000005DC:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000001
+0x000005E0:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
+0x000005E4:	push r1                 	MEM[0x00007FAC]{0x00000031}={R1}
+0x000005E8:	call -315               	PC=0x00000100,MEM[0x00007FA8]=0x000005EC
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000031
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005EC
+0x000005EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x000005F4:	movs r2,10              	R2=0x0000000A
+0x000005F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x000005FC:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
+0x00000600:	bun -19                 	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
+0x000005BC:	cmpi r1,0               	SR=0x00000040
+0x000005C0:	ble 16                  	PC=0x00000604
+0x00000604:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x00000608:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x0000060C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000610:	ret                     	PC=MEM[0x00007FC4]=0x0000078C
+0x0000078C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000790:	movs r1,32              	R1=0x00000020
+0x00000794:	push r1                 	MEM[0x00007FC8]{0x00000020}={R1}
+0x00000798:	call -423               	PC=0x00000100,MEM[0x00007FC4]=0x0000079C
+0x00000100:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0x00000020
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FC4]=0x0000079C
+0x0000079C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x000007A0:	bun -21                 	PC=0x00000750
+0x00000750:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000000
+0x00000754:	add r2,r1,r0            	R2=R1+R0=0x00000000,SR=0x00000040
+0x00000758:	addi r1,r1,1            	R1=R1+0x00000001=0x00000001,SR=0x00000000
+0x0000075C:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000001
+0x00000760:	bun -10                 	PC=0x0000073C
+0x0000073C:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000001
+0x00000740:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x00000744:	cmp r1,r2               	SR=0x00000011
+0x00000748:	bge 22                  	PC=0x0000074C
+0x0000074C:	bun 5                   	PC=0x00000764
+0x00000764:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000001
+0x00000768:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000004,SR=0x00000011
+0x0000076C:	addi r2,r7,-4           	R2=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x00000770:	add r2,r2,r1            	R2=R2+R1=0x00001FFA,SR=0x00000000
+0x00000774:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x00000778:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x0000077C:	s32 [r7-7],r2           	MEM[0x00007FCC]=R2=0xFFFFFFFF
+0x00000780:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0xFFFFFFFF
+0x00000784:	push r1                 	MEM[0x00007FC8]{0xFFFFFFFF}={R1}
+0x00000788:	call -154               	PC=0x00000524,MEM[0x00007FC4]=0x0000078C
+0x00000524:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000528:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x0000052C:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x00000530:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000534:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000538:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
+0x0000053C:	movs r1,1               	R1=0x00000001
+0x00000540:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x00000544:	movs r1,0               	R1=0x00000000
+0x00000548:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
+0x0000054C:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0xFFFFFFFF
+0x00000550:	cmpi r1,0               	SR=0x00000011
+0x00000554:	bge 6                   	PC=0x00000558
+0x00000558:	movs r1,1               	R1=0x00000001
+0x0000055C:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000001
+0x00000560:	movs r1,0               	R1=0x00000000
+0x00000564:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0xFFFFFFFF
+0x00000568:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000001
+0x0000056C:	s32 [r7+4],r1           	MEM[0x00007FC8]=R1=0x00000001
+0x00000570:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x00000574:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x00000578:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x0000057C:	cmpi r1,11              	SR=0x00000011
+0x00000580:	ble 5                   	PC=0x00000598
+0x00000598:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000001
+0x0000059C:	cmpi r1,0               	SR=0x00000000
+0x000005A0:	ble 5                   	PC=0x000005A4
+0x000005A4:	movs r1,45              	R1=0x0000002D
+0x000005A8:	push r1                 	MEM[0x00007FAC]{0x0000002D}={R1}
+0x000005AC:	call -300               	PC=0x00000100,MEM[0x00007FA8]=0x000005B0
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002D
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002D
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005B0
+0x000005B0:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005B4:	bun 0                   	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x000005BC:	cmpi r1,0               	SR=0x00000000
+0x000005C0:	ble 16                  	PC=0x000005C4
+0x000005C4:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x000005C8:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x000005CC:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x000005D0:	movs r2,10              	R2=0x0000000A
+0x000005D4:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x000005D8:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000001
+0x000005DC:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000001
+0x000005E0:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
+0x000005E4:	push r1                 	MEM[0x00007FAC]{0x00000031}={R1}
+0x000005E8:	call -315               	PC=0x00000100,MEM[0x00007FA8]=0x000005EC
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000031
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005EC
+0x000005EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x000005F4:	movs r2,10              	R2=0x0000000A
+0x000005F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x000005FC:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
+0x00000600:	bun -19                 	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
+0x000005BC:	cmpi r1,0               	SR=0x00000040
+0x000005C0:	ble 16                  	PC=0x00000604
+0x00000604:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x00000608:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x0000060C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000610:	ret                     	PC=MEM[0x00007FC4]=0x0000078C
+0x0000078C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000790:	movs r1,32              	R1=0x00000020
+0x00000794:	push r1                 	MEM[0x00007FC8]{0x00000020}={R1}
+0x00000798:	call -423               	PC=0x00000100,MEM[0x00007FC4]=0x0000079C
+0x00000100:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0x00000020
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FC4]=0x0000079C
+0x0000079C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x000007A0:	bun -21                 	PC=0x00000750
+0x00000750:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000001
+0x00000754:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x00000758:	addi r1,r1,1            	R1=R1+0x00000001=0x00000002,SR=0x00000000
+0x0000075C:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000002
+0x00000760:	bun -10                 	PC=0x0000073C
+0x0000073C:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000002
+0x00000740:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x00000744:	cmp r1,r2               	SR=0x00000011
+0x00000748:	bge 22                  	PC=0x0000074C
+0x0000074C:	bun 5                   	PC=0x00000764
+0x00000764:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000002
+0x00000768:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000008,SR=0x00000011
+0x0000076C:	addi r2,r7,-4           	R2=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x00000770:	add r2,r2,r1            	R2=R2+R1=0x00001FFE,SR=0x00000000
+0x00000774:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x00000778:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x0000077C:	s32 [r7-7],r2           	MEM[0x00007FCC]=R2=0xFFFFFFFF
+0x00000780:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0xFFFFFFFF
+0x00000784:	push r1                 	MEM[0x00007FC8]{0xFFFFFFFF}={R1}
+0x00000788:	call -154               	PC=0x00000524,MEM[0x00007FC4]=0x0000078C
+0x00000524:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000528:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x0000052C:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x00000530:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000534:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000538:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
+0x0000053C:	movs r1,1               	R1=0x00000001
+0x00000540:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x00000544:	movs r1,0               	R1=0x00000000
+0x00000548:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
+0x0000054C:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0xFFFFFFFF
+0x00000550:	cmpi r1,0               	SR=0x00000011
+0x00000554:	bge 6                   	PC=0x00000558
+0x00000558:	movs r1,1               	R1=0x00000001
+0x0000055C:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000001
+0x00000560:	movs r1,0               	R1=0x00000000
+0x00000564:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0xFFFFFFFF
+0x00000568:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000001
+0x0000056C:	s32 [r7+4],r1           	MEM[0x00007FC8]=R1=0x00000001
+0x00000570:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x00000574:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x00000578:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x0000057C:	cmpi r1,11              	SR=0x00000011
+0x00000580:	ble 5                   	PC=0x00000598
+0x00000598:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000001
+0x0000059C:	cmpi r1,0               	SR=0x00000000
+0x000005A0:	ble 5                   	PC=0x000005A4
+0x000005A4:	movs r1,45              	R1=0x0000002D
+0x000005A8:	push r1                 	MEM[0x00007FAC]{0x0000002D}={R1}
+0x000005AC:	call -300               	PC=0x00000100,MEM[0x00007FA8]=0x000005B0
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002D
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002D
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005B0
+0x000005B0:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005B4:	bun 0                   	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x000005BC:	cmpi r1,0               	SR=0x00000000
+0x000005C0:	ble 16                  	PC=0x000005C4
+0x000005C4:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x000005C8:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x000005CC:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x000005D0:	movs r2,10              	R2=0x0000000A
+0x000005D4:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x000005D8:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000001
+0x000005DC:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000001
+0x000005E0:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
+0x000005E4:	push r1                 	MEM[0x00007FAC]{0x00000031}={R1}
+0x000005E8:	call -315               	PC=0x00000100,MEM[0x00007FA8]=0x000005EC
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000031
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005EC
+0x000005EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x000005F4:	movs r2,10              	R2=0x0000000A
+0x000005F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x000005FC:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
+0x00000600:	bun -19                 	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
+0x000005BC:	cmpi r1,0               	SR=0x00000040
+0x000005C0:	ble 16                  	PC=0x00000604
+0x00000604:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x00000608:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x0000060C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000610:	ret                     	PC=MEM[0x00007FC4]=0x0000078C
+0x0000078C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000790:	movs r1,32              	R1=0x00000020
+0x00000794:	push r1                 	MEM[0x00007FC8]{0x00000020}={R1}
+0x00000798:	call -423               	PC=0x00000100,MEM[0x00007FC4]=0x0000079C
+0x00000100:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0x00000020
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FC4]=0x0000079C
+0x0000079C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x000007A0:	bun -21                 	PC=0x00000750
+0x00000750:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000002
+0x00000754:	add r2,r1,r0            	R2=R1+R0=0x00000002,SR=0x00000000
+0x00000758:	addi r1,r1,1            	R1=R1+0x00000001=0x00000003,SR=0x00000000
+0x0000075C:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000003
+0x00000760:	bun -10                 	PC=0x0000073C
+0x0000073C:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000003
+0x00000740:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x00000744:	cmp r1,r2               	SR=0x00000011
+0x00000748:	bge 22                  	PC=0x0000074C
+0x0000074C:	bun 5                   	PC=0x00000764
+0x00000764:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000003
+0x00000768:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x000000000000000C,SR=0x00000011
+0x0000076C:	addi r2,r7,-4           	R2=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x00000770:	add r2,r2,r1            	R2=R2+R1=0x00002002,SR=0x00000000
+0x00000774:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x00000778:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x0000077C:	s32 [r7-7],r2           	MEM[0x00007FCC]=R2=0xFFFFFFFF
+0x00000780:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0xFFFFFFFF
+0x00000784:	push r1                 	MEM[0x00007FC8]{0xFFFFFFFF}={R1}
+0x00000788:	call -154               	PC=0x00000524,MEM[0x00007FC4]=0x0000078C
+0x00000524:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000528:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x0000052C:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x00000530:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000534:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000538:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
+0x0000053C:	movs r1,1               	R1=0x00000001
+0x00000540:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x00000544:	movs r1,0               	R1=0x00000000
+0x00000548:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
+0x0000054C:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0xFFFFFFFF
+0x00000550:	cmpi r1,0               	SR=0x00000011
+0x00000554:	bge 6                   	PC=0x00000558
+0x00000558:	movs r1,1               	R1=0x00000001
+0x0000055C:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000001
+0x00000560:	movs r1,0               	R1=0x00000000
+0x00000564:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0xFFFFFFFF
+0x00000568:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000001
+0x0000056C:	s32 [r7+4],r1           	MEM[0x00007FC8]=R1=0x00000001
+0x00000570:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x00000574:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x00000578:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x0000057C:	cmpi r1,11              	SR=0x00000011
+0x00000580:	ble 5                   	PC=0x00000598
+0x00000598:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000001
+0x0000059C:	cmpi r1,0               	SR=0x00000000
+0x000005A0:	ble 5                   	PC=0x000005A4
+0x000005A4:	movs r1,45              	R1=0x0000002D
+0x000005A8:	push r1                 	MEM[0x00007FAC]{0x0000002D}={R1}
+0x000005AC:	call -300               	PC=0x00000100,MEM[0x00007FA8]=0x000005B0
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002D
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002D
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005B0
+0x000005B0:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005B4:	bun 0                   	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x000005BC:	cmpi r1,0               	SR=0x00000000
+0x000005C0:	ble 16                  	PC=0x000005C4
+0x000005C4:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x000005C8:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x000005CC:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x000005D0:	movs r2,10              	R2=0x0000000A
+0x000005D4:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x000005D8:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000001
+0x000005DC:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000001
+0x000005E0:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
+0x000005E4:	push r1                 	MEM[0x00007FAC]{0x00000031}={R1}
+0x000005E8:	call -315               	PC=0x00000100,MEM[0x00007FA8]=0x000005EC
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000031
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005EC
+0x000005EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x000005F4:	movs r2,10              	R2=0x0000000A
+0x000005F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x000005FC:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
+0x00000600:	bun -19                 	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
+0x000005BC:	cmpi r1,0               	SR=0x00000040
+0x000005C0:	ble 16                  	PC=0x00000604
+0x00000604:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x00000608:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x0000060C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000610:	ret                     	PC=MEM[0x00007FC4]=0x0000078C
+0x0000078C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000790:	movs r1,32              	R1=0x00000020
+0x00000794:	push r1                 	MEM[0x00007FC8]{0x00000020}={R1}
+0x00000798:	call -423               	PC=0x00000100,MEM[0x00007FC4]=0x0000079C
+0x00000100:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0x00000020
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FC4]=0x0000079C
+0x0000079C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x000007A0:	bun -21                 	PC=0x00000750
+0x00000750:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000003
+0x00000754:	add r2,r1,r0            	R2=R1+R0=0x00000003,SR=0x00000000
+0x00000758:	addi r1,r1,1            	R1=R1+0x00000001=0x00000004,SR=0x00000000
+0x0000075C:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000004
+0x00000760:	bun -10                 	PC=0x0000073C
+0x0000073C:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000004
+0x00000740:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x00000744:	cmp r1,r2               	SR=0x00000011
+0x00000748:	bge 22                  	PC=0x0000074C
+0x0000074C:	bun 5                   	PC=0x00000764
+0x00000764:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000004
+0x00000768:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000010,SR=0x00000011
+0x0000076C:	addi r2,r7,-4           	R2=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x00000770:	add r2,r2,r1            	R2=R2+R1=0x00002006,SR=0x00000000
+0x00000774:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x00000778:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x0000077C:	s32 [r7-7],r2           	MEM[0x00007FCC]=R2=0xFFFFFFFF
+0x00000780:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0xFFFFFFFF
+0x00000784:	push r1                 	MEM[0x00007FC8]{0xFFFFFFFF}={R1}
+0x00000788:	call -154               	PC=0x00000524,MEM[0x00007FC4]=0x0000078C
+0x00000524:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000528:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x0000052C:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x00000530:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000534:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000538:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
+0x0000053C:	movs r1,1               	R1=0x00000001
+0x00000540:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x00000544:	movs r1,0               	R1=0x00000000
+0x00000548:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
+0x0000054C:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0xFFFFFFFF
+0x00000550:	cmpi r1,0               	SR=0x00000011
+0x00000554:	bge 6                   	PC=0x00000558
+0x00000558:	movs r1,1               	R1=0x00000001
+0x0000055C:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000001
+0x00000560:	movs r1,0               	R1=0x00000000
+0x00000564:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0xFFFFFFFF
+0x00000568:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000001
+0x0000056C:	s32 [r7+4],r1           	MEM[0x00007FC8]=R1=0x00000001
+0x00000570:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x00000574:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x00000578:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x0000057C:	cmpi r1,11              	SR=0x00000011
+0x00000580:	ble 5                   	PC=0x00000598
+0x00000598:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000001
+0x0000059C:	cmpi r1,0               	SR=0x00000000
+0x000005A0:	ble 5                   	PC=0x000005A4
+0x000005A4:	movs r1,45              	R1=0x0000002D
+0x000005A8:	push r1                 	MEM[0x00007FAC]{0x0000002D}={R1}
+0x000005AC:	call -300               	PC=0x00000100,MEM[0x00007FA8]=0x000005B0
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002D
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002D
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005B0
+0x000005B0:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005B4:	bun 0                   	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x000005BC:	cmpi r1,0               	SR=0x00000000
+0x000005C0:	ble 16                  	PC=0x000005C4
+0x000005C4:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x000005C8:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x000005CC:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x000005D0:	movs r2,10              	R2=0x0000000A
+0x000005D4:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x000005D8:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000001
+0x000005DC:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000001
+0x000005E0:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
+0x000005E4:	push r1                 	MEM[0x00007FAC]{0x00000031}={R1}
+0x000005E8:	call -315               	PC=0x00000100,MEM[0x00007FA8]=0x000005EC
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000031
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005EC
+0x000005EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x000005F4:	movs r2,10              	R2=0x0000000A
+0x000005F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x000005FC:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
+0x00000600:	bun -19                 	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
+0x000005BC:	cmpi r1,0               	SR=0x00000040
+0x000005C0:	ble 16                  	PC=0x00000604
+0x00000604:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x00000608:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x0000060C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000610:	ret                     	PC=MEM[0x00007FC4]=0x0000078C
+0x0000078C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000790:	movs r1,32              	R1=0x00000020
+0x00000794:	push r1                 	MEM[0x00007FC8]{0x00000020}={R1}
+0x00000798:	call -423               	PC=0x00000100,MEM[0x00007FC4]=0x0000079C
+0x00000100:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0x00000020
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FC4]=0x0000079C
+0x0000079C:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x000007A0:	bun -21                 	PC=0x00000750
+0x00000750:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000004
+0x00000754:	add r2,r1,r0            	R2=R1+R0=0x00000004,SR=0x00000000
+0x00000758:	addi r1,r1,1            	R1=R1+0x00000001=0x00000005,SR=0x00000000
+0x0000075C:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000005
+0x00000760:	bun -10                 	PC=0x0000073C
+0x0000073C:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000005
+0x00000740:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x00000744:	cmp r1,r2               	SR=0x00000040
+0x00000748:	bge 22                  	PC=0x000007A4
+0x000007A4:	movs r1,10              	R1=0x0000000A
+0x000007A8:	push r1                 	MEM[0x00007FC8]{0x0000000A}={R1}
+0x000007AC:	call -428               	PC=0x00000100,MEM[0x00007FC4]=0x000007B0
+0x00000100:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0x0000000A
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000000A
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FC4]=0x000007B0
+0x000007B0:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x000007B4:	l32 r1,[r7-5]           	R1=MEM[0x00007FD4]=0x00000005
+0x000007B8:	push r1                 	MEM[0x00007FC8]{0x00000005}={R1}
+0x000007BC:	addi r1,r7,-4           	R1=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x000007C0:	push r1                 	MEM[0x00007FC4]{0x00001FF6}={R1}
+0x000007C4:	call -260               	PC=0x000003B8,MEM[0x00007FC0]=0x000007C8
+0x000003B8:	push r6                 	MEM[0x00007FBC]{0x00007FE8}={R6}
+0x000003BC:	push r7                 	MEM[0x00007FB8]{0x00001FFA}={R7}
+0x000003C0:	add r6,sp,r0            	R6=SP+R0=0x00007FB4,SR=0x00000000
+0x000003C4:	add r7,r6,r0            	R7=R6+R0=0x00007FB4,SR=0x00000000
+0x000003C8:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FED,SR=0x00000000
+0x000003CC:	subi sp,sp,16           	SP=SP-0x00000010=0x00007FA4,SR=0x00000000
+0x000003D0:	movs r1,0               	R1=0x00000000
+0x000003D4:	s32 [r7-2],r1           	MEM[0x00007FAC]=R1=0x00000000
+0x000003D8:	l32 r1,[r7+5]           	R1=MEM[0x00007FC8]=0x00000005
+0x000003DC:	subi r1,r1,1            	R1=R1-0x00000001=0x00000004,SR=0x00000000
+0x000003E0:	l32 r2,[r7-2]           	R2=MEM[0x00007FAC]=0x00000000
+0x000003E4:	cmp r2,r1               	SR=0x00000011
+0x000003E8:	bge 74                  	PC=0x000003EC
+0x000003EC:	bun 5                   	PC=0x00000404
+0x00000404:	movs r1,0               	R1=0x00000000
+0x00000408:	s32 [r7-1],r1           	MEM[0x00007FB0]=R1=0x00000000
+0x0000040C:	movs r1,0               	R1=0x00000000
+0x00000410:	s32 [r7-3],r1           	MEM[0x00007FA8]=R1=0x00000000
+0x00000414:	l32 r1,[r7+5]           	R1=MEM[0x00007FC8]=0x00000005
+0x00000418:	subi r1,r1,1            	R1=R1-0x00000001=0x00000004,SR=0x00000000
+0x0000041C:	l32 r2,[r7-2]           	R2=MEM[0x00007FAC]=0x00000000
+0x00000420:	sub r1,r1,r2            	R1=R1-R2=0x00000004,SR=0x00000000
+0x00000424:	l32 r2,[r7-3]           	R2=MEM[0x00007FA8]=0x00000000
+0x00000428:	cmp r2,r1               	SR=0x00000011
+0x0000042C:	bge 52                  	PC=0x00000430
+0x00000430:	bun 5                   	PC=0x00000448
+0x00000448:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000000
+0x0000044C:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000000,SR=0x00000051
+0x00000450:	l32 r2,[r7+4]           	R2=MEM[0x00007FC4]=0x00001FF6
+0x00000454:	add r2,r2,r1            	R2=R2+R1=0x00001FF6,SR=0x00000000
+0x00000458:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x0000045C:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000000
+0x00000460:	addi r1,r1,1            	R1=R1+0x00000001=0x00000001,SR=0x00000000
+0x00000464:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000004,SR=0x00000000
+0x00000468:	l32 r3,[r7+4]           	R3=MEM[0x00007FC4]=0x00001FF6
+0x0000046C:	add r3,r3,r1            	R3=R3+R1=0x00001FFA,SR=0x00000000
+0x00000470:	sub r3,r3,r1            	R3=R3-R1=0x00001FF6,SR=0x00000000
+0x00000474:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x00000478:	l32 r3,[r3+0]           	R3=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x0000047C:	cmp r2,r3               	SR=0x00000040
+0x00000480:	ble 30                  	PC=0x000004FC
+0x000004FC:	bun -51                 	PC=0x00000434
+0x00000434:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000000
+0x00000438:	add r2,r1,r0            	R2=R1+R0=0x00000000,SR=0x00000040
+0x0000043C:	addi r1,r1,1            	R1=R1+0x00000001=0x00000001,SR=0x00000000
+0x00000440:	s32 [r7-3],r1           	MEM[0x00007FA8]=R1=0x00000001
+0x00000444:	bun -13                 	PC=0x00000414
+0x00000414:	l32 r1,[r7+5]           	R1=MEM[0x00007FC8]=0x00000005
+0x00000418:	subi r1,r1,1            	R1=R1-0x00000001=0x00000004,SR=0x00000000
+0x0000041C:	l32 r2,[r7-2]           	R2=MEM[0x00007FAC]=0x00000000
+0x00000420:	sub r1,r1,r2            	R1=R1-R2=0x00000004,SR=0x00000000
+0x00000424:	l32 r2,[r7-3]           	R2=MEM[0x00007FA8]=0x00000001
+0x00000428:	cmp r2,r1               	SR=0x00000011
+0x0000042C:	bge 52                  	PC=0x00000430
+0x00000430:	bun 5                   	PC=0x00000448
+0x00000448:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000001
+0x0000044C:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000004,SR=0x00000011
+0x00000450:	l32 r2,[r7+4]           	R2=MEM[0x00007FC4]=0x00001FF6
+0x00000454:	add r2,r2,r1            	R2=R2+R1=0x00001FFA,SR=0x00000000
+0x00000458:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x0000045C:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000001
+0x00000460:	addi r1,r1,1            	R1=R1+0x00000001=0x00000002,SR=0x00000000
+0x00000464:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000008,SR=0x00000000
+0x00000468:	l32 r3,[r7+4]           	R3=MEM[0x00007FC4]=0x00001FF6
+0x0000046C:	add r3,r3,r1            	R3=R3+R1=0x00001FFE,SR=0x00000000
+0x00000470:	sub r3,r3,r1            	R3=R3-R1=0x00001FF6,SR=0x00000000
+0x00000474:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x00000478:	l32 r3,[r3+0]           	R3=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x0000047C:	cmp r2,r3               	SR=0x00000040
+0x00000480:	ble 30                  	PC=0x000004FC
+0x000004FC:	bun -51                 	PC=0x00000434
+0x00000434:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000001
+0x00000438:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x0000043C:	addi r1,r1,1            	R1=R1+0x00000001=0x00000002,SR=0x00000000
+0x00000440:	s32 [r7-3],r1           	MEM[0x00007FA8]=R1=0x00000002
+0x00000444:	bun -13                 	PC=0x00000414
+0x00000414:	l32 r1,[r7+5]           	R1=MEM[0x00007FC8]=0x00000005
+0x00000418:	subi r1,r1,1            	R1=R1-0x00000001=0x00000004,SR=0x00000000
+0x0000041C:	l32 r2,[r7-2]           	R2=MEM[0x00007FAC]=0x00000000
+0x00000420:	sub r1,r1,r2            	R1=R1-R2=0x00000004,SR=0x00000000
+0x00000424:	l32 r2,[r7-3]           	R2=MEM[0x00007FA8]=0x00000002
+0x00000428:	cmp r2,r1               	SR=0x00000011
+0x0000042C:	bge 52                  	PC=0x00000430
+0x00000430:	bun 5                   	PC=0x00000448
+0x00000448:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000002
+0x0000044C:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000008,SR=0x00000011
+0x00000450:	l32 r2,[r7+4]           	R2=MEM[0x00007FC4]=0x00001FF6
+0x00000454:	add r2,r2,r1            	R2=R2+R1=0x00001FFE,SR=0x00000000
+0x00000458:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x0000045C:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000002
+0x00000460:	addi r1,r1,1            	R1=R1+0x00000001=0x00000003,SR=0x00000000
+0x00000464:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x000000000000000C,SR=0x00000000
+0x00000468:	l32 r3,[r7+4]           	R3=MEM[0x00007FC4]=0x00001FF6
+0x0000046C:	add r3,r3,r1            	R3=R3+R1=0x00002002,SR=0x00000000
+0x00000470:	sub r3,r3,r1            	R3=R3-R1=0x00001FF6,SR=0x00000000
+0x00000474:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x00000478:	l32 r3,[r3+0]           	R3=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x0000047C:	cmp r2,r3               	SR=0x00000040
+0x00000480:	ble 30                  	PC=0x000004FC
+0x000004FC:	bun -51                 	PC=0x00000434
+0x00000434:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000002
+0x00000438:	add r2,r1,r0            	R2=R1+R0=0x00000002,SR=0x00000000
+0x0000043C:	addi r1,r1,1            	R1=R1+0x00000001=0x00000003,SR=0x00000000
+0x00000440:	s32 [r7-3],r1           	MEM[0x00007FA8]=R1=0x00000003
+0x00000444:	bun -13                 	PC=0x00000414
+0x00000414:	l32 r1,[r7+5]           	R1=MEM[0x00007FC8]=0x00000005
+0x00000418:	subi r1,r1,1            	R1=R1-0x00000001=0x00000004,SR=0x00000000
+0x0000041C:	l32 r2,[r7-2]           	R2=MEM[0x00007FAC]=0x00000000
+0x00000420:	sub r1,r1,r2            	R1=R1-R2=0x00000004,SR=0x00000000
+0x00000424:	l32 r2,[r7-3]           	R2=MEM[0x00007FA8]=0x00000003
+0x00000428:	cmp r2,r1               	SR=0x00000011
+0x0000042C:	bge 52                  	PC=0x00000430
+0x00000430:	bun 5                   	PC=0x00000448
+0x00000448:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000003
+0x0000044C:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x000000000000000C,SR=0x00000011
+0x00000450:	l32 r2,[r7+4]           	R2=MEM[0x00007FC4]=0x00001FF6
+0x00000454:	add r2,r2,r1            	R2=R2+R1=0x00002002,SR=0x00000000
+0x00000458:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x0000045C:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000003
+0x00000460:	addi r1,r1,1            	R1=R1+0x00000001=0x00000004,SR=0x00000000
+0x00000464:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000010,SR=0x00000000
+0x00000468:	l32 r3,[r7+4]           	R3=MEM[0x00007FC4]=0x00001FF6
+0x0000046C:	add r3,r3,r1            	R3=R3+R1=0x00002006,SR=0x00000000
+0x00000470:	sub r3,r3,r1            	R3=R3-R1=0x00001FF6,SR=0x00000000
+0x00000474:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x00000478:	l32 r3,[r3+0]           	R3=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x0000047C:	cmp r2,r3               	SR=0x00000040
+0x00000480:	ble 30                  	PC=0x000004FC
+0x000004FC:	bun -51                 	PC=0x00000434
+0x00000434:	l32 r1,[r7-3]           	R1=MEM[0x00007FA8]=0x00000003
+0x00000438:	add r2,r1,r0            	R2=R1+R0=0x00000003,SR=0x00000000
+0x0000043C:	addi r1,r1,1            	R1=R1+0x00000001=0x00000004,SR=0x00000000
+0x00000440:	s32 [r7-3],r1           	MEM[0x00007FA8]=R1=0x00000004
+0x00000444:	bun -13                 	PC=0x00000414
+0x00000414:	l32 r1,[r7+5]           	R1=MEM[0x00007FC8]=0x00000005
+0x00000418:	subi r1,r1,1            	R1=R1-0x00000001=0x00000004,SR=0x00000000
+0x0000041C:	l32 r2,[r7-2]           	R2=MEM[0x00007FAC]=0x00000000
+0x00000420:	sub r1,r1,r2            	R1=R1-R2=0x00000004,SR=0x00000000
+0x00000424:	l32 r2,[r7-3]           	R2=MEM[0x00007FA8]=0x00000004
+0x00000428:	cmp r2,r1               	SR=0x00000040
+0x0000042C:	bge 52                  	PC=0x00000500
+0x00000500:	l32 r1,[r7-1]           	R1=MEM[0x00007FB0]=0x00000000
+0x00000504:	cmpi r1,0               	SR=0x00000040
+0x00000508:	bne 1                   	PC=0x0000050C
+0x0000050C:	bun 1                   	PC=0x00000514
+0x00000514:	add sp,r6,r0            	SP=R6+R0=0x00007FB4,SR=0x00000000
+0x00000518:	pop r7                  	{R7}=MEM[0x00007FB8]{0x00001FFA}
+0x0000051C:	pop r6                  	{R6}=MEM[0x00007FBC]{0x00007FE8}
+0x00000520:	ret                     	PC=MEM[0x00007FC0]=0x000007C8
+0x000007C8:	addi sp,sp,8            	SP=SP+0x00000008=0x00007FC8,SR=0x00000000
+0x000007CC:	movs r1,0               	R1=0x00000000
+0x000007D0:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000000
+0x000007D4:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000000
+0x000007D8:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x000007DC:	cmp r1,r2               	SR=0x00000011
+0x000007E0:	bge 22                  	PC=0x000007E4
+0x000007E4:	bun 5                   	PC=0x000007FC
+0x000007FC:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000000
+0x00000800:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000000,SR=0x00000051
+0x00000804:	addi r2,r7,-4           	R2=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x00000808:	add r2,r2,r1            	R2=R2+R1=0x00001FF6,SR=0x00000000
+0x0000080C:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x00000810:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x00000814:	s32 [r7-7],r2           	MEM[0x00007FCC]=R2=0xFFFFFFFF
+0x00000818:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0xFFFFFFFF
+0x0000081C:	push r1                 	MEM[0x00007FC8]{0xFFFFFFFF}={R1}
+0x00000820:	call -192               	PC=0x00000524,MEM[0x00007FC4]=0x00000824
+0x00000524:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000528:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x0000052C:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x00000530:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000534:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000538:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
+0x0000053C:	movs r1,1               	R1=0x00000001
+0x00000540:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x00000544:	movs r1,0               	R1=0x00000000
+0x00000548:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
+0x0000054C:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0xFFFFFFFF
+0x00000550:	cmpi r1,0               	SR=0x00000011
+0x00000554:	bge 6                   	PC=0x00000558
+0x00000558:	movs r1,1               	R1=0x00000001
+0x0000055C:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000001
+0x00000560:	movs r1,0               	R1=0x00000000
+0x00000564:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0xFFFFFFFF
+0x00000568:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000001
+0x0000056C:	s32 [r7+4],r1           	MEM[0x00007FC8]=R1=0x00000001
+0x00000570:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x00000574:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x00000578:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x0000057C:	cmpi r1,11              	SR=0x00000011
+0x00000580:	ble 5                   	PC=0x00000598
+0x00000598:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000001
+0x0000059C:	cmpi r1,0               	SR=0x00000000
+0x000005A0:	ble 5                   	PC=0x000005A4
+0x000005A4:	movs r1,45              	R1=0x0000002D
+0x000005A8:	push r1                 	MEM[0x00007FAC]{0x0000002D}={R1}
+0x000005AC:	call -300               	PC=0x00000100,MEM[0x00007FA8]=0x000005B0
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002D
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002D
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005B0
+0x000005B0:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005B4:	bun 0                   	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x000005BC:	cmpi r1,0               	SR=0x00000000
+0x000005C0:	ble 16                  	PC=0x000005C4
+0x000005C4:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x000005C8:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x000005CC:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x000005D0:	movs r2,10              	R2=0x0000000A
+0x000005D4:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x000005D8:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000001
+0x000005DC:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000001
+0x000005E0:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
+0x000005E4:	push r1                 	MEM[0x00007FAC]{0x00000031}={R1}
+0x000005E8:	call -315               	PC=0x00000100,MEM[0x00007FA8]=0x000005EC
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000031
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005EC
+0x000005EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x000005F4:	movs r2,10              	R2=0x0000000A
+0x000005F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x000005FC:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
+0x00000600:	bun -19                 	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
+0x000005BC:	cmpi r1,0               	SR=0x00000040
+0x000005C0:	ble 16                  	PC=0x00000604
+0x00000604:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x00000608:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x0000060C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000610:	ret                     	PC=MEM[0x00007FC4]=0x00000824
+0x00000824:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000828:	movs r1,32              	R1=0x00000020
+0x0000082C:	push r1                 	MEM[0x00007FC8]{0x00000020}={R1}
+0x00000830:	call -461               	PC=0x00000100,MEM[0x00007FC4]=0x00000834
+0x00000100:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0x00000020
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FC4]=0x00000834
+0x00000834:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000838:	bun -21                 	PC=0x000007E8
+0x000007E8:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000000
+0x000007EC:	add r2,r1,r0            	R2=R1+R0=0x00000000,SR=0x00000040
+0x000007F0:	addi r1,r1,1            	R1=R1+0x00000001=0x00000001,SR=0x00000000
+0x000007F4:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000001
+0x000007F8:	bun -10                 	PC=0x000007D4
+0x000007D4:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000001
+0x000007D8:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x000007DC:	cmp r1,r2               	SR=0x00000011
+0x000007E0:	bge 22                  	PC=0x000007E4
+0x000007E4:	bun 5                   	PC=0x000007FC
+0x000007FC:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000001
+0x00000800:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000004,SR=0x00000011
+0x00000804:	addi r2,r7,-4           	R2=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x00000808:	add r2,r2,r1            	R2=R2+R1=0x00001FFA,SR=0x00000000
+0x0000080C:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x00000810:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x00000814:	s32 [r7-7],r2           	MEM[0x00007FCC]=R2=0xFFFFFFFF
+0x00000818:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0xFFFFFFFF
+0x0000081C:	push r1                 	MEM[0x00007FC8]{0xFFFFFFFF}={R1}
+0x00000820:	call -192               	PC=0x00000524,MEM[0x00007FC4]=0x00000824
+0x00000524:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000528:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x0000052C:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x00000530:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000534:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000538:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
+0x0000053C:	movs r1,1               	R1=0x00000001
+0x00000540:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x00000544:	movs r1,0               	R1=0x00000000
+0x00000548:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
+0x0000054C:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0xFFFFFFFF
+0x00000550:	cmpi r1,0               	SR=0x00000011
+0x00000554:	bge 6                   	PC=0x00000558
+0x00000558:	movs r1,1               	R1=0x00000001
+0x0000055C:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000001
+0x00000560:	movs r1,0               	R1=0x00000000
+0x00000564:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0xFFFFFFFF
+0x00000568:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000001
+0x0000056C:	s32 [r7+4],r1           	MEM[0x00007FC8]=R1=0x00000001
+0x00000570:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x00000574:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x00000578:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x0000057C:	cmpi r1,11              	SR=0x00000011
+0x00000580:	ble 5                   	PC=0x00000598
+0x00000598:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000001
+0x0000059C:	cmpi r1,0               	SR=0x00000000
+0x000005A0:	ble 5                   	PC=0x000005A4
+0x000005A4:	movs r1,45              	R1=0x0000002D
+0x000005A8:	push r1                 	MEM[0x00007FAC]{0x0000002D}={R1}
+0x000005AC:	call -300               	PC=0x00000100,MEM[0x00007FA8]=0x000005B0
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002D
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002D
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005B0
+0x000005B0:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005B4:	bun 0                   	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x000005BC:	cmpi r1,0               	SR=0x00000000
+0x000005C0:	ble 16                  	PC=0x000005C4
+0x000005C4:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x000005C8:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x000005CC:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x000005D0:	movs r2,10              	R2=0x0000000A
+0x000005D4:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x000005D8:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000001
+0x000005DC:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000001
+0x000005E0:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
+0x000005E4:	push r1                 	MEM[0x00007FAC]{0x00000031}={R1}
+0x000005E8:	call -315               	PC=0x00000100,MEM[0x00007FA8]=0x000005EC
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000031
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005EC
+0x000005EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x000005F4:	movs r2,10              	R2=0x0000000A
+0x000005F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x000005FC:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
+0x00000600:	bun -19                 	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
+0x000005BC:	cmpi r1,0               	SR=0x00000040
+0x000005C0:	ble 16                  	PC=0x00000604
+0x00000604:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x00000608:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x0000060C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000610:	ret                     	PC=MEM[0x00007FC4]=0x00000824
+0x00000824:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000828:	movs r1,32              	R1=0x00000020
+0x0000082C:	push r1                 	MEM[0x00007FC8]{0x00000020}={R1}
+0x00000830:	call -461               	PC=0x00000100,MEM[0x00007FC4]=0x00000834
+0x00000100:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0x00000020
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FC4]=0x00000834
+0x00000834:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000838:	bun -21                 	PC=0x000007E8
+0x000007E8:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000001
+0x000007EC:	add r2,r1,r0            	R2=R1+R0=0x00000001,SR=0x00000000
+0x000007F0:	addi r1,r1,1            	R1=R1+0x00000001=0x00000002,SR=0x00000000
+0x000007F4:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000002
+0x000007F8:	bun -10                 	PC=0x000007D4
+0x000007D4:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000002
+0x000007D8:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x000007DC:	cmp r1,r2               	SR=0x00000011
+0x000007E0:	bge 22                  	PC=0x000007E4
+0x000007E4:	bun 5                   	PC=0x000007FC
+0x000007FC:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000002
+0x00000800:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000008,SR=0x00000011
+0x00000804:	addi r2,r7,-4           	R2=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x00000808:	add r2,r2,r1            	R2=R2+R1=0x00001FFE,SR=0x00000000
+0x0000080C:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x00000810:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x00000814:	s32 [r7-7],r2           	MEM[0x00007FCC]=R2=0xFFFFFFFF
+0x00000818:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0xFFFFFFFF
+0x0000081C:	push r1                 	MEM[0x00007FC8]{0xFFFFFFFF}={R1}
+0x00000820:	call -192               	PC=0x00000524,MEM[0x00007FC4]=0x00000824
+0x00000524:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000528:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x0000052C:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x00000530:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000534:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000538:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
+0x0000053C:	movs r1,1               	R1=0x00000001
+0x00000540:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x00000544:	movs r1,0               	R1=0x00000000
+0x00000548:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
+0x0000054C:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0xFFFFFFFF
+0x00000550:	cmpi r1,0               	SR=0x00000011
+0x00000554:	bge 6                   	PC=0x00000558
+0x00000558:	movs r1,1               	R1=0x00000001
+0x0000055C:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000001
+0x00000560:	movs r1,0               	R1=0x00000000
+0x00000564:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0xFFFFFFFF
+0x00000568:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000001
+0x0000056C:	s32 [r7+4],r1           	MEM[0x00007FC8]=R1=0x00000001
+0x00000570:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x00000574:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x00000578:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x0000057C:	cmpi r1,11              	SR=0x00000011
+0x00000580:	ble 5                   	PC=0x00000598
+0x00000598:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000001
+0x0000059C:	cmpi r1,0               	SR=0x00000000
+0x000005A0:	ble 5                   	PC=0x000005A4
+0x000005A4:	movs r1,45              	R1=0x0000002D
+0x000005A8:	push r1                 	MEM[0x00007FAC]{0x0000002D}={R1}
+0x000005AC:	call -300               	PC=0x00000100,MEM[0x00007FA8]=0x000005B0
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002D
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002D
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005B0
+0x000005B0:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005B4:	bun 0                   	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x000005BC:	cmpi r1,0               	SR=0x00000000
+0x000005C0:	ble 16                  	PC=0x000005C4
+0x000005C4:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x000005C8:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x000005CC:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x000005D0:	movs r2,10              	R2=0x0000000A
+0x000005D4:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x000005D8:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000001
+0x000005DC:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000001
+0x000005E0:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
+0x000005E4:	push r1                 	MEM[0x00007FAC]{0x00000031}={R1}
+0x000005E8:	call -315               	PC=0x00000100,MEM[0x00007FA8]=0x000005EC
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000031
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005EC
+0x000005EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x000005F4:	movs r2,10              	R2=0x0000000A
+0x000005F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x000005FC:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
+0x00000600:	bun -19                 	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
+0x000005BC:	cmpi r1,0               	SR=0x00000040
+0x000005C0:	ble 16                  	PC=0x00000604
+0x00000604:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x00000608:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x0000060C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000610:	ret                     	PC=MEM[0x00007FC4]=0x00000824
+0x00000824:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000828:	movs r1,32              	R1=0x00000020
+0x0000082C:	push r1                 	MEM[0x00007FC8]{0x00000020}={R1}
+0x00000830:	call -461               	PC=0x00000100,MEM[0x00007FC4]=0x00000834
+0x00000100:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0x00000020
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FC4]=0x00000834
+0x00000834:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000838:	bun -21                 	PC=0x000007E8
+0x000007E8:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000002
+0x000007EC:	add r2,r1,r0            	R2=R1+R0=0x00000002,SR=0x00000000
+0x000007F0:	addi r1,r1,1            	R1=R1+0x00000001=0x00000003,SR=0x00000000
+0x000007F4:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000003
+0x000007F8:	bun -10                 	PC=0x000007D4
+0x000007D4:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000003
+0x000007D8:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x000007DC:	cmp r1,r2               	SR=0x00000011
+0x000007E0:	bge 22                  	PC=0x000007E4
+0x000007E4:	bun 5                   	PC=0x000007FC
+0x000007FC:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000003
+0x00000800:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x000000000000000C,SR=0x00000011
+0x00000804:	addi r2,r7,-4           	R2=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x00000808:	add r2,r2,r1            	R2=R2+R1=0x00002002,SR=0x00000000
+0x0000080C:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x00000810:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x00000814:	s32 [r7-7],r2           	MEM[0x00007FCC]=R2=0xFFFFFFFF
+0x00000818:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0xFFFFFFFF
+0x0000081C:	push r1                 	MEM[0x00007FC8]{0xFFFFFFFF}={R1}
+0x00000820:	call -192               	PC=0x00000524,MEM[0x00007FC4]=0x00000824
+0x00000524:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000528:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x0000052C:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x00000530:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000534:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000538:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
+0x0000053C:	movs r1,1               	R1=0x00000001
+0x00000540:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x00000544:	movs r1,0               	R1=0x00000000
+0x00000548:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
+0x0000054C:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0xFFFFFFFF
+0x00000550:	cmpi r1,0               	SR=0x00000011
+0x00000554:	bge 6                   	PC=0x00000558
+0x00000558:	movs r1,1               	R1=0x00000001
+0x0000055C:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000001
+0x00000560:	movs r1,0               	R1=0x00000000
+0x00000564:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0xFFFFFFFF
+0x00000568:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000001
+0x0000056C:	s32 [r7+4],r1           	MEM[0x00007FC8]=R1=0x00000001
+0x00000570:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x00000574:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x00000578:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x0000057C:	cmpi r1,11              	SR=0x00000011
+0x00000580:	ble 5                   	PC=0x00000598
+0x00000598:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000001
+0x0000059C:	cmpi r1,0               	SR=0x00000000
+0x000005A0:	ble 5                   	PC=0x000005A4
+0x000005A4:	movs r1,45              	R1=0x0000002D
+0x000005A8:	push r1                 	MEM[0x00007FAC]{0x0000002D}={R1}
+0x000005AC:	call -300               	PC=0x00000100,MEM[0x00007FA8]=0x000005B0
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002D
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002D
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005B0
+0x000005B0:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005B4:	bun 0                   	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x000005BC:	cmpi r1,0               	SR=0x00000000
+0x000005C0:	ble 16                  	PC=0x000005C4
+0x000005C4:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x000005C8:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x000005CC:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x000005D0:	movs r2,10              	R2=0x0000000A
+0x000005D4:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x000005D8:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000001
+0x000005DC:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000001
+0x000005E0:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
+0x000005E4:	push r1                 	MEM[0x00007FAC]{0x00000031}={R1}
+0x000005E8:	call -315               	PC=0x00000100,MEM[0x00007FA8]=0x000005EC
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000031
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005EC
+0x000005EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x000005F4:	movs r2,10              	R2=0x0000000A
+0x000005F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x000005FC:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
+0x00000600:	bun -19                 	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
+0x000005BC:	cmpi r1,0               	SR=0x00000040
+0x000005C0:	ble 16                  	PC=0x00000604
+0x00000604:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x00000608:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x0000060C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000610:	ret                     	PC=MEM[0x00007FC4]=0x00000824
+0x00000824:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000828:	movs r1,32              	R1=0x00000020
+0x0000082C:	push r1                 	MEM[0x00007FC8]{0x00000020}={R1}
+0x00000830:	call -461               	PC=0x00000100,MEM[0x00007FC4]=0x00000834
+0x00000100:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0x00000020
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FC4]=0x00000834
+0x00000834:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000838:	bun -21                 	PC=0x000007E8
+0x000007E8:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000003
+0x000007EC:	add r2,r1,r0            	R2=R1+R0=0x00000003,SR=0x00000000
+0x000007F0:	addi r1,r1,1            	R1=R1+0x00000001=0x00000004,SR=0x00000000
+0x000007F4:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000004
+0x000007F8:	bun -10                 	PC=0x000007D4
+0x000007D4:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000004
+0x000007D8:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x000007DC:	cmp r1,r2               	SR=0x00000011
+0x000007E0:	bge 22                  	PC=0x000007E4
+0x000007E4:	bun 5                   	PC=0x000007FC
+0x000007FC:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000004
+0x00000800:	sla r0,r1,r1,1          	R0:R1=R0:R1<<2=0x0000000000000010,SR=0x00000011
+0x00000804:	addi r2,r7,-4           	R2=R7+0xFFFFFFFC=0x00001FF6,SR=0x00000001
+0x00000808:	add r2,r2,r1            	R2=R2+R1=0x00002006,SR=0x00000000
+0x0000080C:	sub r2,r2,r1            	R2=R2-R1=0x00001FF6,SR=0x00000000
+0x00000810:	l32 r2,[r2+0]           	R2=MEM[0xFFFFFFFC]=0xFFFFFFFF
+0x00000814:	s32 [r7-7],r2           	MEM[0x00007FCC]=R2=0xFFFFFFFF
+0x00000818:	l32 r1,[r7-7]           	R1=MEM[0x00007FCC]=0xFFFFFFFF
+0x0000081C:	push r1                 	MEM[0x00007FC8]{0xFFFFFFFF}={R1}
+0x00000820:	call -192               	PC=0x00000524,MEM[0x00007FC4]=0x00000824
+0x00000524:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000528:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x0000052C:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x00000530:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000534:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000538:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007FAC,SR=0x00000000
+0x0000053C:	movs r1,1               	R1=0x00000001
+0x00000540:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x00000544:	movs r1,0               	R1=0x00000000
+0x00000548:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000000
+0x0000054C:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0xFFFFFFFF
+0x00000550:	cmpi r1,0               	SR=0x00000011
+0x00000554:	bge 6                   	PC=0x00000558
+0x00000558:	movs r1,1               	R1=0x00000001
+0x0000055C:	s32 [r7-1],r1           	MEM[0x00007FB4]=R1=0x00000001
+0x00000560:	movs r1,0               	R1=0x00000000
+0x00000564:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0xFFFFFFFF
+0x00000568:	sub r1,r1,r2            	R1=R1-R2=0x00000001,SR=0x00000001
+0x0000056C:	s32 [r7+4],r1           	MEM[0x00007FC8]=R1=0x00000001
+0x00000570:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x00000574:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x00000578:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x0000057C:	cmpi r1,11              	SR=0x00000011
+0x00000580:	ble 5                   	PC=0x00000598
+0x00000598:	l32 r1,[r7-1]           	R1=MEM[0x00007FB4]=0x00000001
+0x0000059C:	cmpi r1,0               	SR=0x00000000
+0x000005A0:	ble 5                   	PC=0x000005A4
+0x000005A4:	movs r1,45              	R1=0x0000002D
+0x000005A8:	push r1                 	MEM[0x00007FAC]{0x0000002D}={R1}
+0x000005AC:	call -300               	PC=0x00000100,MEM[0x00007FA8]=0x000005B0
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x0000002D
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x0000002D
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005B0
+0x000005B0:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005B4:	bun 0                   	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x000005BC:	cmpi r1,0               	SR=0x00000000
+0x000005C0:	ble 16                  	PC=0x000005C4
+0x000005C4:	l32 r1,[r7+4]           	R1=MEM[0x00007FC8]=0x00000001
+0x000005C8:	l32 r2,[r7+0]           	R2=MEM[0x00007FB8]=0x00000001
+0x000005CC:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000000,R1=R1/R2=0x00000001,SR=0x00000000
+0x000005D0:	movs r2,10              	R2=0x0000000A
+0x000005D4:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x000005D8:	s32 [r7-2],r4           	MEM[0x00007FB0]=R4=0x00000001
+0x000005DC:	l32 r1,[r7-2]           	R1=MEM[0x00007FB0]=0x00000001
+0x000005E0:	addi r1,r1,48           	R1=R1+0x00000030=0x00000031,SR=0x00000000
+0x000005E4:	push r1                 	MEM[0x00007FAC]{0x00000031}={R1}
+0x000005E8:	call -315               	PC=0x00000100,MEM[0x00007FA8]=0x000005EC
+0x00000100:	push r6                 	MEM[0x00007FA4]{0x00007FB8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FA0]{0x00001FEE}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007F9C,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007F9C,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FE7,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007F9C,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FAC]=0x00000031
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000031
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007F9C,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FA0]{0x00001FEE}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FA4]{0x00007FB8}
+0x00000134:	ret                     	PC=MEM[0x00007FA8]=0x000005EC
+0x000005EC:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FAC,SR=0x00000000
+0x000005F0:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000001
+0x000005F4:	movs r2,10              	R2=0x0000000A
+0x000005F8:	divs r4,r1,r1,r2        	R4=R1%R2=0x00000001,R1=R1/R2=0x00000000,SR=0x00000041
+0x000005FC:	s32 [r7+0],r1           	MEM[0x00007FB8]=R1=0x00000000
+0x00000600:	bun -19                 	PC=0x000005B8
+0x000005B8:	l32 r1,[r7+0]           	R1=MEM[0x00007FB8]=0x00000000
+0x000005BC:	cmpi r1,0               	SR=0x00000040
+0x000005C0:	ble 16                  	PC=0x00000604
+0x00000604:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x00000608:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x0000060C:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000610:	ret                     	PC=MEM[0x00007FC4]=0x00000824
+0x00000824:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000828:	movs r1,32              	R1=0x00000020
+0x0000082C:	push r1                 	MEM[0x00007FC8]{0x00000020}={R1}
+0x00000830:	call -461               	PC=0x00000100,MEM[0x00007FC4]=0x00000834
+0x00000100:	push r6                 	MEM[0x00007FC0]{0x00007FE8}={R6}
+0x00000104:	push r7                 	MEM[0x00007FBC]{0x00001FFA}={R7}
+0x00000108:	add r6,sp,r0            	R6=SP+R0=0x00007FB8,SR=0x00000000
+0x0000010C:	add r7,r6,r0            	R7=R6+R0=0x00007FB8,SR=0x00000000
+0x00000110:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEE,SR=0x00000000
+0x00000114:	subi sp,sp,0            	SP=SP-0x00000000=0x00007FB8,SR=0x00000000
+0x00000118:	mov r8,1024             	R8=0x00000400
+0x0000011C:	l32 r1,[r8+0]           	R1=MEM[0x00001000]=0x22222222
+0x00000120:	l32 r2,[r7+4]           	R2=MEM[0x00007FC8]=0x00000020
+0x00000124:	s32 [r1+0],r2           	MEM[0x88888888]=R2=0x00000020
+0x00000128:	add sp,r6,r0            	SP=R6+R0=0x00007FB8,SR=0x00000000
+0x0000012C:	pop r7                  	{R7}=MEM[0x00007FBC]{0x00001FFA}
+0x00000130:	pop r6                  	{R6}=MEM[0x00007FC0]{0x00007FE8}
+0x00000134:	ret                     	PC=MEM[0x00007FC4]=0x00000834
+0x00000834:	addi sp,sp,4            	SP=SP+0x00000004=0x00007FC8,SR=0x00000000
+0x00000838:	bun -21                 	PC=0x000007E8
+0x000007E8:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000004
+0x000007EC:	add r2,r1,r0            	R2=R1+R0=0x00000004,SR=0x00000000
+0x000007F0:	addi r1,r1,1            	R1=R1+0x00000001=0x00000005,SR=0x00000000
+0x000007F4:	s32 [r7-6],r1           	MEM[0x00007FD0]=R1=0x00000005
+0x000007F8:	bun -10                 	PC=0x000007D4
+0x000007D4:	l32 r1,[r7-6]           	R1=MEM[0x00007FD0]=0x00000005
+0x000007D8:	l32 r2,[r7-5]           	R2=MEM[0x00007FD4]=0x00000005
+0x000007DC:	cmp r1,r2               	SR=0x00000040
+0x000007E0:	bge 22                  	PC=0x0000083C
+0x0000083C:	call -139               	PC=0x00000614,MEM[0x00007FC8]=0x00000840
+0x00000614:	push r6                 	MEM[0x00007FC4]{0x00007FE8}={R6}
+0x00000618:	push r7                 	MEM[0x00007FC0]{0x00001FFA}={R7}
+0x0000061C:	add r6,sp,r0            	R6=SP+R0=0x00007FBC,SR=0x00000000
+0x00000620:	add r7,r6,r0            	R7=R6+R0=0x00007FBC,SR=0x00000000
+0x00000624:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001FEF,SR=0x00000000
+0x00000628:	subi sp,sp,24           	SP=SP-0x00000018=0x00007FA4,SR=0x00000000
+0x0000062C:	movs r1,1               	R1=0x00000001
+0x00000630:	s32 [r7-1],r1           	MEM[0x00007FB8]=R1=0x00000001
+0x00000634:	movs r1,1               	R1=0x00000001
+0x00000638:	s32 [r7+0],r1           	MEM[0x00007FBC]=R1=0x00000001
+0x0000063C:	movs r1,2               	R1=0x00000002
+0x00000640:	s32 [r7-3],r1           	MEM[0x00007FB0]=R1=0x00000002
+0x00000644:	movs r1,2               	R1=0x00000002
+0x00000648:	s32 [r7-2],r1           	MEM[0x00007FB4]=R1=0x00000002
+0x0000064C:	sub sp,sp,r8            	SP=SP-R8=0x00007BA4,SR=0x00000000
+0x00000650:	add r0,r6,r0            	R0=R6+R0=0x00000000,SR=0x00000040
+0x00000654:	movs r2,8               	R2=0x00000008
+0x00000658:	push r2                 	MEM[0x00007BA4]{0x00000008}={R2}
+0x0000065C:	addi r2,r7,-3           	R2=R7+0xFFFFFFFD=0x00001FEC,SR=0x00000001
+0x00000660:	push r2                 	MEM[0x00007BA0]{0x00001FEC}={R2}
+0x00000664:	push r1                 	MEM[0x00007B9C]{0x00000002}={R1}
+0x00000668:	s32 [r7-5],r1           	MEM[0x00007FA8]=R1=0x00000002
+0x0000066C:	call -387               	PC=0x00000064,MEM[0x00007B98]=0x00000670
+0x00000064:	push r6                 	MEM[0x00007B94]{0x00007FBC}={R6}
+0x00000068:	push r7                 	MEM[0x00007B90]{0x00001FEF}={R7}
+0x0000006C:	add r6,sp,r0            	R6=SP+R0=0x00007B8C,SR=0x00000000
+0x00000070:	add r7,r6,r0            	R7=R6+R0=0x00007B8C,SR=0x00000000
+0x00000074:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001EE3,SR=0x00000000
+0x00000078:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007B80,SR=0x00000000
+0x0000007C:	l32 r1,[r7+4]           	R1=MEM[0x00007B9C]=0x00000002
+0x00000080:	s32 [r7+0],r1           	MEM[0x00007B8C]=R1=0x00000002
+0x00000084:	l32 r1,[r7+5]           	R1=MEM[0x00007BA0]=0x00001FEC
+0x00000088:	s32 [r7-1],r1           	MEM[0x00007B88]=R1=0x00001FEC
+0x0000008C:	movs r1,0               	R1=0x00000000
+0x00000090:	s32 [r7-2],r1           	MEM[0x00007B84]=R1=0x00000000
+0x00000094:	l32 r1,[r7+24]          	R1=MEM[0x00007BEC]=0x00000000
+0x00000098:	srl r0,r1,r1,1          	R0:R1=R0:R1>>2=0x0000000000000000,SR=0x00000040
+0x0000009C:	l32 r2,[r7-8]           	R2=MEM[0x00007B6C]=0x00000000
+0x000000A0:	cmp r2,r1               	SR=0x00000040
+0x000000A4:	bae 17                  	PC=0x000000EC
+0x000000EC:	l32 r2,[r7+6]           	R2=MEM[0x00007BA4]=0x00000008
+0x000000F0:	add sp,r6,r0            	SP=R6+R0=0x00007B8C,SR=0x00000000
+0x000000F4:	pop r7                  	{R7}=MEM[0x00007B90]{0x00001FEF}
+0x000000F8:	pop r6                  	{R6}=MEM[0x00007B94]{0x00007FBC}
+0x000000FC:	ret                     	PC=MEM[0x00007B98]=0x00000670
+0x00000670:	addi sp,sp,12           	SP=SP+0x0000000C=0x00007BA4,SR=0x00000000
+0x00000674:	sub sp,sp,r8            	SP=SP-R8=0x000077A4,SR=0x00000000
+0x00000678:	add r0,r6,r0            	R0=R6+R0=0x00000000,SR=0x00000040
+0x0000067C:	movs r2,8               	R2=0x00000008
+0x00000680:	push r2                 	MEM[0x000077A4]{0x00000008}={R2}
+0x00000684:	addi r2,r7,-1           	R2=R7+0xFFFFFFFF=0x00001FEE,SR=0x00000001
+0x00000688:	push r2                 	MEM[0x000077A0]{0x00001FEE}={R2}
+0x0000068C:	push r1                 	MEM[0x0000779C]{0x00000000}={R1}
+0x00000690:	s32 [r7-5],r1           	MEM[0x00007FA8]=R1=0x00000000
+0x00000694:	call -397               	PC=0x00000064,MEM[0x00007798]=0x00000698
+0x00000064:	push r6                 	MEM[0x00007794]{0x00007FBC}={R6}
+0x00000068:	push r7                 	MEM[0x00007790]{0x00001FEF}={R7}
+0x0000006C:	add r6,sp,r0            	R6=SP+R0=0x0000778C,SR=0x00000000
+0x00000070:	add r7,r6,r0            	R7=R6+R0=0x0000778C,SR=0x00000000
+0x00000074:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001DE3,SR=0x00000000
+0x00000078:	subi sp,sp,12           	SP=SP-0x0000000C=0x00007780,SR=0x00000000
+0x0000007C:	l32 r1,[r7+4]           	R1=MEM[0x0000779C]=0x00000000
+0x00000080:	s32 [r7+0],r1           	MEM[0x0000778C]=R1=0x00000000
+0x00000084:	l32 r1,[r7+5]           	R1=MEM[0x000077A0]=0x00001FEE
+0x00000088:	s32 [r7-1],r1           	MEM[0x00007788]=R1=0x00001FEE
+0x0000008C:	movs r1,0               	R1=0x00000000
+0x00000090:	s32 [r7-2],r1           	MEM[0x00007784]=R1=0x00000000
+0x00000094:	l32 r1,[r7+24]          	R1=MEM[0x000077EC]=0x00000000
+0x00000098:	srl r0,r1,r1,1          	R0:R1=R0:R1>>2=0x0000000000000000,SR=0x00000040
+0x0000009C:	l32 r2,[r7-8]           	R2=MEM[0x0000776C]=0x00000000
+0x000000A0:	cmp r2,r1               	SR=0x00000040
+0x000000A4:	bae 17                  	PC=0x000000EC
+0x000000EC:	l32 r2,[r7+6]           	R2=MEM[0x000077A4]=0x00000008
+0x000000F0:	add sp,r6,r0            	SP=R6+R0=0x0000778C,SR=0x00000000
+0x000000F4:	pop r7                  	{R7}=MEM[0x00007790]{0x00001FEF}
+0x000000F8:	pop r6                  	{R6}=MEM[0x00007794]{0x00007FBC}
+0x000000FC:	ret                     	PC=MEM[0x00007798]=0x00000698
+0x00000698:	addi sp,sp,12           	SP=SP+0x0000000C=0x000077A4,SR=0x00000000
+0x0000069C:	call -205               	PC=0x0000036C,MEM[0x000077A4]=0x000006A0
+0x0000036C:	push r6                 	MEM[0x000077A0]{0x00007FBC}={R6}
+0x00000370:	push r7                 	MEM[0x0000779C]{0x00001FEF}={R7}
+0x00000374:	add r6,sp,r0            	R6=SP+R0=0x00007798,SR=0x00000000
+0x00000378:	add r7,r6,r0            	R7=R6+R0=0x00007798,SR=0x00000000
+0x0000037C:	sra r0,r7,r7,1          	R0:R7=R0:R7>>2=0x0000000000001DE6,SR=0x00000000
+0x00000380:	subi sp,sp,0            	SP=SP-0x00000000=0x00007798,SR=0x00000000
+0x00000384:	l32 r1,[r7+4]           	R1=MEM[0x000077A8]=0x00000000
+0x00000388:	l32 r2,[r7+6]           	R2=MEM[0x000077B0]=0x00000000
+0x0000038C:	muls r8,r1,r1,r2        	R8:R1=R1*R2=0x0000000000000000,SR=0x00000040
+0x00000390:	l32 r2,[r7+5]           	R2=MEM[0x000077AC]=0x00000000
+0x00000394:	l32 r3,[r7+7]           	R3=MEM[0x000077B4]=0x00000000
+0x00000398:	muls r8,r2,r2,r3        	R8:R2=R2*R3=0x0000000000000000,SR=0x00000040
+0x0000039C:	add r1,r1,r2            	R1=R1+R2=0x00000000,SR=0x00000040
+0x000003A0:	sub r1,r1,r2            	R1=R1-R2=0x00000000,SR=0x00000040
+0x000003A4:	add r2,r1,r0            	R2=R1+R0=0x00000000,SR=0x00000040
+0x000003A8:	add sp,r6,r0            	SP=R6+R0=0x00007798,SR=0x00000000
+0x000003AC:	pop r7                  	{R7}=MEM[0x0000779C]{0x00001FEF}
+0x000003B0:	pop r6                  	{R6}=MEM[0x000077A0]{0x00007FBC}
+0x000003B4:	ret                     	PC=MEM[0x000077A4]=0x000006A0
+0x000006A0:	addi sp,sp,16           	SP=SP+0x00000010=0x000077B4,SR=0x00000000
+0x000006A4:	s32 [r7-4],r2           	MEM[0x00007FAC]=R2=0x00000000
+0x000006A8:	l32 r2,[r7-4]           	R2=MEM[0x00007FAC]=0x00000000
+0x000006AC:	add sp,r6,r0            	SP=R6+R0=0x00007FBC,SR=0x00000000
+0x000006B0:	pop r7                  	{R7}=MEM[0x00007FC0]{0x00001FFA}
+0x000006B4:	pop r6                  	{R6}=MEM[0x00007FC4]{0x00007FE8}
+0x000006B8:	ret                     	PC=MEM[0x00007FC8]=0x00000840
+0x00000840:	add sp,r6,r0            	SP=R6+R0=0x00007FE8,SR=0x00000000
+0x00000844:	pop r7                  	{R7}=MEM[0x00007FEC]{0x00001FFD}
+0x00000848:	pop r6                  	{R6}=MEM[0x00007FF0]{0x00007FF4}
+0x0000084C:	ret                     	PC=MEM[0x00007FF4]=0x00000028
 0x00000028:	call -9                 	PC=0x00000008,MEM[0x00007FF4]=0x0000002C
 0x00000008:	int 0                   	CR=0x00000000,PC=0x00000000
 [TERMINAL]
-+1+2+3+4+5
+420-1 -1 -1 -1 -1 
+-1 -1 -1 -1 -1 
 [END OF SIMULATION]
\ No newline at end of file
diff --git a/out/curr.poximdump b/out/curr.poximdump
index a50c2822..af263f69 100644
--- a/out/curr.poximdump
+++ b/out/curr.poximdump
@@ -7,7 +7,7 @@
   18:    08 e6 00 00       mov    r7, r6
   1c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
   20:    4f de 00 00       subi   sp, sp, 0
-  24:    e4 00 00 c3       call   195<<2        # 0x334
+  24:    e4 00 01 a5       call   421<<2        # 0x6bc
   28:    e7 ff ff f7       call   -9<<2        # 0x8
   2c:    0b c6 00 00       mov    sp, r6
   30:    2c 00 01 c0       pop    r7
@@ -18,244 +18,518 @@
   44:    08 de 00 00       mov    r6, sp
   48:    08 e6 00 00       mov    r7, r6
   4c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  50:    4f de 00 08       subi   sp, sp, 8
-  54:    68 27 00 04       l32    r1, [r7+4]<<2
-  58:    74 27 00 00       s32    [r7+0]<<2, r1
-  5c:    00 20 00 00       mov    r1, 0
-  60:    74 27 ff ff       s32    [r7-1]<<2, r1
-  64:    68 27 00 18       l32    r1, [r7+24]<<2
-  68:    10 01 0d 01       srl    r0, r1, r1, 1
-  6c:    68 47 ff fc       l32    r2, [r7-4]<<2
-  70:    14 02 08 00       cmp    r2, r1
-  74:    a8 00 00 0d       bae    13        # 0xac
-  78:    dc 00 00 05       bun    5        # 0x90
-  7c:    68 27 ff fc       l32    r1, [r7-4]<<2
-  80:    08 41 00 00       mov    r2, r1
-  84:    48 21 00 01       addi   r1, r1, 1
+  50:    4f de 00 00       subi   sp, sp, 0
+  54:    0b c6 00 00       mov    sp, r6
+  58:    2c 00 01 c0       pop    r7
+  5c:    2c 00 01 80       pop    r6
+  60:    7c 00 00 00       ret   
+  64:    28 00 01 80       push   r6
+  68:    28 00 01 c0       push   r7
+  6c:    08 de 00 00       mov    r6, sp
+  70:    08 e6 00 00       mov    r7, r6
+  74:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+  78:    4f de 00 0c       subi   sp, sp, 12
+  7c:    68 27 00 04       l32    r1, [r7+4]<<2
+  80:    74 27 00 00       s32    [r7+0]<<2, r1
+  84:    68 27 00 05       l32    r1, [r7+5]<<2
   88:    74 27 ff ff       s32    [r7-1]<<2, r1
-  8c:    df ff ff f5       bun    -11        # 0x64
-  90:    68 27 00 00       l32    r1, [r7+0]<<2
-  94:    08 41 00 00       mov    r2, r1
-  98:    48 21 00 01       addi   r1, r1, 1
-  9c:    74 27 00 00       s32    [r7+0]<<2, r1
-  a0:    68 27 00 05       l32    r1, [r7+5]<<2
-  a4:    74 22 00 00       s32    [r2+0]<<2, r1
-  a8:    df ff ff f4       bun    -12        # 0x7c
-  ac:    68 47 00 04       l32    r2, [r7+4]<<2
-  b0:    0b c6 00 00       mov    sp, r6
-  b4:    2c 00 01 c0       pop    r7
-  b8:    2c 00 01 80       pop    r6
-  bc:    7c 00 00 00       ret   
-  c0:    28 00 01 80       push   r6
-  c4:    28 00 01 c0       push   r7
-  c8:    08 de 00 00       mov    r6, sp
-  cc:    08 e6 00 00       mov    r7, r6
-  d0:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
-  d4:    4f de 00 00       subi   sp, sp, 0
-  d8:    01 00 04 00       mov    r8, 1024
-  dc:    68 28 00 00       l32    r1, [r8+0]<<2
-  e0:    68 47 00 04       l32    r2, [r7+4]<<2
-  e4:    74 41 00 00       s32    [r1+0]<<2, r2
-  e8:    0b c6 00 00       mov    sp, r6
-  ec:    2c 00 01 c0       pop    r7
-  f0:    2c 00 01 80       pop    r6
-  f4:    7c 00 00 00       ret   
-  f8:    28 00 01 80       push   r6
-  fc:    28 00 01 c0       push   r7
- 100:    08 de 00 00       mov    r6, sp
- 104:    08 e6 00 00       mov    r7, r6
- 108:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
- 10c:    4f de 00 10       subi   sp, sp, 16
- 110:    00 20 00 00       mov    r1, 0
- 114:    74 27 ff fe       s32    [r7-2]<<2, r1
- 118:    68 27 00 05       l32    r1, [r7+5]<<2
- 11c:    4c 21 00 01       subi   r1, r1, 1
- 120:    68 47 ff fe       l32    r2, [r7-2]<<2
- 124:    14 02 08 00       cmp    r2, r1
- 128:    bc 00 00 3e       bge    62        # 0x224
- 12c:    dc 00 00 05       bun    5        # 0x144
- 130:    68 27 ff fe       l32    r1, [r7-2]<<2
- 134:    08 41 00 00       mov    r2, r1
- 138:    48 21 00 01       addi   r1, r1, 1
- 13c:    74 27 ff fe       s32    [r7-2]<<2, r1
- 140:    df ff ff f5       bun    -11        # 0x118
- 144:    00 20 00 00       mov    r1, 0
- 148:    74 27 ff ff       s32    [r7-1]<<2, r1
- 14c:    00 20 00 00       mov    r1, 0
- 150:    74 27 ff fd       s32    [r7-3]<<2, r1
- 154:    68 27 00 05       l32    r1, [r7+5]<<2
- 158:    4c 21 00 01       subi   r1, r1, 1
- 15c:    68 47 ff fe       l32    r2, [r7-2]<<2
- 160:    0c 21 10 00       sub    r1, r1, r2
- 164:    68 47 ff fd       l32    r2, [r7-3]<<2
- 168:    14 02 08 00       cmp    r2, r1
- 16c:    bc 00 00 28       bge    40        # 0x210
- 170:    dc 00 00 05       bun    5        # 0x188
- 174:    68 27 ff fd       l32    r1, [r7-3]<<2
- 178:    08 41 00 00       mov    r2, r1
- 17c:    48 21 00 01       addi   r1, r1, 1
- 180:    74 27 ff fd       s32    [r7-3]<<2, r1
- 184:    df ff ff f3       bun    -13        # 0x154
- 188:    68 27 00 04       l32    r1, [r7+4]<<2
- 18c:    68 47 ff fd       l32    r2, [r7-3]<<2
- 190:    08 21 10 00       add    r1, r1, r2
- 194:    68 47 ff fd       l32    r2, [r7-3]<<2
- 198:    48 42 00 01       addi   r2, r2, 1
- 19c:    68 67 00 04       l32    r3, [r7+4]<<2
- 1a0:    08 63 10 00       add    r3, r3, r2
- 1a4:    68 21 00 00       l32    r1, [r1+0]<<2
- 1a8:    68 63 00 00       l32    r3, [r3+0]<<2
- 1ac:    14 01 18 00       cmp    r1, r3
- 1b0:    c8 00 00 16       ble    22        # 0x20c
- 1b4:    68 27 00 04       l32    r1, [r7+4]<<2
- 1b8:    68 47 ff fd       l32    r2, [r7-3]<<2
- 1bc:    08 21 10 00       add    r1, r1, r2
- 1c0:    68 21 00 00       l32    r1, [r1+0]<<2
- 1c4:    74 27 00 00       s32    [r7+0]<<2, r1
- 1c8:    68 27 00 04       l32    r1, [r7+4]<<2
- 1cc:    68 47 ff fd       l32    r2, [r7-3]<<2
- 1d0:    08 21 10 00       add    r1, r1, r2
- 1d4:    68 47 ff fd       l32    r2, [r7-3]<<2
- 1d8:    48 42 00 01       addi   r2, r2, 1
- 1dc:    68 67 00 04       l32    r3, [r7+4]<<2
- 1e0:    08 63 10 00       add    r3, r3, r2
- 1e4:    68 63 00 00       l32    r3, [r3+0]<<2
- 1e8:    74 61 00 00       s32    [r1+0]<<2, r3
- 1ec:    68 27 ff fd       l32    r1, [r7-3]<<2
- 1f0:    48 21 00 01       addi   r1, r1, 1
- 1f4:    68 47 00 04       l32    r2, [r7+4]<<2
- 1f8:    08 42 08 00       add    r2, r2, r1
- 1fc:    68 27 00 00       l32    r1, [r7+0]<<2
- 200:    74 22 00 00       s32    [r2+0]<<2, r1
- 204:    00 20 00 01       mov    r1, 1
- 208:    74 27 ff ff       s32    [r7-1]<<2, r1
- 20c:    df ff ff d9       bun    -39        # 0x174
+  8c:    04 20 00 00       movs   r1, 0
+  90:    74 27 ff fe       s32    [r7-2]<<2, r1
+  94:    68 27 00 18       l32    r1, [r7+24]<<2
+  98:    10 01 0d 01       srl    r0, r1, r1, 1
+  9c:    68 47 ff f8       l32    r2, [r7-8]<<2
+  a0:    14 02 08 00       cmp    r2, r1
+  a4:    a8 00 00 11       bae    17        # 0xec
+  a8:    dc 00 00 05       bun    5        # 0xc0
+  ac:    68 27 ff f8       l32    r1, [r7-8]<<2
+  b0:    08 41 00 00       mov    r2, r1
+  b4:    48 21 00 01       addi   r1, r1, 1
+  b8:    74 27 ff fe       s32    [r7-2]<<2, r1
+  bc:    df ff ff f5       bun    -11        # 0x94
+  c0:    68 27 00 00       l32    r1, [r7+0]<<2
+  c4:    08 41 00 00       mov    r2, r1
+  c8:    48 21 00 04       addi   r1, r1, 4
+  cc:    74 27 00 00       s32    [r7+0]<<2, r1
+  d0:    68 27 ff ff       l32    r1, [r7-1]<<2
+  d4:    08 61 00 00       mov    r3, r1
+  d8:    48 21 00 04       addi   r1, r1, 4
+  dc:    74 27 ff ff       s32    [r7-1]<<2, r1
+  e0:    68 63 00 00       l32    r3, [r3+0]<<2
+  e4:    74 62 00 00       s32    [r2+0]<<2, r3
+  e8:    df ff ff f0       bun    -16        # 0xac
+  ec:    68 47 00 06       l32    r2, [r7+6]<<2
+  f0:    0b c6 00 00       mov    sp, r6
+  f4:    2c 00 01 c0       pop    r7
+  f8:    2c 00 01 80       pop    r6
+  fc:    7c 00 00 00       ret   
+ 100:    28 00 01 80       push   r6
+ 104:    28 00 01 c0       push   r7
+ 108:    08 de 00 00       mov    r6, sp
+ 10c:    08 e6 00 00       mov    r7, r6
+ 110:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 114:    4f de 00 00       subi   sp, sp, 0
+ 118:    01 00 04 00       mov    r8, 1024
+ 11c:    68 28 00 00       l32    r1, [r8+0]<<2
+ 120:    68 47 00 04       l32    r2, [r7+4]<<2
+ 124:    74 41 00 00       s32    [r1+0]<<2, r2
+ 128:    0b c6 00 00       mov    sp, r6
+ 12c:    2c 00 01 c0       pop    r7
+ 130:    2c 00 01 80       pop    r6
+ 134:    7c 00 00 00       ret   
+ 138:    28 00 01 80       push   r6
+ 13c:    28 00 01 c0       push   r7
+ 140:    08 de 00 00       mov    r6, sp
+ 144:    08 e6 00 00       mov    r7, r6
+ 148:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 14c:    4f de 00 0c       subi   sp, sp, 12
+ 150:    68 27 00 04       l32    r1, [r7+4]<<2
+ 154:    74 27 00 00       s32    [r7+0]<<2, r1
+ 158:    04 20 00 00       movs   r1, 0
+ 15c:    74 27 ff fe       s32    [r7-2]<<2, r1
+ 160:    68 27 00 00       l32    r1, [r7+0]<<2
+ 164:    08 41 00 00       mov    r2, r1
+ 168:    48 21 00 04       addi   r1, r1, 4
+ 16c:    74 27 00 00       s32    [r7+0]<<2, r1
+ 170:    68 42 00 00       l32    r2, [r2+0]<<2
+ 174:    74 47 ff ff       s32    [r7-1]<<2, r2
+ 178:    68 27 ff fe       l32    r1, [r7-2]<<2
+ 17c:    48 21 00 04       addi   r1, r1, 4
+ 180:    74 27 ff fe       s32    [r7-2]<<2, r1
+ 184:    68 27 ff ff       l32    r1, [r7-1]<<2
+ 188:    10 01 0f 17       sra    r0, r1, r1, 23    # 0x18
+ 18c:    05 00 00 ff       movs   r8, 255
+ 190:    18 21 40 00       and    r1, r1, r8
+ 194:    5c 01 00 00       cmpi   r1, 0
+ 198:    d0 00 00 01       bne    1        # 0x1a0
+ 19c:    dc 00 00 30       bun    48        # 0x260
+ 1a0:    68 27 ff ff       l32    r1, [r7-1]<<2
+ 1a4:    10 01 0f 17       sra    r0, r1, r1, 23    # 0x18
+ 1a8:    05 00 00 ff       movs   r8, 255
+ 1ac:    18 21 40 00       and    r1, r1, r8
+ 1b0:    28 00 00 40       push   r1
+ 1b4:    e7 ff ff d2       call   -46<<2        # 0x100
+ 1b8:    4b de 00 04       addi   sp, sp, 4
+ 1bc:    68 27 ff ff       l32    r1, [r7-1]<<2
+ 1c0:    10 01 0f 0f       sra    r0, r1, r1, 15    # 0x10
+ 1c4:    05 00 00 ff       movs   r8, 255
+ 1c8:    18 21 40 00       and    r1, r1, r8
+ 1cc:    5c 01 00 00       cmpi   r1, 0
+ 1d0:    d0 00 00 01       bne    1        # 0x1d8
+ 1d4:    dc 00 00 22       bun    34        # 0x260
+ 1d8:    68 27 ff ff       l32    r1, [r7-1]<<2
+ 1dc:    10 01 0f 0f       sra    r0, r1, r1, 15    # 0x10
+ 1e0:    05 00 00 ff       movs   r8, 255
+ 1e4:    18 21 40 00       and    r1, r1, r8
+ 1e8:    28 00 00 40       push   r1
+ 1ec:    e7 ff ff c4       call   -60<<2        # 0x100
+ 1f0:    4b de 00 04       addi   sp, sp, 4
+ 1f4:    68 27 ff ff       l32    r1, [r7-1]<<2
+ 1f8:    10 01 0f 07       sra    r0, r1, r1, 7    # 0x8
+ 1fc:    05 00 00 ff       movs   r8, 255
+ 200:    18 21 40 00       and    r1, r1, r8
+ 204:    5c 01 00 00       cmpi   r1, 0
+ 208:    d0 00 00 01       bne    1        # 0x210
+ 20c:    dc 00 00 14       bun    20        # 0x260
  210:    68 27 ff ff       l32    r1, [r7-1]<<2
- 214:    5c 01 00 00       cmpi   r1, 0
- 218:    d0 00 00 01       bne    1        # 0x220
- 21c:    dc 00 00 01       bun    1        # 0x224
- 220:    df ff ff c3       bun    -61        # 0x130
- 224:    0b c6 00 00       mov    sp, r6
- 228:    2c 00 01 c0       pop    r7
- 22c:    2c 00 01 80       pop    r6
- 230:    7c 00 00 00       ret   
- 234:    28 00 01 80       push   r6
- 238:    28 00 01 c0       push   r7
- 23c:    08 de 00 00       mov    r6, sp
- 240:    08 e6 00 00       mov    r7, r6
- 244:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
- 248:    4f de 00 0c       subi   sp, sp, 12
- 24c:    00 20 00 01       mov    r1, 1
- 250:    74 27 00 00       s32    [r7+0]<<2, r1
- 254:    00 20 00 00       mov    r1, 0
- 258:    74 27 ff ff       s32    [r7-1]<<2, r1
- 25c:    68 27 00 04       l32    r1, [r7+4]<<2
- 260:    5c 01 00 00       cmpi   r1, 0
- 264:    bc 00 00 06       bge    6        # 0x280
- 268:    00 20 00 01       mov    r1, 1
- 26c:    74 27 ff ff       s32    [r7-1]<<2, r1
- 270:    00 20 00 00       mov    r1, 0
- 274:    68 47 00 04       l32    r2, [r7+4]<<2
- 278:    0c 21 10 00       sub    r1, r1, r2
- 27c:    74 27 00 04       s32    [r7+4]<<2, r1
- 280:    68 27 00 04       l32    r1, [r7+4]<<2
- 284:    68 47 00 00       l32    r2, [r7+0]<<2
- 288:    10 21 16 04       divs   r4, r1, r1, r2
- 28c:    5c 01 00 0b       cmpi   r1, 11
- 290:    c8 00 00 05       ble    5        # 0x2a8
- 294:    68 27 00 00       l32    r1, [r7+0]<<2
- 298:    00 40 00 0a       mov    r2, 10
- 29c:    10 21 12 08       muls   r8, r1, r1, r2
- 2a0:    74 27 00 00       s32    [r7+0]<<2, r1
- 2a4:    df ff ff f6       bun    -10        # 0x280
- 2a8:    68 27 ff ff       l32    r1, [r7-1]<<2
- 2ac:    5c 01 00 00       cmpi   r1, 0
- 2b0:    c8 00 00 05       ble    5        # 0x2c8
- 2b4:    00 20 00 2d       mov    r1, 45
- 2b8:    28 00 00 40       push   r1
- 2bc:    e7 ff ff 80       call   -128<<2        # 0xc0
- 2c0:    4b de 00 04       addi   sp, sp, 4
- 2c4:    dc 00 00 04       bun    4        # 0x2d8
- 2c8:    00 20 00 2b       mov    r1, 43
- 2cc:    28 00 00 40       push   r1
- 2d0:    e7 ff ff 7b       call   -133<<2        # 0xc0
- 2d4:    4b de 00 04       addi   sp, sp, 4
- 2d8:    68 27 00 00       l32    r1, [r7+0]<<2
- 2dc:    5c 01 00 00       cmpi   r1, 0
- 2e0:    c8 00 00 10       ble    16        # 0x324
- 2e4:    68 27 00 04       l32    r1, [r7+4]<<2
- 2e8:    68 47 00 00       l32    r2, [r7+0]<<2
- 2ec:    10 21 16 04       divs   r4, r1, r1, r2
- 2f0:    00 40 00 0a       mov    r2, 10
- 2f4:    10 21 16 04       divs   r4, r1, r1, r2
- 2f8:    74 87 ff fe       s32    [r7-2]<<2, r4
+ 214:    10 01 0f 07       sra    r0, r1, r1, 7    # 0x8
+ 218:    05 00 00 ff       movs   r8, 255
+ 21c:    18 21 40 00       and    r1, r1, r8
+ 220:    28 00 00 40       push   r1
+ 224:    e7 ff ff b6       call   -74<<2        # 0x100
+ 228:    4b de 00 04       addi   sp, sp, 4
+ 22c:    68 27 ff ff       l32    r1, [r7-1]<<2
+ 230:    05 00 00 ff       movs   r8, 255
+ 234:    18 21 40 00       and    r1, r1, r8
+ 238:    5c 01 00 00       cmpi   r1, 0
+ 23c:    d0 00 00 01       bne    1        # 0x244
+ 240:    dc 00 00 07       bun    7        # 0x260
+ 244:    68 27 ff ff       l32    r1, [r7-1]<<2
+ 248:    05 00 00 ff       movs   r8, 255
+ 24c:    18 21 40 00       and    r1, r1, r8
+ 250:    28 00 00 40       push   r1
+ 254:    e7 ff ff aa       call   -86<<2        # 0x100
+ 258:    4b de 00 04       addi   sp, sp, 4
+ 25c:    df ff ff c0       bun    -64        # 0x160
+ 260:    0b c6 00 00       mov    sp, r6
+ 264:    2c 00 01 c0       pop    r7
+ 268:    2c 00 01 80       pop    r6
+ 26c:    7c 00 00 00       ret   
+ 270:    28 00 01 80       push   r6
+ 274:    28 00 01 c0       push   r7
+ 278:    08 de 00 00       mov    r6, sp
+ 27c:    08 e6 00 00       mov    r7, r6
+ 280:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 284:    4f de 00 0c       subi   sp, sp, 12
+ 288:    68 27 00 04       l32    r1, [r7+4]<<2
+ 28c:    74 27 00 00       s32    [r7+0]<<2, r1
+ 290:    04 20 00 00       movs   r1, 0
+ 294:    74 27 ff fe       s32    [r7-2]<<2, r1
+ 298:    68 27 00 00       l32    r1, [r7+0]<<2
+ 29c:    08 41 00 00       mov    r2, r1
+ 2a0:    48 21 00 04       addi   r1, r1, 4
+ 2a4:    74 27 00 00       s32    [r7+0]<<2, r1
+ 2a8:    68 42 00 00       l32    r2, [r2+0]<<2
+ 2ac:    74 47 ff ff       s32    [r7-1]<<2, r2
+ 2b0:    68 27 ff fe       l32    r1, [r7-2]<<2
+ 2b4:    48 21 00 04       addi   r1, r1, 4
+ 2b8:    74 27 ff fe       s32    [r7-2]<<2, r1
+ 2bc:    68 27 ff ff       l32    r1, [r7-1]<<2
+ 2c0:    10 01 0f 17       sra    r0, r1, r1, 23    # 0x18
+ 2c4:    05 00 00 ff       movs   r8, 255
+ 2c8:    18 21 40 00       and    r1, r1, r8
+ 2cc:    5c 01 00 00       cmpi   r1, 0
+ 2d0:    d0 00 00 04       bne    4        # 0x2e4
+ 2d4:    68 27 ff fe       l32    r1, [r7-2]<<2
+ 2d8:    4c 21 00 01       subi   r1, r1, 1
+ 2dc:    08 41 00 00       mov    r2, r1
+ 2e0:    dc 00 00 1e       bun    30        # 0x35c
+ 2e4:    68 27 ff ff       l32    r1, [r7-1]<<2
+ 2e8:    10 01 0f 0f       sra    r0, r1, r1, 15    # 0x10
+ 2ec:    05 00 00 ff       movs   r8, 255
+ 2f0:    18 21 40 00       and    r1, r1, r8
+ 2f4:    5c 01 00 00       cmpi   r1, 0
+ 2f8:    d0 00 00 04       bne    4        # 0x30c
  2fc:    68 27 ff fe       l32    r1, [r7-2]<<2
- 300:    48 21 00 30       addi   r1, r1, 48
- 304:    28 00 00 40       push   r1
- 308:    e7 ff ff 6d       call   -147<<2        # 0xc0
- 30c:    4b de 00 04       addi   sp, sp, 4
- 310:    68 27 00 00       l32    r1, [r7+0]<<2
- 314:    00 40 00 0a       mov    r2, 10
- 318:    10 21 16 04       divs   r4, r1, r1, r2
- 31c:    74 27 00 00       s32    [r7+0]<<2, r1
- 320:    df ff ff ed       bun    -19        # 0x2d8
- 324:    0b c6 00 00       mov    sp, r6
- 328:    2c 00 01 c0       pop    r7
- 32c:    2c 00 01 80       pop    r6
- 330:    7c 00 00 00       ret   
- 334:    28 00 01 80       push   r6
- 338:    28 00 01 c0       push   r7
- 33c:    08 de 00 00       mov    r6, sp
- 340:    08 e6 00 00       mov    r7, r6
- 344:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
- 348:    4f de 00 20       subi   sp, sp, 32
- 34c:    00 20 00 14       mov    r1, 20
- 350:    28 00 00 40       push   r1
- 354:    00 20 00 00       mov    r1, 0
- 358:    28 00 00 40       push   r1
- 35c:    48 27 ff fc       addi   r1, r7, -4
- 360:    28 00 00 40       push   r1
- 364:    e7 ff ff 35       call   -203<<2        # 0x3c
- 368:    4b de 00 0c       addi   sp, sp, 12
- 36c:    00 20 00 01       mov    r1, 1
- 370:    74 27 ff fc       s32    [r7-4]<<2, r1
- 374:    00 20 00 02       mov    r1, 2
- 378:    74 27 ff fd       s32    [r7-3]<<2, r1
- 37c:    00 20 00 03       mov    r1, 3
- 380:    74 27 ff fe       s32    [r7-2]<<2, r1
- 384:    00 20 00 04       mov    r1, 4
- 388:    74 27 ff ff       s32    [r7-1]<<2, r1
- 38c:    00 20 00 05       mov    r1, 5
- 390:    74 27 00 00       s32    [r7+0]<<2, r1
- 394:    00 20 00 05       mov    r1, 5
- 398:    74 27 ff fb       s32    [r7-5]<<2, r1
- 39c:    00 20 00 00       mov    r1, 0
- 3a0:    74 27 ff fa       s32    [r7-6]<<2, r1
- 3a4:    68 27 ff fa       l32    r1, [r7-6]<<2
- 3a8:    68 47 ff fb       l32    r2, [r7-5]<<2
- 3ac:    14 01 10 00       cmp    r1, r2
- 3b0:    bc 00 00 10       bge    16        # 0x3f4
- 3b4:    dc 00 00 05       bun    5        # 0x3cc
- 3b8:    68 27 ff fa       l32    r1, [r7-6]<<2
- 3bc:    08 41 00 00       mov    r2, r1
- 3c0:    48 21 00 01       addi   r1, r1, 1
- 3c4:    74 27 ff fa       s32    [r7-6]<<2, r1
- 3c8:    df ff ff f6       bun    -10        # 0x3a4
- 3cc:    48 27 ff fc       addi   r1, r7, -4
- 3d0:    68 47 ff fa       l32    r2, [r7-6]<<2
- 3d4:    08 21 10 00       add    r1, r1, r2
- 3d8:    68 21 00 00       l32    r1, [r1+0]<<2
- 3dc:    74 27 ff f9       s32    [r7-7]<<2, r1
- 3e0:    68 27 ff f9       l32    r1, [r7-7]<<2
- 3e4:    28 00 00 40       push   r1
- 3e8:    e7 ff ff 92       call   -110<<2        # 0x234
- 3ec:    4b de 00 04       addi   sp, sp, 4
- 3f0:    df ff ff f1       bun    -15        # 0x3b8
- 3f4:    68 47 ff fa       l32    r2, [r7-6]<<2
- 3f8:    0b c6 00 00       mov    sp, r6
- 3fc:    2c 00 01 c0       pop    r7
- 400:    2c 00 01 80       pop    r6
- 404:    7c 00 00 00       ret   
+ 300:    4c 21 00 02       subi   r1, r1, 2
+ 304:    08 41 00 00       mov    r2, r1
+ 308:    dc 00 00 14       bun    20        # 0x35c
+ 30c:    68 27 ff ff       l32    r1, [r7-1]<<2
+ 310:    10 01 0f 07       sra    r0, r1, r1, 7    # 0x8
+ 314:    05 00 00 ff       movs   r8, 255
+ 318:    18 21 40 00       and    r1, r1, r8
+ 31c:    5c 01 00 00       cmpi   r1, 0
+ 320:    d0 00 00 04       bne    4        # 0x334
+ 324:    68 27 ff fe       l32    r1, [r7-2]<<2
+ 328:    4c 21 00 03       subi   r1, r1, 3
+ 32c:    08 41 00 00       mov    r2, r1
+ 330:    dc 00 00 0a       bun    10        # 0x35c
+ 334:    68 27 ff ff       l32    r1, [r7-1]<<2
+ 338:    05 00 00 ff       movs   r8, 255
+ 33c:    18 21 40 00       and    r1, r1, r8
+ 340:    5c 01 00 00       cmpi   r1, 0
+ 344:    d0 00 00 04       bne    4        # 0x358
+ 348:    68 27 ff fe       l32    r1, [r7-2]<<2
+ 34c:    4c 21 00 04       subi   r1, r1, 4
+ 350:    08 41 00 00       mov    r2, r1
+ 354:    dc 00 00 01       bun    1        # 0x35c
+ 358:    df ff ff cf       bun    -49        # 0x298
+ 35c:    0b c6 00 00       mov    sp, r6
+ 360:    2c 00 01 c0       pop    r7
+ 364:    2c 00 01 80       pop    r6
+ 368:    7c 00 00 00       ret   
+ 36c:    28 00 01 80       push   r6
+ 370:    28 00 01 c0       push   r7
+ 374:    08 de 00 00       mov    r6, sp
+ 378:    08 e6 00 00       mov    r7, r6
+ 37c:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 380:    4f de 00 00       subi   sp, sp, 0
+ 384:    68 27 00 04       l32    r1, [r7+4]<<2
+ 388:    68 47 00 06       l32    r2, [r7+6]<<2
+ 38c:    10 21 12 08       muls   r8, r1, r1, r2
+ 390:    68 47 00 05       l32    r2, [r7+5]<<2
+ 394:    68 67 00 07       l32    r3, [r7+7]<<2
+ 398:    10 42 1a 08       muls   r8, r2, r2, r3
+ 39c:    08 21 10 00       add    r1, r1, r2
+ 3a0:    0c 21 10 00       sub    r1, r1, r2
+ 3a4:    08 41 00 00       mov    r2, r1
+ 3a8:    0b c6 00 00       mov    sp, r6
+ 3ac:    2c 00 01 c0       pop    r7
+ 3b0:    2c 00 01 80       pop    r6
+ 3b4:    7c 00 00 00       ret   
+ 3b8:    28 00 01 80       push   r6
+ 3bc:    28 00 01 c0       push   r7
+ 3c0:    08 de 00 00       mov    r6, sp
+ 3c4:    08 e6 00 00       mov    r7, r6
+ 3c8:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 3cc:    4f de 00 10       subi   sp, sp, 16
+ 3d0:    04 20 00 00       movs   r1, 0
+ 3d4:    74 27 ff fe       s32    [r7-2]<<2, r1
+ 3d8:    68 27 00 05       l32    r1, [r7+5]<<2
+ 3dc:    4c 21 00 01       subi   r1, r1, 1
+ 3e0:    68 47 ff fe       l32    r2, [r7-2]<<2
+ 3e4:    14 02 08 00       cmp    r2, r1
+ 3e8:    bc 00 00 4a       bge    74        # 0x514
+ 3ec:    dc 00 00 05       bun    5        # 0x404
+ 3f0:    68 27 ff fe       l32    r1, [r7-2]<<2
+ 3f4:    08 41 00 00       mov    r2, r1
+ 3f8:    48 21 00 01       addi   r1, r1, 1
+ 3fc:    74 27 ff fe       s32    [r7-2]<<2, r1
+ 400:    df ff ff f5       bun    -11        # 0x3d8
+ 404:    04 20 00 00       movs   r1, 0
+ 408:    74 27 ff ff       s32    [r7-1]<<2, r1
+ 40c:    04 20 00 00       movs   r1, 0
+ 410:    74 27 ff fd       s32    [r7-3]<<2, r1
+ 414:    68 27 00 05       l32    r1, [r7+5]<<2
+ 418:    4c 21 00 01       subi   r1, r1, 1
+ 41c:    68 47 ff fe       l32    r2, [r7-2]<<2
+ 420:    0c 21 10 00       sub    r1, r1, r2
+ 424:    68 47 ff fd       l32    r2, [r7-3]<<2
+ 428:    14 02 08 00       cmp    r2, r1
+ 42c:    bc 00 00 34       bge    52        # 0x500
+ 430:    dc 00 00 05       bun    5        # 0x448
+ 434:    68 27 ff fd       l32    r1, [r7-3]<<2
+ 438:    08 41 00 00       mov    r2, r1
+ 43c:    48 21 00 01       addi   r1, r1, 1
+ 440:    74 27 ff fd       s32    [r7-3]<<2, r1
+ 444:    df ff ff f3       bun    -13        # 0x414
+ 448:    68 27 ff fd       l32    r1, [r7-3]<<2
+ 44c:    10 01 0b 01       sla    r0, r1, r1, 1
+ 450:    68 47 00 04       l32    r2, [r7+4]<<2
+ 454:    08 42 08 00       add    r2, r2, r1
+ 458:    0c 42 08 00       sub    r2, r2, r1
+ 45c:    68 27 ff fd       l32    r1, [r7-3]<<2
+ 460:    48 21 00 01       addi   r1, r1, 1
+ 464:    10 01 0b 01       sla    r0, r1, r1, 1
+ 468:    68 67 00 04       l32    r3, [r7+4]<<2
+ 46c:    08 63 08 00       add    r3, r3, r1
+ 470:    0c 63 08 00       sub    r3, r3, r1
+ 474:    68 42 00 00       l32    r2, [r2+0]<<2
+ 478:    68 63 00 00       l32    r3, [r3+0]<<2
+ 47c:    14 02 18 00       cmp    r2, r3
+ 480:    c8 00 00 1e       ble    30        # 0x4fc
+ 484:    68 27 ff fd       l32    r1, [r7-3]<<2
+ 488:    10 01 0b 01       sla    r0, r1, r1, 1
+ 48c:    68 47 00 04       l32    r2, [r7+4]<<2
+ 490:    08 42 08 00       add    r2, r2, r1
+ 494:    0c 42 08 00       sub    r2, r2, r1
+ 498:    68 42 00 00       l32    r2, [r2+0]<<2
+ 49c:    74 47 00 00       s32    [r7+0]<<2, r2
+ 4a0:    68 27 ff fd       l32    r1, [r7-3]<<2
+ 4a4:    10 01 0b 01       sla    r0, r1, r1, 1
+ 4a8:    68 47 00 04       l32    r2, [r7+4]<<2
+ 4ac:    08 42 08 00       add    r2, r2, r1
+ 4b0:    0c 42 08 00       sub    r2, r2, r1
+ 4b4:    68 27 ff fd       l32    r1, [r7-3]<<2
+ 4b8:    48 21 00 01       addi   r1, r1, 1
+ 4bc:    10 01 0b 01       sla    r0, r1, r1, 1
+ 4c0:    68 67 00 04       l32    r3, [r7+4]<<2
+ 4c4:    08 63 08 00       add    r3, r3, r1
+ 4c8:    0c 63 08 00       sub    r3, r3, r1
+ 4cc:    68 63 00 00       l32    r3, [r3+0]<<2
+ 4d0:    74 62 00 00       s32    [r2+0]<<2, r3
+ 4d4:    68 27 ff fd       l32    r1, [r7-3]<<2
+ 4d8:    48 21 00 01       addi   r1, r1, 1
+ 4dc:    10 01 0b 01       sla    r0, r1, r1, 1
+ 4e0:    68 47 00 04       l32    r2, [r7+4]<<2
+ 4e4:    08 42 08 00       add    r2, r2, r1
+ 4e8:    0c 42 08 00       sub    r2, r2, r1
+ 4ec:    68 27 00 00       l32    r1, [r7+0]<<2
+ 4f0:    74 22 00 00       s32    [r2+0]<<2, r1
+ 4f4:    04 20 00 01       movs   r1, 1
+ 4f8:    74 27 ff ff       s32    [r7-1]<<2, r1
+ 4fc:    df ff ff cd       bun    -51        # 0x434
+ 500:    68 27 ff ff       l32    r1, [r7-1]<<2
+ 504:    5c 01 00 00       cmpi   r1, 0
+ 508:    d0 00 00 01       bne    1        # 0x510
+ 50c:    dc 00 00 01       bun    1        # 0x514
+ 510:    df ff ff b7       bun    -73        # 0x3f0
+ 514:    0b c6 00 00       mov    sp, r6
+ 518:    2c 00 01 c0       pop    r7
+ 51c:    2c 00 01 80       pop    r6
+ 520:    7c 00 00 00       ret   
+ 524:    28 00 01 80       push   r6
+ 528:    28 00 01 c0       push   r7
+ 52c:    08 de 00 00       mov    r6, sp
+ 530:    08 e6 00 00       mov    r7, r6
+ 534:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 538:    4f de 00 0c       subi   sp, sp, 12
+ 53c:    04 20 00 01       movs   r1, 1
+ 540:    74 27 00 00       s32    [r7+0]<<2, r1
+ 544:    04 20 00 00       movs   r1, 0
+ 548:    74 27 ff ff       s32    [r7-1]<<2, r1
+ 54c:    68 27 00 04       l32    r1, [r7+4]<<2
+ 550:    5c 01 00 00       cmpi   r1, 0
+ 554:    bc 00 00 06       bge    6        # 0x570
+ 558:    04 20 00 01       movs   r1, 1
+ 55c:    74 27 ff ff       s32    [r7-1]<<2, r1
+ 560:    04 20 00 00       movs   r1, 0
+ 564:    68 47 00 04       l32    r2, [r7+4]<<2
+ 568:    0c 21 10 00       sub    r1, r1, r2
+ 56c:    74 27 00 04       s32    [r7+4]<<2, r1
+ 570:    68 27 00 04       l32    r1, [r7+4]<<2
+ 574:    68 47 00 00       l32    r2, [r7+0]<<2
+ 578:    10 21 16 04       divs   r4, r1, r1, r2
+ 57c:    5c 01 00 0b       cmpi   r1, 11
+ 580:    c8 00 00 05       ble    5        # 0x598
+ 584:    68 27 00 00       l32    r1, [r7+0]<<2
+ 588:    04 40 00 0a       movs   r2, 10
+ 58c:    10 21 12 08       muls   r8, r1, r1, r2
+ 590:    74 27 00 00       s32    [r7+0]<<2, r1
+ 594:    df ff ff f6       bun    -10        # 0x570
+ 598:    68 27 ff ff       l32    r1, [r7-1]<<2
+ 59c:    5c 01 00 00       cmpi   r1, 0
+ 5a0:    c8 00 00 05       ble    5        # 0x5b8
+ 5a4:    04 20 00 2d       movs   r1, 45
+ 5a8:    28 00 00 40       push   r1
+ 5ac:    e7 ff fe d4       call   -300<<2        # 0x100
+ 5b0:    4b de 00 04       addi   sp, sp, 4
+ 5b4:    dc 00 00 00       bun    0        # 0x5b8
+ 5b8:    68 27 00 00       l32    r1, [r7+0]<<2
+ 5bc:    5c 01 00 00       cmpi   r1, 0
+ 5c0:    c8 00 00 10       ble    16        # 0x604
+ 5c4:    68 27 00 04       l32    r1, [r7+4]<<2
+ 5c8:    68 47 00 00       l32    r2, [r7+0]<<2
+ 5cc:    10 21 16 04       divs   r4, r1, r1, r2
+ 5d0:    04 40 00 0a       movs   r2, 10
+ 5d4:    10 21 16 04       divs   r4, r1, r1, r2
+ 5d8:    74 87 ff fe       s32    [r7-2]<<2, r4
+ 5dc:    68 27 ff fe       l32    r1, [r7-2]<<2
+ 5e0:    48 21 00 30       addi   r1, r1, 48
+ 5e4:    28 00 00 40       push   r1
+ 5e8:    e7 ff fe c5       call   -315<<2        # 0x100
+ 5ec:    4b de 00 04       addi   sp, sp, 4
+ 5f0:    68 27 00 00       l32    r1, [r7+0]<<2
+ 5f4:    04 40 00 0a       movs   r2, 10
+ 5f8:    10 21 16 04       divs   r4, r1, r1, r2
+ 5fc:    74 27 00 00       s32    [r7+0]<<2, r1
+ 600:    df ff ff ed       bun    -19        # 0x5b8
+ 604:    0b c6 00 00       mov    sp, r6
+ 608:    2c 00 01 c0       pop    r7
+ 60c:    2c 00 01 80       pop    r6
+ 610:    7c 00 00 00       ret   
+ 614:    28 00 01 80       push   r6
+ 618:    28 00 01 c0       push   r7
+ 61c:    08 de 00 00       mov    r6, sp
+ 620:    08 e6 00 00       mov    r7, r6
+ 624:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 628:    4f de 00 18       subi   sp, sp, 24
+ 62c:    04 20 00 01       movs   r1, 1
+ 630:    74 27 ff ff       s32    [r7-1]<<2, r1
+ 634:    04 20 00 01       movs   r1, 1
+ 638:    74 27 00 00       s32    [r7+0]<<2, r1
+ 63c:    04 20 00 02       movs   r1, 2
+ 640:    74 27 ff fd       s32    [r7-3]<<2, r1
+ 644:    04 20 00 02       movs   r1, 2
+ 648:    74 27 ff fe       s32    [r7-2]<<2, r1
+ 64c:    0f de 40 00       sub    sp, sp, r8
+ 650:    08 06 00 00       mov    r0, r6
+ 654:    04 40 00 08       movs   r2, 8
+ 658:    28 00 00 80       push   r2
+ 65c:    48 47 ff fd       addi   r2, r7, -3
+ 660:    28 00 00 80       push   r2
+ 664:    28 00 00 40       push   r1
+ 668:    74 27 ff fb       s32    [r7-5]<<2, r1
+ 66c:    e7 ff fe 7d       call   -387<<2        # 0x64
+ 670:    4b de 00 0c       addi   sp, sp, 12
+ 674:    0f de 40 00       sub    sp, sp, r8
+ 678:    08 06 00 00       mov    r0, r6
+ 67c:    04 40 00 08       movs   r2, 8
+ 680:    28 00 00 80       push   r2
+ 684:    48 47 ff ff       addi   r2, r7, -1
+ 688:    28 00 00 80       push   r2
+ 68c:    28 00 00 40       push   r1
+ 690:    74 27 ff fb       s32    [r7-5]<<2, r1
+ 694:    e7 ff fe 73       call   -397<<2        # 0x64
+ 698:    4b de 00 0c       addi   sp, sp, 12
+ 69c:    e7 ff ff 33       call   -205<<2        # 0x36c
+ 6a0:    4b de 00 10       addi   sp, sp, 16
+ 6a4:    74 47 ff fc       s32    [r7-4]<<2, r2
+ 6a8:    68 47 ff fc       l32    r2, [r7-4]<<2
+ 6ac:    0b c6 00 00       mov    sp, r6
+ 6b0:    2c 00 01 c0       pop    r7
+ 6b4:    2c 00 01 80       pop    r6
+ 6b8:    7c 00 00 00       ret   
+ 6bc:    28 00 01 80       push   r6
+ 6c0:    28 00 01 c0       push   r7
+ 6c4:    08 de 00 00       mov    r6, sp
+ 6c8:    08 e6 00 00       mov    r7, r6
+ 6cc:    10 07 3f 01       sra    r0, r7, r7, 1    # 0x2
+ 6d0:    4f de 00 20       subi   sp, sp, 32
+ 6d4:    04 20 00 14       movs   r1, 20
+ 6d8:    28 00 00 40       push   r1
+ 6dc:    04 20 00 00       movs   r1, 0
+ 6e0:    28 00 00 40       push   r1
+ 6e4:    48 27 ff fc       addi   r1, r7, -4
+ 6e8:    28 00 00 40       push   r1
+ 6ec:    e7 ff fe 53       call   -429<<2        # 0x3c
+ 6f0:    4b de 00 0c       addi   sp, sp, 12
+ 6f4:    04 3f ff ff       movs   r1, -1
+ 6f8:    74 27 ff fc       s32    [r7-4]<<2, r1
+ 6fc:    04 3f fd cc       movs   r1, -564
+ 700:    74 27 ff fd       s32    [r7-3]<<2, r1
+ 704:    04 20 01 a4       movs   r1, 420
+ 708:    74 27 ff fe       s32    [r7-2]<<2, r1
+ 70c:    04 20 00 45       movs   r1, 69
+ 710:    74 27 ff ff       s32    [r7-1]<<2, r1
+ 714:    04 20 04 b0       movs   r1, 1200
+ 718:    74 27 00 00       s32    [r7+0]<<2, r1
+ 71c:    04 20 00 05       movs   r1, 5
+ 720:    74 27 ff fb       s32    [r7-5]<<2, r1
+ 724:    68 27 ff fe       l32    r1, [r7-2]<<2
+ 728:    28 00 00 40       push   r1
+ 72c:    e7 ff ff 7d       call   -131<<2        # 0x524
+ 730:    4b de 00 04       addi   sp, sp, 4
+ 734:    04 20 00 00       movs   r1, 0
+ 738:    74 27 ff fa       s32    [r7-6]<<2, r1
+ 73c:    68 27 ff fa       l32    r1, [r7-6]<<2
+ 740:    68 47 ff fb       l32    r2, [r7-5]<<2
+ 744:    14 01 10 00       cmp    r1, r2
+ 748:    bc 00 00 16       bge    22        # 0x7a4
+ 74c:    dc 00 00 05       bun    5        # 0x764
+ 750:    68 27 ff fa       l32    r1, [r7-6]<<2
+ 754:    08 41 00 00       mov    r2, r1
+ 758:    48 21 00 01       addi   r1, r1, 1
+ 75c:    74 27 ff fa       s32    [r7-6]<<2, r1
+ 760:    df ff ff f6       bun    -10        # 0x73c
+ 764:    68 27 ff fa       l32    r1, [r7-6]<<2
+ 768:    10 01 0b 01       sla    r0, r1, r1, 1
+ 76c:    48 47 ff fc       addi   r2, r7, -4
+ 770:    08 42 08 00       add    r2, r2, r1
+ 774:    0c 42 08 00       sub    r2, r2, r1
+ 778:    68 42 00 00       l32    r2, [r2+0]<<2
+ 77c:    74 47 ff f9       s32    [r7-7]<<2, r2
+ 780:    68 27 ff f9       l32    r1, [r7-7]<<2
+ 784:    28 00 00 40       push   r1
+ 788:    e7 ff ff 66       call   -154<<2        # 0x524
+ 78c:    4b de 00 04       addi   sp, sp, 4
+ 790:    04 20 00 20       movs   r1, 32
+ 794:    28 00 00 40       push   r1
+ 798:    e7 ff fe 59       call   -423<<2        # 0x100
+ 79c:    4b de 00 04       addi   sp, sp, 4
+ 7a0:    df ff ff eb       bun    -21        # 0x750
+ 7a4:    04 20 00 0a       movs   r1, 10
+ 7a8:    28 00 00 40       push   r1
+ 7ac:    e7 ff fe 54       call   -428<<2        # 0x100
+ 7b0:    4b de 00 04       addi   sp, sp, 4
+ 7b4:    68 27 ff fb       l32    r1, [r7-5]<<2
+ 7b8:    28 00 00 40       push   r1
+ 7bc:    48 27 ff fc       addi   r1, r7, -4
+ 7c0:    28 00 00 40       push   r1
+ 7c4:    e7 ff fe fc       call   -260<<2        # 0x3b8
+ 7c8:    4b de 00 08       addi   sp, sp, 8
+ 7cc:    04 20 00 00       movs   r1, 0
+ 7d0:    74 27 ff fa       s32    [r7-6]<<2, r1
+ 7d4:    68 27 ff fa       l32    r1, [r7-6]<<2
+ 7d8:    68 47 ff fb       l32    r2, [r7-5]<<2
+ 7dc:    14 01 10 00       cmp    r1, r2
+ 7e0:    bc 00 00 16       bge    22        # 0x83c
+ 7e4:    dc 00 00 05       bun    5        # 0x7fc
+ 7e8:    68 27 ff fa       l32    r1, [r7-6]<<2
+ 7ec:    08 41 00 00       mov    r2, r1
+ 7f0:    48 21 00 01       addi   r1, r1, 1
+ 7f4:    74 27 ff fa       s32    [r7-6]<<2, r1
+ 7f8:    df ff ff f6       bun    -10        # 0x7d4
+ 7fc:    68 27 ff fa       l32    r1, [r7-6]<<2
+ 800:    10 01 0b 01       sla    r0, r1, r1, 1
+ 804:    48 47 ff fc       addi   r2, r7, -4
+ 808:    08 42 08 00       add    r2, r2, r1
+ 80c:    0c 42 08 00       sub    r2, r2, r1
+ 810:    68 42 00 00       l32    r2, [r2+0]<<2
+ 814:    74 47 ff f9       s32    [r7-7]<<2, r2
+ 818:    68 27 ff f9       l32    r1, [r7-7]<<2
+ 81c:    28 00 00 40       push   r1
+ 820:    e7 ff ff 40       call   -192<<2        # 0x524
+ 824:    4b de 00 04       addi   sp, sp, 4
+ 828:    04 20 00 20       movs   r1, 32
+ 82c:    28 00 00 40       push   r1
+ 830:    e7 ff fe 33       call   -461<<2        # 0x100
+ 834:    4b de 00 04       addi   sp, sp, 4
+ 838:    df ff ff eb       bun    -21        # 0x7e8
+ 83c:    e7 ff ff 75       call   -139<<2        # 0x614
+ 840:    0b c6 00 00       mov    sp, r6
+ 844:    2c 00 01 c0       pop    r7
+ 848:    2c 00 01 80       pop    r6
+ 84c:    7c 00 00 00       ret   
   ...
 1000:    22 22 22 22       not    r17, r2
   ...
diff --git a/poxim-gen.c b/poxim-gen.c
index 4ba5e0af..8b556b7b 100644
--- a/poxim-gen.c
+++ b/poxim-gen.c
@@ -26,7 +26,6 @@
 #define LOCAL_OFFSET (4)
 #define FUNC_PROLOG_SIZE (4 * (N_INSTRUCTIONS_FOR_FUNC_PROLOG))
 
-
 #if defined(TARGET_DEFS_ONLY)
 /* number of available registers */
 #define NB_REGS (5)
@@ -307,7 +306,6 @@ static void add(int r1, int r2, int r3) {
   gen_be32(0x02 << 26 | (r1 & 0xff) << 21 | (r2 & 0xff) << 16 |
            (r3 & 0xff) << 11);
 }
-
 static void addi(int rz, int rx, int i) {
   assert(rz <= POXIM_MAX_REGISTERS && rx <= POXIM_MAX_REGISTERS && i <= 0xFFFF);
   gen_be32(0b010010 << 26 | (rz & 0xff) << 21 | (rx & 0xff) << 16 |
@@ -324,6 +322,7 @@ static void cmpi(int rx, int i) {
   gen_be32(0b010111 << 26 | (rx & 0xff) << 16 | (i & 0xffff));
 }
 
+
 static void calli(int i) {
   assert(i <= 0x3ffffff);
   gen_be32(opcode_calli << 26 | (i & 0x3ffffff));
@@ -408,23 +407,47 @@ static void remi(int rz, int rx, int i) {
 static void movr(int r1, int r2) { add(r1, r2, 0); };
 
 static void mov(int r, int i) {
-  if (!(r <= POXIM_MAX_REGISTERS && i <= 0xFFFFF)) {
-    tcc_error("It's possible i have made a mistake, int is actually 20 "
-              "bits on a const mov, i'm sorry");
+  if (!(r <= POXIM_MAX_REGISTERS && i <= 0x1fffff)) {
+    tcc_error("int is 32 bits, but a immediate value can only be 20 bit in arch poxim");
   }
   // g((u32)i);
   // g(0x92fa);
   // g((u32)i);
   // g((u32)i);
-  gen_be32(opcode_mov << 26 | (r & 0b11111) << 21 | (i & 0xFFFFFFFF));
+  gen_be32(opcode_mov << 26 | (r & 0b11111) << 21 | (i & 0x1fffff));
 }
 
 static void movs(int r, int i) {
-  if (!(r <= POXIM_MAX_REGISTERS && i <= 0xFFFFF)) {
+  if (!(r <= POXIM_MAX_REGISTERS && i <= 0x1fffff)) {
     tcc_error("It's possible i have made a mistake, int is actually 20 "
               "bits on a const mov, i'm sorry");
   }
-  gen_be32(opcode_movs << 26 | (r & 0b11111) << 21 | (i & 0xFFFFFFFF));
+  gen_be32(opcode_movs << 26 | (r & 0b11111) << 21 | (i & 0x1fffff));
+}
+
+static void and(int rz, int rx, int ry) {
+  assert(rz <= POXIM_MAX_REGISTERS && rx <= POXIM_MAX_REGISTERS &&
+         ry <= POXIM_MAX_REGISTERS);
+  gen_be32(opcode_and << 26 | (rz & 0xff) << 21 | (rx & 0xff) << 16 |
+           (ry & 0xff) << 11);
+}
+
+static void andi(int rz, int rx, int i) {
+  assert(rz <= POXIM_MAX_REGISTERS && rx <= POXIM_MAX_REGISTERS);
+  movs(rt, i);
+  and(rz, rx, rt);
+}
+
+static void xor(int rz, int rx, int ry) {
+  assert(rz <= POXIM_MAX_REGISTERS && rx <= POXIM_MAX_REGISTERS &&
+         ry <= POXIM_MAX_REGISTERS);
+  gen_be32(opcode_xor << 26 | (rz & 0xff) << 21 | (rx & 0xff) << 16 |
+           (ry & 0xff) << 11);
+}
+static void xori(int rz, int rx, int i) {
+  assert(rz <= POXIM_MAX_REGISTERS && rx <= POXIM_MAX_REGISTERS);
+  movs(rt, i);
+  xor(rz, rx, rt);
 }
 
 static void s32(int rz, int rx, int i) {
@@ -449,7 +472,12 @@ static void shift(u8 sub_inst, int rz, int rx, int ry, unsigned int i) {
 
 static void sra(int rz, int rx, int ry, int i) { shift(0b111, rz, rx, ry, i); }
 
+// Rigt Logic
 static void srl(int rz, int rx, int ry, int i) { shift(0b101, rz, rx, ry, i); }
+// Left Logic
+static void sll(int rz, int rx, int ry, int i) { shift(0b001, rz, rx, ry, i); }
+// Left Arithmetic
+static void sla(int rz, int rx, int ry, int i) { shift(0b011, rz, rx, ry, i); }
 /***************************
  << END POXIM Instructions
 ****************************/
@@ -536,7 +564,7 @@ static void gen_modrm(int op_reg, int r, Sym *sym, int c) {
 ST_FUNC void load(int r, SValue *sv) {
   int v, t, ft, fc, fr, bt;
   u8 opcode = -1;
-  u32 imm = -1;
+  u32 imm = -1, rbp = bp2;
   SValue v1;
 
 #ifdef TCC_TARGET_PE
@@ -581,9 +609,9 @@ ST_FUNC void load(int r, SValue *sv) {
       // tcc_error("We aint supporting byte for now or bool");
       // o(0xbe0f); /* movsbl */
     } else if ((ft & VT_TYPE) == (VT_BYTE | VT_UNSIGNED)) {
-
-      tcc_error("We aint supporting unsigned byte for now or bool");
-      o(0xb60f); /* movzbl */
+      imm = (fc + LOCAL_OFFSET) & 0xFFFF;
+      opcode = opcode_l8;
+      // o(0xb60f); /* movzbl */
     } else if ((ft & VT_TYPE) == VT_SHORT) {
       tcc_error("We aint supporting short for now or bool");
       o(0xbf0f); /* movswl */
@@ -606,22 +634,32 @@ ST_FUNC void load(int r, SValue *sv) {
     } else if ((ft & VT_TYPE) == (VT_QLONG)) {
       /* l64 */
       tcc_error("poxim does not support VT_QLONG type");
+    } else if ((ft & VT_TYPE) == (VT_QLONG)) {
+      tcc_error("poxim does not support VT_QLONG type");
     } else {
       tcc_error("poxim does not support %x type", (ft & VT_TYPE));
     }
-    //DONE:  gen_modrm(r, fr, sv->sym, fc);
+    // DONE:  gen_modrm(r, fr, sv->sym, fc);
     if ((fr & VT_VALMASK) == VT_LOCAL) {
       /* currently, we use only bp2 as base */
-      gen_be32(opcode << 26 | (r + 1) << 21 | bp2 << 16 | (imm));
+      gen_be32(opcode << 26 | (r + 1) << 21 | rbp << 16 | (imm));
     } else {
-      gen_be32(opcode << 26 | (r + 1) << 21 | ((fr & VT_VALMASK) + 1) << 16);
+      u32 reg = ((fr & VT_VALMASK) + 1);
+      if (opcode == opcode_l8) {
+        u32 rtemp = rt2;
+        movr(rtemp, reg);
+        sll(r0, rtemp, rtemp, 2);
+        gen_be32(opcode << 26 | ((r + 1) & 0b11111) << 21 | rtemp << 16);
+      } else {
+        gen_be32(opcode << 26 | (r + 1) << 21 | reg << 16);
+      }
     }
     gen_poxim_direct_addr(fr, sv->sym, (fc));
 
   } else {
     if (v == VT_CONST) {
       // o(0xb8 + r);     /* mov $xx, r */
-      mov(r + 1, fc); /* mov r, fc */
+      movs(r + 1, fc); /* mov r, fc */
       // in x86 gen_addr32(fr, sv->sym, fc);
       // TODO: Check is this break examples
       if ((fr & VT_VALMASK) == VT_CONST) {
@@ -636,14 +674,15 @@ ST_FUNC void load(int r, SValue *sv) {
         if ((VT_LOCAL & VT_VALMASK) == VT_LOCAL) {
           /* in x86 would be lea xxx(%ebp), r */
           /* currently, we use only bp2 as base */
-          addi(r + 1, bp2, (fc + LOCAL_OFFSET) >> 2);
+          addi(r + 1, rbp, (fc + LOCAL_OFFSET) >> 2);
         } else {
-          assert(0 && "first time i saw this case, inspect further, although it must be correct anyways");
+          assert(0 && "first time i saw this case, inspect further, "
+                      "although it must be correct anyways");
           movr(r + 1, ((VT_LOCAL & VT_VALMASK) + 1));
         }
         // TODO:  check if we can do someething like this addi(r+1, bp2,
         // fc >> 2);
-        //  o(0x8d); 
+        //  o(0x8d);
         // TODO:@symbolcheck
         gen_poxim_direct_addr(VT_LOCAL, sv->sym, fc);
         // gen_modrm(r, VT_LOCAL, sv->sym, fc);
@@ -684,7 +723,7 @@ ST_FUNC void load(int r, SValue *sv) {
 ST_FUNC void store(int r, SValue *v) {
   int fr, bt, ft, fc;
   u32 opcode = -1;
-  u32 imm = -1;
+  u32 imm = -1, rbp = bp2;
 
 #ifdef TCC_TARGET_PE
   SValue v2;
@@ -716,15 +755,13 @@ ST_FUNC void store(int r, SValue *v) {
       o(0x66);
     }
     if (bt == VT_BYTE || bt == VT_BOOL) {
-      // tcc_error("(bt == VT_BYTE || bt == VT_BOOL poxim not hanlded %s",
-      //           __func__);
-      imm = (fc + LOCAL_OFFSET) >> 2 & 0xFFFF;
+      imm = (fc + LOCAL_OFFSET) & 0xFFFF;
       opcode = opcode_s8;
     } else if (bt == VT_INT) { // VT_INT
-      imm = (fc + LOCAL_OFFSET) >> 2 & 0xFFFF;
+      imm = ((fc + LOCAL_OFFSET) >> 2) & 0xFFFF;
       opcode = 0b011101;
     } else if (bt == VT_PTR) {
-      imm = (fc + LOCAL_OFFSET) >> 2 & 0xFFFF;
+      imm = ((fc + LOCAL_OFFSET) >> 2) & 0xFFFF;
       opcode = 0b011101;
     } else {
       tcc_error("%s Why did we get here, basice type bt = %x", __func__, bt);
@@ -733,30 +770,46 @@ ST_FUNC void store(int r, SValue *v) {
   if (fr == VT_CONST) {
     // TODO:  check the endiannes of this, does it need changing?
     if ((v->r & VT_VALMASK) == VT_LOCAL) {
-        movs(r + 1, (fc));
+      movs(r + 1, (fc));
     } else {
-        movr(r + 1, ((v->r & VT_VALMASK)+1));
+      movr(r + 1, ((v->r & VT_VALMASK) + 1));
     }
     gen_poxim_addr(v->r, v->sym, fc);
 
-
   } else if (fr == VT_LOCAL) {
     // tcc_error("VT_LOCAL poxim not hanlded %s", __func__);
     /* currently, we use only ebp as base */
     // v->r
+
     if ((v->r & VT_VALMASK) == VT_LOCAL) {
-       gen_be32(opcode << 26 | ((r + 1) & 0b11111) << 21 | bp2 << 16 | (imm));
+      gen_be32(opcode << 26 | ((r + 1) & 0b11111) << 21 | rbp << 16 | (imm));
     } else {
-        gen_be32(opcode << 26 | ((r + 1) & 0b11111) << 21 | ((v->r & VT_VALMASK) + 1) << 16);
+      u32 reg = ((v->r & VT_VALMASK) + 1);
+      if (opcode == opcode_s8) {
+        u32 rtemp = rt2;
+        movr(rtemp, reg);
+        sll(r0, rtemp, rtemp, 2);
+        gen_be32(opcode << 26 | ((r + 1) & 0b11111) << 21 | rtemp << 16);
+      } else {
+        gen_be32(opcode << 26 | ((r + 1) & 0b11111) << 21 | reg << 16);
+      }
     }
     gen_poxim_addr(v->r, v->sym, fc);
 
   } else if (v->r & VT_LVAL) {
-    //TODO: does this break anythin? s32(r + 1, fr + 1, 0);
+    // TODO: does this break anythin? s32(r + 1, fr + 1, 0);
     if ((v->r & VT_VALMASK) == VT_LOCAL) {
-       gen_be32(opcode << 26 | ((r + 1) & 0b11111) << 21 | bp2 << 16 | (imm));
+      gen_be32(opcode << 26 | ((r + 1) & 0b11111) << 21 | rbp << 16 | (imm));
     } else {
-       gen_be32(opcode << 26 | ((r + 1) & 0b11111) << 21 | ((v->r & VT_VALMASK) + 1) << 16);
+      u32 reg = ((v->r & VT_VALMASK) + 1);
+      if (opcode == opcode_s8) {
+        u32 rtemp = rt2;
+        movr(rtemp, reg);
+        sll(r0, rtemp, rtemp, 2);
+        gen_be32(opcode << 26 | ((r + 1) & 0b11111) << 21 | rtemp << 16);
+      } else {
+        gen_be32(opcode << 26 | ((r + 1) & 0b11111) << 21 | reg << 16);
+      }
     }
     gen_poxim_addr(v->r, v->sym, fc);
   } else if (fr != r) {
@@ -1186,7 +1239,7 @@ ST_FUNC int gjmp_cond(int op, int t) {
     break;
   } /* 0x95 */
   case TOK_ULE: {
-    assert(0 && "jmp cond not handled TOK_ULE");
+    opcode = opcode_bbt;
     break;
   } /* 0x96 */
   case TOK_UGT: {
@@ -1241,11 +1294,17 @@ ST_FUNC void gen_opi(int op) {
       c = vtop->c.i;
       if (op == '+') {
         addi(r + 1, r + 1, c);
-      } else {
+      } else if (op == '-') {
         subi(r + 1, r + 1, c);
+      } else if (op == '^') {
+        xori(r + 1, r + 1, c);
+      } else if (op == '&') {
+        andi(r + 1, r + 1, c);
+      } else {
+        assert(0 && "op not handled");
+      }
         // o(0x81);
         // oad(0xc0 | (opc << 3) | r, c);
-      }
     } else {
       gv2(RC_INT, RC_INT);
       r = vtop[-1].r;
@@ -1254,9 +1313,12 @@ ST_FUNC void gen_opi(int op) {
       // NOTE:  Do believe opc is the '+' or '-'
       if (op == '+') {
         add(r + 1, r + 1, fr + 1);
+      } if (op == '&') {
+        and(r + 1, r + 1, fr + 1);
       } else {
         sub(r + 1, r + 1, fr + 1);
       }
+
       // o((opc << 3) | 0x01);
       // o(0xc0 + r + fr * 8);
     }
@@ -1278,12 +1340,11 @@ ST_FUNC void gen_opi(int op) {
     opcode = 3;
     goto gen_op8;
   case '&':
-    tcc_error("%s poxim-gen not handled &", __func__);
-    opcode = 4;
+    opcode = opcode_and;
     goto gen_op8;
   case '^':
-    tcc_error("%s poxim-gen not handled ^", __func__);
-    opcode = 6;
+    // tcc_error("%s poxim-gen not handled ^", __func__);
+    opcode = opcode_xor;
     goto gen_op8;
   case '|':
     tcc_error("%s poxim-gen not handled | ", __func__);
@@ -1385,6 +1446,7 @@ ST_FUNC void gen_opi(int op) {
   case TOK_NE:
   case TOK_EQ:
   case TOK_LT:
+  case TOK_UGT:
   case TOK_ULT:
   case TOK_GT: {
   gen_cmp:
diff --git a/poxim-interp.cpp b/poxim-interp.cpp
index 272975f8..0d9f53a4 100644
--- a/poxim-interp.cpp
+++ b/poxim-interp.cpp
@@ -9,11 +9,13 @@
 #include <stdint.h>
 #include <stdio.h>
 #include <string.h>
+#include <assert.h>
 
-#define _DEBUG_POXIM
+
+// #define _DEBUG_POXIM
 #define _DEBUG_OUT
 
-#ifdef _DEBUG_POXIM
+#ifndef _DEBUG_POXIM
 #define printf(x, ...)
 #define puts(x)
 #endif
@@ -633,7 +635,9 @@ GLOBAL WatchDog W{};
 GLOBAL Terminal T{};
 GLOBAL FloatDevice F{};
 
-GLOBAL u32 DEFAULT_DEVICE = (u32)0x0;
+GLOBAL u32  DEFAULT_DEVICE32 = (u32)0x0;
+GLOBAL u16  DEFAULT_DEVICE16 = (u32)0x0;
+GLOBAL u8   DEFAULT_DEVICE8 =  (u32)0x0;
 
 /*==========================Registers & RAM========================*/
 
@@ -2232,7 +2236,8 @@ u32 &AccessDevice32(u32 index, OP op) {
     return F.FPU32[index];
   }
 
-  return DEFAULT_DEVICE;
+  assert(0 && " AccessDevice32 was not a valid device");
+  return DEFAULT_DEVICE32;
 }
 
 u16 &AccessDevice16(u32 index, OP op) {
@@ -2252,6 +2257,8 @@ u16 &AccessDevice16(u32 index, OP op) {
     index = (index - 0x80'80'88'80) / 2;
     return F.FPU16[index];
   }
+  assert(0 && " AccessDevice16 was not a valid device");
+  return DEFAULT_DEVICE16;
 }
 
 u8 &AccessDevice8(u32 index, OP op) {
@@ -2260,6 +2267,7 @@ u8 &AccessDevice8(u32 index, OP op) {
     return W.WD8[wd_index];
   }
 
+  // if (op == OP::l8 && index == 0x8888888A) {
   if (op == OP::l8 && index == 0x8888888A) {
     u32 t_index = (index - T.TERMINAL_ADRESS);
     T.IO8[t_index] = 48;
@@ -2280,9 +2288,12 @@ u8 &AccessDevice8(u32 index, OP op) {
       F.should_operate = true;
       F.wait_cycles = -2;
     }
+    printf("Hello index 0x%x, (index - 0x80'80'88'80) / 1 = 0x%x", index, (index - 0x80'80'88'80) / 1);
     index = (index - 0x80'80'88'80) / 1;
     return F.FPU8[index];
   }
+  assert(0 && " AccessDevice8 was not a valid device");
+  return DEFAULT_DEVICE8;
 }
 
 // NOTE(Everton): Maybe you need to change  the Endianess
diff --git a/poxim-link.c b/poxim-link.c
index ecb2b0bf..6570c68c 100644
--- a/poxim-link.c
+++ b/poxim-link.c
@@ -181,7 +181,7 @@ void relocate(TCCState *s1, ElfW_Rel *rel, int type, unsigned char *ptr,
 
   sym_index = ELFW(R_SYM)(rel->r_info);
 
-  assert( type == R_386_32 || type == R_386_PC32);
+  assert(type == R_386_32 || type == R_386_PC32);
 
   switch (type) {
   case R_386_32:
@@ -206,28 +206,44 @@ void relocate(TCCState *s1, ElfW_Rel *rel, int type, unsigned char *ptr,
       u32 inst = swap_endianness32(*inst_ptr);
       i32 opcode = bits_at(inst, 31, 26);
       i32 rest = 0;
+      b8 handled = 0;
 
       switch (opcode) {
-        case opcode_l32: {
-            i32 rz = bits_at(inst, 25, 21);
-            abs_val >>= 2;
-            rest = rz << 21 | rt << 16;
-            printf("inst = %B \n", inst);
-          break;
-        }
-        case opcode_call: {
-            abs_val >>= 2;
-            rest = rt << 16;
-          break;
-        }
-        default:
-          assert(0 && "unhandled case");
+      case opcode_l32: {
+        i32 rz = bits_at(inst, 25, 21);
+        abs_val >>= 2;
+        rest = rz << 21 | rt << 16;
+        printf("inst = %B \n", inst);
+        break;
+      }
+      case opcode_call: {
+        abs_val >>= 2;
+        rest = rt << 16;
+        break;
+      }
+      case opcode_mov:
+      case opcode_movs: {
+        i32 rz = bits_at(inst, 25, 21);
+        handled = 1;
+        abs_val = (abs_val >> 2) & 0x1fffff;
+        rest = (rz & 0b11111) << 21 | rt << 16;
+        *inst_ptr = swap_endianness32(opcode_mov << 26 
+																			| (rz & 0b11111) << 21 
+																			| (abs_val & 0xFFFFFFFF));
+        // *(inst_ptr2) = swap_endianness32(opcode_add << 26  | rest);
+
+        break;
+      }
+      default:
+        assert(0 && "unhandled case");
       }
 
-      *inst_ptr = swap_endianness32(0x00 << 26 
-                                     |(rt & 0b11111) << 21 
-                                     |(abs_val & 0xFFFFFFFF));
-      *(inst_ptr2) = swap_endianness32( opcode << 26 | rest);
+      if (!handled) {
+
+        *inst_ptr = swap_endianness32(0x00 << 26 | (rt & 0b11111) << 21 |
+                                      (abs_val & 0xFFFFFFFF));
+        *(inst_ptr2) = swap_endianness32(opcode << 26 | rest);
+      }
     }
     return;
     if (s1->output_type == TCC_OUTPUT_DLL) {
diff --git a/poxim.h b/poxim.h
index 15116f37..cde1a420 100644
--- a/poxim.h
+++ b/poxim.h
@@ -84,7 +84,7 @@ void set_bit(u32 *number, u8 nth_bit, u8 choice);
 void fill_bits(u32 *number, u8 start, u8 end, u8 bit_choice);
 
 /* pretty names for the registers */
-enum { r0 = 0, r1, r2, r3, r4, rf, bp, bp2, rt, rdiv, rmod, rmul, sp = 30 };
+enum { r0 = 0, r1, r2, r3, r4, rf, bp, bp2, rt, rt2, rdiv, rmod, rmul, sp = 30 };
 
 typedef enum : u8 {
   //:> Format Type 'U'
diff --git a/poxim.mak b/poxim.mak
index 20f0e2db..c81ff01c 100644
--- a/poxim.mak
+++ b/poxim.mak
@@ -47,12 +47,12 @@ run-i386: examples/ex1.c
 	# objdump	-b binary -Mintel,i386  -D ./x64code.bin -m i386 > x64code.s
 	# objcopy -O binary --only-section=.text ./$(out_dir)/$(test_cfile).i386.bin ./$(out_dir)/$(test_cfile).text.i386.dump
 
-EXAMPLES := poxim-ex1 poxim-ex2 poxim-ex3 poxim-fib-recursion poxim-print-alphabet poxim-print-num poxim-simple-if poxim-terminal poxim-while
+EXAMPLES := poxim-ex1 poxim-ex2 poxim-ex3 poxim-fib-recursion poxim-print-alphabet poxim-print-num poxim-simple-if poxim-terminal poxim-while poxim-sort poxim-puts
 examples: run
 	for var in $(EXAMPLES) ; do \
-		./tcc -nostdlib -static examples/$$var.c -o./examples/out/$$var.bin -I./ -I./include -L./ -Wl,--oformat=binary ; \
-		./poxim-dump --bin examples/out/$$var.bin > examples/out/$$var.poximdump ; \
-		./poxim-interp --bin examples/out/$$var.bin  examples/out/$$var.interp ; \
+		./tcc -nostdlib -static examples/$$var.c -o./examples/out/bin/$$var.bin -I./ -I./include -L./ -Wl,--oformat=binary && \
+		./poxim-dump --bin examples/out/bin/$$var.bin > examples/out/dump/$$var.poximdump && \
+		./poxim-interp --bin examples/out/bin/$$var.bin  examples/out/intep/$$var.interp ; \
 	done
 
 
diff --git a/tccgen.c b/tccgen.c
index 11c0f795..4664af57 100644
--- a/tccgen.c
+++ b/tccgen.c
@@ -2952,7 +2952,7 @@ redo:
          * long */
         gen_cast_s(VT_INT);
 #endif
-			#if defined(TCC_TARGET_POXIM)
+			#if defined(TCC_TARGET_POXIM) && 0
 			/*XXX:  REMBEMER, HUGE HACK
 				The ideia here is that TCC_POXIM back end will
 				deal with type shenanigans itself. It assumes
