diff --git a/examples/ex1.c b/examples/ex1.c
index 21a7fbee..f7b5ad34 100755
--- a/examples/ex1.c
+++ b/examples/ex1.c
@@ -1,21 +1,15 @@
 #!/usr/local/bin/tcc -run
 #include <tcclib.h>
 
-int mycock;
-int lol;
-int main(argc, argv);
+int main(void);
 
-void _start(void){
-  mycock = 69;
-  main(0 , &"");
-}
+// void _start(void){
+//   main();
+// }
 
-int main(argc, argv)
-  int argc;
-  char** argv;
+int main(void)
 {
-    lol = 420;
-    const int a = 2;
+    const int a = 1;
     const int b = 2;
     (void)a;
     (void)b;
diff --git a/out/ex1.bin b/out/ex1.bin
index 5a69ac3d..80c257dc 100755
Binary files a/out/ex1.bin and b/out/ex1.bin differ
diff --git a/out/ex1.i386.bin b/out/ex1.i386.bin
index fc723328..80c1cf58 100755
Binary files a/out/ex1.i386.bin and b/out/ex1.i386.bin differ
diff --git a/out/ex1.i386.objdump b/out/ex1.i386.objdump
index 32bc1389..2c5dab2b 100755
--- a/out/ex1.i386.objdump
+++ b/out/ex1.i386.objdump
@@ -7,29 +7,14 @@ Disassembly of section .data:
 00000000 <.data>:
        0:	55                   	push   ebp
        1:	89 e5                	mov    ebp,esp
-       3:	81 ec 00 00 00 00    	sub    esp,0x0
-       9:	b8 45 00 00 00       	mov    eax,0x45
-       e:	89 05 00 a0 04 08    	mov    DWORD PTR ds:0x804a000,eax
-      14:	b8 00 90 04 08       	mov    eax,0x8049000
-      19:	50                   	push   eax
-      1a:	b8 00 00 00 00       	mov    eax,0x0
-      1f:	50                   	push   eax
-      20:	e8 05 00 00 00       	call   0x2a
-      25:	83 c4 08             	add    esp,0x8
-      28:	c9                   	leave
-      29:	c3                   	ret
-      2a:	55                   	push   ebp
-      2b:	89 e5                	mov    ebp,esp
-      2d:	81 ec 08 00 00 00    	sub    esp,0x8
-      33:	b8 a4 01 00 00       	mov    eax,0x1a4
-      38:	89 05 04 a0 04 08    	mov    DWORD PTR ds:0x804a004,eax
-      3e:	b8 02 00 00 00       	mov    eax,0x2
-      43:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
-      46:	b8 02 00 00 00       	mov    eax,0x2
-      4b:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
-      4e:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
-      51:	8b 4d f8             	mov    ecx,DWORD PTR [ebp-0x8]
-      54:	01 c8                	add    eax,ecx
-      56:	c9                   	leave
-      57:	c3                   	ret
+       3:	81 ec 08 00 00 00    	sub    esp,0x8
+       9:	b8 01 00 00 00       	mov    eax,0x1
+       e:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
+      11:	b8 02 00 00 00       	mov    eax,0x2
+      16:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
+      19:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
+      1c:	8b 4d f8             	mov    ecx,DWORD PTR [ebp-0x8]
+      1f:	01 c8                	add    eax,ecx
+      21:	c9                   	leave
+      22:	c3                   	ret
 	...
diff --git a/out/ex1.poximdump b/out/ex1.poximdump
index 2ae46efc..c4003075 100755
--- a/out/ex1.poximdump
+++ b/out/ex1.poximdump
@@ -1,28 +1,14 @@
    0:    28 00 01 80       push r6
    4:    08 de 00 00       mov r6, sp
-   8:    4f de 00 00       subi sp, sp, 0
-   c:    00 20 00 45       mov r1, 69
-  10:    00 20 00 00       mov r1, 0
-  14:    00 20 00 00       mov r1, 0
-  18:    50 00 20 00       muli r0, r0, 8192
-  1c:    00 50 e8 10       mov r2, 1107984
-  20:    00 00 00 0b       mov r0, 11
-  24:    de 40 00 0b       bun -29360117
-  28:    c6 00 00 2c       biv -33554388
-  2c:    00 01 80 7c       mov r0, 98428
-  30:    00 00 00 28       mov r0, 40
-  34:    00 01 80 08       mov r0, 98312
-  38:    de 00 00 4f       bun -33554353
-  3c:    de 00 08 00       bun -33552384
-  40:    21 00 a4 00       not r8, r0
-  44:    20 00 00 00       not r0, r0
-  48:    20 00 02 74       not r0, r0
-  4c:    26 ff fc 00       xor r23, sr, sr
-  50:    20 00 02 74       not r0, r0
-  54:    26 ff f8 68       xor r23, sr, sr
-  58:    26 ff fc 68       xor r23, sr, sr
-  5c:    46 ff f8 01       unkown
-  60:    c8 89 c2 0b       ble 9028107
-  64:    c6 00 00 2c       biv -33554388
-  68:    00 01 80 7c       mov r0, 98428
+   8:    4f de 00 08       subi sp, sp, 8
+   c:    00 20 00 01       mov r1, 1
+  10:    74 26 ff fc       s32 [r6-4]<<2, r1
+  14:    00 20 00 02       mov r1, 2
+  18:    74 26 ff f8       s32 [r6-8]<<2, r1
+  1c:    68 26 ff fc       l32 r1,  [r6-4]<<2
+  20:    68 46 ff f8       l32 r2,  [r6-8]<<2
+  24:    01 c8 89 c2       mov r14, 559554
+  28:    0b c6 00 00       mov sp, r6
+  2c:    2c 00 01 80       pop r6
+  30:    7c 00 00 00       ret
   ...
diff --git a/out/ex1.x86.dump b/out/ex1.x86.dump
new file mode 100644
index 00000000..e69de29b
diff --git a/poxim-dump.c b/poxim-dump.c
index 42184367..0b185d64 100644
--- a/poxim-dump.c
+++ b/poxim-dump.c
@@ -334,6 +334,7 @@ internal void sprint_instruction(char src[512], PoximInstruction inst) {
   char result[512] = {0};
   char rl[8], rz[8], rx[8], ry[8];
   char assembly_text[128];
+	char* bop;
 
   switch (inst.O) {
   case mov: {
@@ -618,51 +619,57 @@ internal void sprint_instruction(char src[512], PoximInstruction inst) {
 
   case l8: {
     inst.I = extend_bit_at(inst.I, 15);
+		bop = (i32)inst.I < 0 ? "" : "+";
     reg2str(rz, inst.Z);
     reg2str(rx, inst.X);
-    snprintf(assembly_text, count_of(assembly_text), "l8 %s,  [%s + %d]", rz,
-             rx, inst.I);
+    snprintf(assembly_text, count_of(assembly_text), "l8 %s,  [%s%s%d]", rz,
+             rx, bop, inst.I);
     break;
   }
 
   case l16: {
     inst.I = extend_bit_at(inst.I, 15);
+		bop = (i32)inst.I < 0 ? "" : "+";
     reg2str(rz, inst.Z);
     reg2str(rx, inst.X);
-    snprintf(assembly_text, count_of(assembly_text), "l16 %s,  [%s + %d] << 1",
-             rz, rx, inst.I);
+    snprintf(assembly_text, count_of(assembly_text), "l16 %s,  [%s%s%d]<<1",
+             rz, rx, bop, inst.I);
     break;
   }
   case l32: {
     inst.I = extend_bit_at(inst.I, 15);
+		bop = (i32)inst.I < 0 ? "" : "+";
     reg2str(rz, inst.Z);
     reg2str(rx, inst.X);
-    snprintf(assembly_text, count_of(assembly_text), "l32 %s,  [%s + %d] << 2",
-             rz, rx, inst.I);
+    snprintf(assembly_text, count_of(assembly_text), "l32 %s,  [%s%s%d]<<2",
+             rz, rx, bop, inst.I);
     break;
   }
   case s8: {
     inst.I = extend_bit_at(inst.I, 15);
+		bop = (i32)inst.I < 0 ? "" : "+";
     reg2str(rz, inst.Z);
     reg2str(rx, inst.X);
-    snprintf(assembly_text, count_of(assembly_text), "s8 [%s + %d], %s", rx,
-             inst.I, rz);
+    snprintf(assembly_text, count_of(assembly_text), "s8 [%s%s%d], %s", rx,
+             bop, inst.I, rz);
     break;
   }
   case s16: {
     inst.I = extend_bit_at(inst.I, 15);
+		bop = (i32)inst.I < 0 ? "" : "+";
     reg2str(rz, inst.Z);
     reg2str(rx, inst.X);
-    snprintf(assembly_text, count_of(assembly_text), "s16 [%s + %d], %s", rx,
-             inst.I, rz);
+    snprintf(assembly_text, count_of(assembly_text), "s16 [%s%s%d]<<1, %s", rx,
+             bop, inst.I, rz);
     break;
   }
   case s32: {
     inst.I = extend_bit_at(inst.I, 15);
+		bop = (i32)inst.I < 0 ? "" : "+";
     reg2str(rz, inst.Z);
     reg2str(rx, inst.X);
-    snprintf(assembly_text, count_of(assembly_text), "s32 [%s + %d], %s", rx,
-             inst.I, rz);
+    snprintf(assembly_text, count_of(assembly_text), "s32 [%s%s%d]<<2, %s", rx,
+             bop, inst.I, rz);
     break;
   }
   case bae: {
diff --git a/poxim-gen.c b/poxim-gen.c
index 5e1ac25a..d939d03d 100644
--- a/poxim-gen.c
+++ b/poxim-gen.c
@@ -202,6 +202,16 @@ static const u16 swap_endianness16(u16 num) {
 /***************************
  >> START POXIM Instructions
 ****************************/
+b8 first_func = 0;
+ST_FUNC void poxim_compile_init(struct TCCState *s) {
+  // o(0xcafebabe);
+}
+
+ST_FUNC void poxim_gen_init(struct TCCState *s)
+{
+}
+
+
 static void add(int r1, int r2, int r3) {
   assert(r1 <= POXIM_MAX_REGISTERS && r2 <= POXIM_MAX_REGISTERS &&
          r3 <= POXIM_MAX_REGISTERS);
@@ -577,7 +587,8 @@ ST_FUNC void gfunc_call(int nb_args) {
         size = 8;
       else
         size = 12;
-      oad(0xec81, size); /* sub $xxx, %esp */
+      // oad(0xec81, size); /* sub $xxx, %esp */
+      sub(sp, sp, size); /* sub sp, sp, xxx */
       if (size == 12)
         o(0x7cdb);
       else
diff --git a/tcc.h b/tcc.h
index 18319645..c4c18d2c 100644
--- a/tcc.h
+++ b/tcc.h
@@ -1666,6 +1666,8 @@ static inline void add64le(unsigned char *p, int64_t x) {
 }
 /* ------------ poxim-gen.c ------------ */
 #if defined TCC_TARGET_POXIM
+ST_FUNC void poxim_compile_init(struct TCCState *s);
+ST_FUNC void poxim_gen_init(struct TCCState *s);
 ST_FUNC void g(int c);
 ST_FUNC void gen_le16(int c);
 ST_FUNC void gen_le32(int c);
diff --git a/tccgen.c b/tccgen.c
index fd0680fc..f21c940e 100644
--- a/tccgen.c
+++ b/tccgen.c
@@ -359,6 +359,9 @@ ST_FUNC void tccgen_init(TCCState *s1)
     vtop = vstack - 1;
     memset(vtop, 0, sizeof *vtop);
 
+#ifdef TCC_TARGET_POXIM
+    poxim_gen_init(s1);
+#endif
     /* define some often used types */
     int_type.t = VT_INT;
 
@@ -368,6 +371,7 @@ ST_FUNC void tccgen_init(TCCState *s1)
     char_pointer_type = char_type;
     mk_pointer(&char_pointer_type);
 
+
     func_old_type.t = VT_FUNC;
     func_old_type.ref = sym_push(SYM_FIELD, &int_type, 0, 0);
     func_old_type.ref->f.func_call = FUNC_CDECL;
@@ -390,6 +394,9 @@ ST_FUNC int tccgen_compile(TCCState *s1)
 
     tcc_debug_start(s1);
     tcc_tcov_start (s1);
+#ifdef TCC_TARGET_POXIM
+    poxim_compile_init(s1);
+#endif
 #ifdef TCC_TARGET_ARM
     arm_init(s1);
 #endif
